-- phpMyAdmin SQL Dump
-- version 3.4.8
-- http://www.phpmyadmin.net
--
-- 主机: 220.166.64.240
-- 生成日期: 2014 年 10 月 09 日 18:26
-- 服务器版本: 5.1.65
-- PHP 版本: 5.2.17

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `92php2013`
--

-- --------------------------------------------------------

--
-- 表的结构 `admin`
--

CREATE TABLE IF NOT EXISTS `admin` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  `rights` int(1) NOT NULL,
  `loginTime` int(20) NOT NULL,
  `ip` varchar(20) NOT NULL,
  `loginSum` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `admin`
--

INSERT INTO `admin` (`id`, `username`, `password`, `rights`, `loginTime`, `ip`, `loginSum`) VALUES
(1, 'admin', 'admin', 1, 1410182517, '61.139.126.203', 42);

-- --------------------------------------------------------

--
-- 表的结构 `adminlog`
--

CREATE TABLE IF NOT EXISTS `adminlog` (
  `id` int(6) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL,
  `password` varchar(30) NOT NULL,
  `addtime` int(20) NOT NULL,
  `ip` varchar(20) NOT NULL,
  `state` varchar(5) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=72 ;

--
-- 转存表中的数据 `adminlog`
--

INSERT INTO `adminlog` (`id`, `username`, `password`, `addtime`, `ip`, `state`) VALUES
(61, 'admin', 'admin', 1409226146, '127.0.0.1', '1'),
(62, 'admin', 'admin', 1409227107, '61.139.126.203', '1'),
(63, 'admin', 'admin', 1409235746, '118.123.16.14', '1'),
(64, 'admin', 'admin', 1409241207, '61.139.126.203', '1'),
(65, 'admin', 'admin', 1409280335, '61.139.126.203', '1'),
(66, 'admin', 'admin', 1409299859, '118.123.16.14', '1'),
(67, 'admin', 'admin', 1409369539, '118.123.16.14', '1'),
(68, 'admin', 'admin', 1409369639, '61.139.126.203', '1'),
(69, 'admin', 'admin', 1409387649, '118.123.16.14', '1'),
(70, 'admin', 'admin', 1409393717, '118.123.16.14', '1'),
(71, 'admin', 'admin', 1410182517, '61.139.126.203', '1');

-- --------------------------------------------------------

--
-- 表的结构 `article`
--

CREATE TABLE IF NOT EXISTS `article` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `typeid` int(5) NOT NULL,
  `author` varchar(30) NOT NULL,
  `com` varchar(30) NOT NULL,
  `hits` int(10) NOT NULL,
  `inputer` varchar(30) NOT NULL,
  `addtime` int(20) NOT NULL,
  `content` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=79 ;

--
-- 转存表中的数据 `article`
--

INSERT INTO `article` (`id`, `title`, `typeid`, `author`, `com`, `hits`, `inputer`, `addtime`, `content`) VALUES
(65, '公司简介', 15, 'admin', '原创', 0, 'admin', 1409391451, '<p>\r\n	深圳市小易电子商务有限公司</p>\r\n'),
(66, '诚聘英才', 15, 'admin', '原创', 0, 'admin', 1409391597, '<p>\r\n	<span style="text-transform: none; text-indent: 0px; letter-spacing: normal; display: inline !important; font: 12px/20px tahoma, arial, verdana, geneva, sans-serif; white-space: normal; float: none; color: rgb(0,0,0); word-spacing: 0px; -webkit-text-stroke-width: 0px">心有多大胆，人有多大产！</span></p>\r\n<p>\r\n	招聘PHP攻城狮！！！哈哈哈</p>\r\n'),
(67, '联系我们', 15, 'admin', '原创', 0, 'admin', 1409391665, '<p>\r\n	15220187909</p>\r\n'),
(68, '新用户注册', 20, 'admin', '原创', 0, 'admin', 1409391733, '<p>\r\n	哈哈哈注册吧</p>\r\n'),
(69, '如何购买', 20, 'admin', '原创', 0, 'admin', 1409391798, '<p>\r\n	怎么购买&nbsp; 拿钱来 就可以了 哈哈哈</p>\r\n'),
(70, '在线支付', 21, 'admin', '原创', 0, 'admin', 1409391874, '<p>\r\n	转账</p>\r\n'),
(71, '货到付款', 21, 'admin', '原创', 0, 'admin', 1409391948, '<p>\r\n	货到了才付款&nbsp; 给现金</p>\r\n'),
(72, '银行汇款', 21, 'admin', '原创', 0, 'admin', 1409392016, '<p>\r\n	银行打钱给我</p>\r\n'),
(73, '配送运费说明', 22, 'admin', '原创', 0, 'admin', 1409392273, '<p>\r\n	啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊&nbsp; 加钱</p>\r\n'),
(74, '配送时效', 22, 'admin', '原创', 0, 'admin', 1409392348, '<p>\r\n	阿萨飒飒</p>\r\n'),
(75, '货到付款范围', 22, 'admin', '原创', 0, 'admin', 1409392414, '<p>\r\n	啊啊大打算</p>\r\n'),
(76, '退换货政策', 23, 'admin', '原创', 0, 'admin', 1409392457, '<p>\r\n	<u>啊啊大苏打</u></p>\r\n'),
(77, '退换货办理', 23, 'admin', '原创', 0, 'admin', 1409392528, '<p>\r\n	啊啊啊啊</p>\r\n'),
(78, '投诉建议', 23, 'admin', '原创', 0, 'admin', 1409392565, '<p>\r\n	啊啊啊啊啊</p>\r\n');

-- --------------------------------------------------------

--
-- 表的结构 `articletype`
--

CREATE TABLE IF NOT EXISTS `articletype` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `typename` varchar(50) NOT NULL,
  `leixing` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=24 ;

--
-- 转存表中的数据 `articletype`
--

INSERT INTO `articletype` (`id`, `typename`, `leixing`) VALUES
(15, '关于商城', '关于我们'),
(16, '热门活动', '文章动态'),
(17, '最新动态', '文章动态'),
(18, '网站公告', '文章动态'),
(19, '会员活动', '文章动态'),
(20, '新手指南', '帮助中心'),
(21, '支付方式', '帮助中心'),
(22, '配送方式', '帮助中心'),
(23, '售后服务', '帮助中心');

-- --------------------------------------------------------

--
-- 表的结构 `assess`
--

CREATE TABLE IF NOT EXISTS `assess` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(5) NOT NULL,
  `issh` int(1) NOT NULL,
  `istop` int(1) NOT NULL,
  `recommend` int(1) NOT NULL,
  `pinglun` int(1) NOT NULL,
  `content` text NOT NULL,
  `usernameshow` varchar(100) NOT NULL,
  `addtime` int(20) NOT NULL,
  `ip` varchar(20) NOT NULL,
  `inputer` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=gb2312 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `consult`
--

CREATE TABLE IF NOT EXISTS `consult` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `typeid` int(5) NOT NULL,
  `pid` int(5) NOT NULL,
  `ishf` int(1) NOT NULL,
  `issh` int(1) NOT NULL,
  `content` text NOT NULL,
  `recontent` text NOT NULL,
  `usernameshow` varchar(100) NOT NULL,
  `ip` varchar(20) NOT NULL,
  `addtime` int(30) NOT NULL,
  `inputer` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=15 ;

--
-- 转存表中的数据 `consult`
--

INSERT INTO `consult` (`id`, `typeid`, `pid`, `ishf`, `issh`, `content`, `recontent`, `usernameshow`, `ip`, `addtime`, `inputer`) VALUES
(12, 1, 21, 1, 1, '退换货', '回复内容', 'xingxing', '管理员', 1315647822, '后盾网'),
(13, 9, 22, 1, 1, '内容咨询的内容', '欢迎收看后盾网视频教程！', 'mengkai', '管理员', 1315647845, '后盾网'),
(14, 1, 22, 1, 1, '欢迎收看后盾网视频教程！', '', 'xingxing', '管理员', 1315647866, '后盾网');

-- --------------------------------------------------------

--
-- 表的结构 `consulttype`
--

CREATE TABLE IF NOT EXISTS `consulttype` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `typename` varchar(100) NOT NULL,
  `typeorder` int(5) NOT NULL,
  `typezt` int(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=11 ;

--
-- 转存表中的数据 `consulttype`
--

INSERT INTO `consulttype` (`id`, `typename`, `typeorder`, `typezt`) VALUES
(1, '关于退换货', 7, 1),
(3, '关于售后', 100, 1),
(4, '关于运输', 200, 1),
(7, '新的咨询', 11, 1),
(8, '123', 300, 1),
(9, '送货问题', 12, 1),
(10, '1232131', 11, 1);

-- --------------------------------------------------------

--
-- 表的结构 `favorites`
--

CREATE TABLE IF NOT EXISTS `favorites` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `pid` int(10) NOT NULL,
  `username` varchar(150) NOT NULL,
  `addtime` int(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=gb2312 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `feedback`
--

CREATE TABLE IF NOT EXISTS `feedback` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `typeid` int(5) NOT NULL,
  `issh` int(1) NOT NULL,
  `ishf` int(1) NOT NULL,
  `content` text NOT NULL,
  `recontent` text NOT NULL,
  `usernameshow` varchar(150) NOT NULL,
  `ip` varchar(100) NOT NULL,
  `addtime` int(20) NOT NULL,
  `inputer` varchar(150) NOT NULL,
  `qq` varchar(20) NOT NULL,
  `mobile` varchar(20) NOT NULL,
  `email` varchar(50) NOT NULL,
  `wangwang` varchar(60) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=12 ;

--
-- 转存表中的数据 `feedback`
--

INSERT INTO `feedback` (`id`, `typeid`, `issh`, `ishf`, `content`, `recontent`, `usernameshow`, `ip`, `addtime`, `inputer`, `qq`, `mobile`, `email`, `wangwang`) VALUES
(6, 13, 1, 0, '欢迎收看后盾网视频教程！', 'www.houdunwang.com', 'mengkai', '管理员', 1315917577, '后盾网', '', '', '', ''),
(7, 13, 1, 1, '欢迎大家收看我的视频，希望同学们学有所成！', '你好', 'mengkai', '管理员', 1315917595, '后盾网', '', '', '', ''),
(8, 0, 0, 0, '123', '', '123', 'IP地址', 1318345553, '123', '', '12345678901', '', ''),
(9, 0, 0, 0, '&lt;A href=&quot;&quot;&gt;超链到我的网站吧&lt;/a&gt;', '', '孟凯', '127.0.0.1', 1318346356, '孟凯', '1234567', '12345678901', 'mengkai@msn.com', 'wan@msn.com'),
(10, 0, 1, 0, '新的留言内容！', '', '孟凯', '127.0.0.1', 1318347036, '孟凯', '1234567', '18612345678', 'mengkai@msn.com', 'wan@msn.com'),
(11, 0, 1, 0, 'aaaaaaaaa', '', 'aa', '61.139.126.203', 1409310822, 'aa', 'aaaaaaaaa', '12345678911', 'aaaaaaaa', 'aaaaaaa');

-- --------------------------------------------------------

--
-- 表的结构 `feedbacktype`
--

CREATE TABLE IF NOT EXISTS `feedbacktype` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `typename` varchar(100) NOT NULL,
  `typeorder` int(10) NOT NULL,
  `typezt` int(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=17 ;

--
-- 转存表中的数据 `feedbacktype`
--

INSERT INTO `feedbacktype` (`id`, `typename`, `typeorder`, `typezt`) VALUES
(13, '售前咨询', 1, 1),
(14, '活动咨询', 2, 1),
(15, '分类名称', 3, 1),
(16, '发展意见', 4, 1);

-- --------------------------------------------------------

--
-- 表的结构 `hdd_admin`
--

CREATE TABLE IF NOT EXISTS `hdd_admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` char(20) NOT NULL DEFAULT '' COMMENT '管理员帐号',
  `password` char(32) NOT NULL DEFAULT '' COMMENT '管理员密码',
  `logintime` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '上一次登录时间',
  `loginip` char(20) NOT NULL DEFAULT '' COMMENT '上一次登录的IP',
  `lock` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '1:锁定   0:未锁定',
  PRIMARY KEY (`id`),
  KEY `account` (`username`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='后台管理员' AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `hdd_admin`
--

INSERT INTO `hdd_admin` (`id`, `username`, `password`, `logintime`, `loginip`, `lock`) VALUES
(1, 'admin', '21232f297a57a5a743894a0e4a801fc3', 1394466566, '183.11.61.77', 0);

-- --------------------------------------------------------

--
-- 表的结构 `hdd_atme`
--

CREATE TABLE IF NOT EXISTS `hdd_atme` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `wid` int(11) NOT NULL COMMENT '提到我的微博ID',
  `uid` int(11) NOT NULL COMMENT '所属用户ID',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`),
  KEY `wid` (`wid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='@提到我的微博' AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_comment`
--

CREATE TABLE IF NOT EXISTS `hdd_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(255) NOT NULL DEFAULT '' COMMENT '评论内容',
  `time` int(10) unsigned NOT NULL COMMENT '评论时间',
  `uid` int(11) NOT NULL COMMENT '评论用户的ID',
  `wid` int(11) NOT NULL COMMENT '所属微博ID',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`),
  KEY `wid` (`wid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='微博评论表' AUTO_INCREMENT=6 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_follow`
--

CREATE TABLE IF NOT EXISTS `hdd_follow` (
  `follow` int(10) unsigned NOT NULL COMMENT '关注用户的ID',
  `fans` int(10) unsigned NOT NULL COMMENT '粉丝用户ID',
  `gid` int(11) NOT NULL COMMENT '所属关注分组ID',
  KEY `follow` (`follow`),
  KEY `fans` (`fans`),
  KEY `gid` (`gid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='关注与粉丝表';

-- --------------------------------------------------------

--
-- 表的结构 `hdd_group`
--

CREATE TABLE IF NOT EXISTS `hdd_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NOT NULL DEFAULT '' COMMENT '分组名称',
  `uid` int(11) NOT NULL COMMENT '所属用户的ID',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='关注分组表' AUTO_INCREMENT=2 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_keep`
--

CREATE TABLE IF NOT EXISTS `hdd_keep` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uid` int(11) NOT NULL COMMENT '收藏用户的ID',
  `time` int(10) unsigned NOT NULL COMMENT '收藏时间',
  `wid` int(11) NOT NULL COMMENT '收藏微博的ID',
  PRIMARY KEY (`id`),
  KEY `wid` (`wid`),
  KEY `uid` (`uid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='收藏表' AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_letter`
--

CREATE TABLE IF NOT EXISTS `hdd_letter` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `from` int(11) NOT NULL COMMENT '发私用户ID',
  `content` varchar(255) NOT NULL DEFAULT '' COMMENT '私信内容',
  `time` int(10) unsigned NOT NULL COMMENT '私信发送时间',
  `uid` int(11) NOT NULL COMMENT '所属用户ID（收信人）',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='私信表' AUTO_INCREMENT=2 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_picture`
--

CREATE TABLE IF NOT EXISTS `hdd_picture` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `mini` varchar(60) NOT NULL DEFAULT '' COMMENT '小图',
  `medium` varchar(60) NOT NULL DEFAULT '' COMMENT '中图',
  `max` varchar(60) NOT NULL DEFAULT '' COMMENT '大图',
  `wid` int(11) NOT NULL COMMENT '所属微博ID',
  PRIMARY KEY (`id`),
  KEY `wid` (`wid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='微博配图表' AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_user`
--

CREATE TABLE IF NOT EXISTS `hdd_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `account` char(20) NOT NULL DEFAULT '' COMMENT '账号',
  `password` char(32) NOT NULL DEFAULT '' COMMENT '密码',
  `registime` int(10) unsigned NOT NULL COMMENT '注册时间',
  `lock` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否锁定（0：否，1：是）',
  PRIMARY KEY (`id`),
  UNIQUE KEY `account` (`account`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='用户表' AUTO_INCREMENT=3 ;

--
-- 转存表中的数据 `hdd_user`
--

INSERT INTO `hdd_user` (`id`, `account`, `password`, `registime`, `lock`) VALUES
(1, 'admin', '21232f297a57a5a743894a0e4a801fc3', 0, 0),
(2, 'yiwenbing', 'cdf7eea34588b2110504ba36261a084a', 1373522125, 0);

-- --------------------------------------------------------

--
-- 表的结构 `hdd_userinfo`
--

CREATE TABLE IF NOT EXISTS `hdd_userinfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(45) NOT NULL DEFAULT '' COMMENT '用户昵称',
  `truename` varchar(45) DEFAULT NULL COMMENT '真实名称',
  `sex` enum('男','女') NOT NULL DEFAULT '男' COMMENT '性别',
  `location` varchar(45) NOT NULL DEFAULT '' COMMENT '所在地',
  `constellation` char(10) NOT NULL DEFAULT '' COMMENT '星座',
  `intro` varchar(100) NOT NULL DEFAULT '' COMMENT '一句话介绍自己',
  `face50` varchar(60) NOT NULL DEFAULT '' COMMENT '50*50头像',
  `face80` varchar(60) NOT NULL DEFAULT '' COMMENT '80*80头像',
  `face180` varchar(60) NOT NULL DEFAULT '' COMMENT '180*180头像',
  `style` varchar(45) NOT NULL DEFAULT 'default' COMMENT '个性模版',
  `follow` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '关注数',
  `fans` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '粉丝数',
  `weibo` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '微博数',
  `uid` int(11) NOT NULL COMMENT '所属用户ID',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='用户信息表' AUTO_INCREMENT=2 ;

-- --------------------------------------------------------

--
-- 表的结构 `hdd_weibo`
--

CREATE TABLE IF NOT EXISTS `hdd_weibo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(255) NOT NULL DEFAULT '' COMMENT '微博内容',
  `isturn` int(11) NOT NULL DEFAULT '0' COMMENT '是否转发（0：原创， 如果是转发的则保存该转发微博的ID）',
  `time` int(10) unsigned NOT NULL COMMENT '发布时间',
  `turn` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '转发次数',
  `keep` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '收藏次数',
  `comment` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '收藏次数',
  `uid` int(11) NOT NULL COMMENT '所属用户的ID',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='微博表' AUTO_INCREMENT=7 ;

-- --------------------------------------------------------

--
-- 表的结构 `hd_access`
--

CREATE TABLE IF NOT EXISTS `hd_access` (
  `role_id` smallint(6) unsigned NOT NULL,
  `node_id` smallint(6) unsigned NOT NULL,
  `level` tinyint(1) NOT NULL,
  `module` varchar(50) DEFAULT NULL,
  KEY `groupId` (`role_id`),
  KEY `nodeId` (`node_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `hd_access`
--

INSERT INTO `hd_access` (`role_id`, `node_id`, `level`, `module`) VALUES
(7, 22, 3, NULL),
(6, 24, 3, NULL);

-- --------------------------------------------------------

--
-- 表的结构 `hd_attr`
--

CREATE TABLE IF NOT EXISTS `hd_attr` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` char(10) NOT NULL DEFAULT '',
  `color` char(10) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- 转存表中的数据 `hd_attr`
--

INSERT INTO `hd_attr` (`id`, `name`, `color`) VALUES
(1, '置顶', '#f00f00'),
(2, '推荐', 'green'),
(3, '精华', 'blue');

-- --------------------------------------------------------

--
-- 表的结构 `hd_blog`
--

CREATE TABLE IF NOT EXISTS `hd_blog` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL DEFAULT '',
  `content` text,
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  `click` smallint(6) unsigned NOT NULL DEFAULT '0',
  `cid` int(10) unsigned NOT NULL,
  `del` tinyint(1) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `cid` (`cid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=73 ;

--
-- 转存表中的数据 `hd_blog`
--

INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(6, 'PHP 的真正威力源自于它的函数', '<h2 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">创建 PHP 函数</h2><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">函数是一种可以在任何被需要的时候执行的代码块。</p><h3 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">创建 PHP 函数：</h3><ol style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN-TOP: 10px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-LEFT: 35px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" class=" list-paddingleft-2"><li><p>所有的函数都使用关键词 &quot;function()&quot; 来开始</p></li><li><p>命名函数 - 函数的名称应该提示出它的功能。函数名称以字母或下划线开头。</p></li><li><p>添加 &quot;{&quot; - 开口的花括号之后的部分是函数的代码。</p></li><li><p>插入函数代码</p></li><li><p>添加一个 &quot;}&quot; - 函数通过关闭花括号来结束。</p></li></ol><h3 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">例子</h3><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">一个简单的函数，在其被调用时能输出我的名称的：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px"><br/></pre><h2 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">使用 PHP 函数</h2><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">现在，我们要在 PHP 脚本中使用这个函数了：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px"><br/></pre><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">以上代码的输出：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px">Hello&nbsp;world!\r\nMy&nbsp;name&nbsp;is&nbsp;David&nbsp;Yang.\r\nThat&#39;s&nbsp;right,&nbsp;David&nbsp;Yang&nbsp;is&nbsp;my&nbsp;name.</pre><h2 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">PHP 函数 - 添加参数</h2><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">我们的第一个函数是一个非常简单的函数。它只能输出一个静态的字符串。</p><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">通过可以添加参数，我们向函数添加更多的功能。参数类似一个变量。</p><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">您可能注意到了，函数名称后面有一个括号，比如 writeMyName()。参数就是在括号中规定的。</p><h3 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">例子 1</h3><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">下面的例子讲输出不同的名字，但姓是相同的：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px"><br/></pre><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">上面的代码的输出：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px">My&nbsp;name&nbsp;is&nbsp;David&nbsp;Yang.\r\nMy&nbsp;name&nbsp;is&nbsp;Mike&nbsp;Yang.\r\nMy&nbsp;name&nbsp;is&nbsp;John&nbsp;Yang.</pre><h3 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">例子 2</h3><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">下面的函数有两个参数：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px"><br/></pre><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">上面的代码的输出：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px">My&nbsp;name&nbsp;is&nbsp;David&nbsp;Yang.\r\nMy&nbsp;name&nbsp;is&nbsp;Mike&nbsp;Yang!\r\nMy&nbsp;name&nbsp;is&nbsp;John&nbsp;Yang...</pre><h2 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 微软雅黑; FONT-SIZE: 14px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">PHP 函数 - 返回值</h2><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">函数也能用于返回值。</p><h3 style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 12px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">例子</h3><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px"><br/></pre><p style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 18px; MARGIN-TOP: 12px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 0px; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">以上代码的输出：</p><pre style="BORDER-BOTTOM: rgb(119,136,85) 1px dotted; BORDER-LEFT: rgb(119,136,85) 1px dotted; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: rgb(245,245,245); MARGIN-TOP: 10px; PADDING-LEFT: 10px; WIDTH: 685px; PADDING-RIGHT: 10px; FONT-FAMILY: &#39;Courier New&#39;, Courier, monospace; MARGIN-BOTTOM: 0px; BORDER-TOP: rgb(119,136,85) 1px dotted; BORDER-RIGHT: rgb(119,136,85) 1px dotted; PADDING-TOP: 10px">1&nbsp;+&nbsp;16&nbsp;=&nbsp;17</pre><p><br/></p>', 1397357371, 118, 9, 0),
(7, '20个PHP常用类库', '<p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">下面是一些非常有用的PHP类库，相信一定可以为你的WEB开发提供更好和更为快速的方法。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　类库可以让你很简的创建复杂的图表和图片。当然，它们需要GD库的支持。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://pchart.sourceforge.net/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">pChart</a>&nbsp;- 一个可以创建统计图的库。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://naku.dohcrew.com/libchart/pages/introduction/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">Libchart</a>&nbsp;- 这也是一个简单的统计图库。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.aditus.nu/jpgraph/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">JpGraph</a>&nbsp;- 一个面向对象的图片创建类。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://teethgrinder.co.uk/open-flash-chart/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">Open Flash Chart</a>&nbsp;- 这是一个基于Flash的统计图。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">RSS 解析</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://magpierss.sourceforge.net/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">MagpieRSS</a>&nbsp;- 开源的PHP版RSS解析器，据说功能强大，未验证。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://simplepie.org/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">SimplePie</a>&nbsp;- 这是一个非常快速，而且易用的RSS和Atom 解析库。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">缩略图生成</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://phpthumb.sourceforge.net/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">phpThumb</a>&nbsp;- 功能很强大，如何强大还是自己去体会吧。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">支付</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.phpfour.com/blog/2009/02/php-payment-gateway-library-for-paypal-authorizenet-and-2checkout/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">PHP Payment Library</a>&nbsp;- 支持Paypal, Authorize.net 和2Checkout (2CO)</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">OpenID</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.openidenabled.com/php-openid" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">PHP-OpenID</a>&nbsp;- 支持OpenID的一个PHP库。OpenID是帮助你使用相同的用户名和口令登录不同的网站的一种解决方案。如果你对OpenID不熟悉的话，你可以到这里看看：http://openid.net.cn/</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　数据为抽象/对象关系映射ORM</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://adodb.sourceforge.net/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">ADOdb</a>&nbsp;- 数据库抽象</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.doctrine-project.org/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">Doctrine</a>&nbsp;- 对象关系映射Object relational mapper (ORM) ，需要 PHP 5.2.3+ 版本，一个非常强大的database abstraction layer (DBAL).</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://propel.phpdb.org/trac/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">Propel</a>&nbsp;- 对象关系映射框架- PHP5</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.outlet-orm.org/site/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">Outlet</a>&nbsp;- 也是关于对象关系映射的一个工具。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<em style="padding: 0px; margin: 0px; ">注：对象关系映射(Object Relational Mapping，简称ORM)是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术。 简单的说，ORM是通过使用描述对象和数据库之间映射的元数据，将程序中的对象自动持久化到关系数据库中。本质上就是将数据从一种形式转换到另外一种形 式。 这也同时暗示者额外的执行开销;然而，如果ORM作为一种中间件实现，则会有很多机会做优化，而这些在手写的持久层并不存在。 更重要的是用于控制转换的元数据需要提供和管理;但是同样，这些花费要比维护手写的方案要少;而且就算是遵守ODMG规范的对象数据库依然需要类级别的元 数据。</em></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">PDF 生成器</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.fpdf.org/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">FPDF</a>&nbsp;- 这量一个可以让你生成PDF的纯PHP类库。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">Excel 相关</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://code.google.com/p/php-excel/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">php-excel</a>&nbsp;- 这是一个非常简单的Excel文件生成类。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://code.google.com/p/php-excel-reader/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">PHP Excel Reader</a>&nbsp;- 可以解析并读取XLS文件中的数据。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">E-Mail 相关</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://swiftmailer.org/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">Swift Mailer</a>&nbsp;- 免费的超多功能的PHP邮件库。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://phpmailer.codeworxtech.com/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">PHPMailer</a>&nbsp;- 超强大的邮件发送类。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">单元测试</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　如果你在使用测试驱动的方法开发你的程序，下面的类库和框架绝你能帮助你的开发。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.simpletest.org/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">SimpleTest</a>&nbsp;- 一个PHP的单元测试和网页测试的框架。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<a target="_blank" href="http://www.phpunit.de/" style="padding: 0px; margin: 0px; color: rgb(98, 111, 145); text-decoration: none; ">PHPUnit</a>&nbsp;- 来自xUnit 家族，提供一个框架可以让你方便地进行单元测试的案例开发。并可非常容易地分析其测试结果。</p><p><br/></p>', 1396359957, 109, 10, 0),
(8, '流行的PHP开发框架', '<p>近几年来，随着PHP作为一门被许多开发者选作他们的<a target="_blank" href="http://baike.baidu.com/view/76320.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">脚本语言</a>而不断演化，PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>如雨后春笋般走上荧屏。人们总是在争吵到底哪个PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>最好，但不是每个框架都是为所有人而产生的，这本来是很简单的事实。这里列举五个最好的最受欢迎的PHP开发框架：</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">The Zend Framework</span></h3><p>The Zend Framework 在开发社区中有大量的追随者，它致力于Web 2.0风格的程序。因为它众多的追随者组成的<a target="_blank" href="http://baike.baidu.com/view/5384912.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">活跃用户</a>开发的扩展支持，Zend被称为“The PHP Company”。Zend是一个，也可能不是，今天可用的最受欢迎的PHP开发框架。它有健壮的特征能够支持协作开发，它需要一些PHP的额外知识。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Yii Framework</span></h3><p>Yii是一款非常简洁优秀开源的PHP<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>,致力于追求简洁,安全,自由,高效,是中小型项目首选框架。<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>构架合理,一键生成完全合乎规范的大型网站文件夹架构，<a target="_blank" href="http://baike.baidu.com/view/1417314.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">网站架构</a>一目了然。强大的外部类库支持，分布式存储，强大的缓存系统，单入口MVC模式，<a target="_blank" href="http://baike.baidu.com/view/125370.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">面向对象</a>编程，具有<a target="_blank" href="http://baike.baidu.com/view/928365.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">微内核</a>设计，移植性强，松散耦合等特点，能集成到你任何一个系统里面。无论您是一个NewPHPer 还是OLDPHPER,那么E<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>是您的首选。学习完Yii<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>后您可以快速并且轻松的驾驭其他框架,步入php高手之列。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">CakePHP</span></h3><p>CakePHP 无论对于初学者还是职业PHP开发者都是很好的选择。它基于与Ruby on Rails同样的原则而设计，它十分注重快速开发——这使得它成为一个非常好的用于RAD的开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>。它快速增长的支持系统，简洁性和可测量性使得CakePHP成为今天可用的最受欢迎的PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>之一。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Symfony</span></h3><p>Symfony 是为那些更加职业的主要开发企业级程序的开发者而准备的——特别是 Askeet 和 Yahoo! Bookmarks。这款开源PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>有着丰富的特性，做起这些来绰绰有余，它主要的缺点是比其他的框架略微慢一些。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Codelgniter</span></h3><p>Codelgniter 以它的简单易用，性能和速度而闻名。与 Symphony 不同，这款PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>对于共享主机的用户而言很理想，如果你想有一个小型覆盖面的框架。它提供了简单的解决方案，还有扩展的知识库，通过视频教程，用户指南和wiki来提供支持。</p><p>初学者应当考虑CodeIgniter。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Seagull</span></h3><p>Seagull 是一个良好的PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>，可以用来开发Web，命令行和GUI程序。这是一款无论对初学者还是职业<a target="_blank" href="http://baike.baidu.com/view/39175.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">程序员</a>而言都及其简单的开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>。对于初学者，Seagull提供一套包含样例程序的库，经过简单修改就能符合你的要求，而对于专家级<a target="_blank" href="http://baike.baidu.com/view/39175.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">程序员</a>，Seagull提供了一整套设置选项——包括最佳练习，标准的和模块化的代码库——来快速简单地构建Web程序。Seagull有一个活跃的用户社区以及丰富的支持文档。</p><p>总结PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>对于各种能力层级的开发者都是一种减少重复编码需要的良好方式，同时加快开发过程，确保创建Web程序时写了正确的代码。这不仅加速了复杂程序的开发，同时也减少了你代码中的<a target="_blank" href="http://baike.baidu.com/view/160026.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">安全漏洞</a>从而加强了PHP的安全性。</p><p>尽管一些专家级PHP<a target="_blank" href="http://baike.baidu.com/view/39175.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">程序员</a>感觉没必要使用开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>开发Web程序，它们在<a target="_blank" href="http://baike.baidu.com/view/1785710.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">快速软件开发</a>中仍然有巨大优势，比如在紧迫的期限下。而对于初学者或中等开发者，开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>能够提高PHP学习效率同时促进练习编写高质量的代码且减少低质量代码，后者因为PHP自身的“宽松”特性而常常出现。</p><p>今天有许多可以使用的PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>，因此开发者肯定能找到一款满足他们在特性，支持，速度，可测度性等等方面的需求的框架。如今被开发者使用的顶级PHP开发<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>包括：The Zend Framework，CakePHP，Symfony，Codelgniter和Seagull。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">thinkphp</span></h3><p>ThinkPHP是一个开源的PHP<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>， 是为了简化企业级应用开发和敏捷WEB应用开发而诞生的。最早诞生于2006年初，原名FCS，2007年元旦正式更名为ThinkPHP，并且遵循Apache2<a target="_blank" href="http://baike.baidu.com/view/1373538.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">开源协议</a>发布。早期的思想架构来源于Struts，后来经过不断改进和完善，同时也借鉴了国外很多优秀的<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>和模式，使用<a target="_blank" href="http://baike.baidu.com/view/125370.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">面向对象</a>的开发结构和MVC模式，融合了Struts的Action和Dao思想和JSP的TagLib（<a target="_blank" href="http://baike.baidu.com/view/1002457.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">标签库</a>）、RoR的ORM映射和ActiveRecord模式，封装了CURD和一些常用操作，单一入口模式等，在模版引擎、缓存机制、认证机制和扩展性方面均有独特的表现，也已经越来越多地受到国内PHP开发人员的认可。</p><p>使用ThinkPHP，你可以更方便和快捷的开发和部署应用，当然不仅仅是企业级应用，任何PHP应用开发都可以从ThinkPHP的简单、兼容和快速的特性中受益。简洁、快速和实用是ThinkPHP发展秉承的宗旨，</p><p>作为一个整体开发解决方案，ThinkPHP能够解决应用开发中的大多数需要，因为其自身包含了底层架构、兼容处理、基类库、数据库访问层、<a target="_blank" href="http://baike.baidu.com/view/4258079.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">模板引擎</a>、缓存机制、<a target="_blank" href="http://baike.baidu.com/view/18979.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">插件</a>机制、角色认证、表单处理等常用的组件，并且对于跨版本、跨平台和跨数据库移植都比较方便。并且每个组件都是精心设计和完善的，应用开发过程仅仅需要关注您的业务逻辑。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Canphp</span></h3><p>Canphp是一个中国开源的php<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>，主要的设计理念就是为了追求简单，减少php初学者的学习成本，而且追求高效率，模版类不提供其他标签，直接应用php的<a target="_blank" href="http://baike.baidu.com/view/60376.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">源代码</a>，还有它是<a target="_blank" href="http://baike.baidu.com/view/928365.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">微内核</a>设计，移植性强，松散耦合等特点，能集成到你任何一个系统里面。其中集成的http类相当的强大，采集图片速度相当的快，为什么这样呢？因为适用了模拟异步<a target="_blank" href="http://baike.baidu.com/view/549647.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">多进程</a>的原理。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">InitPHP</span></h3><p>InitPHP是一款轻量级的开源<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>，采用分层体系架构，按需加载，具有高效、安全、易扩展、方便学习和修改框架本身等特点。InitPHP<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>给您提供了详细开发手册，支持mysql分布式扩展，缓存体系自由切换，原生态的视图模型，多模型部署等。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">kyphp</span></h3><p>KYPHP是一个中国开源的PHP<a target="_blank" href="http://baike.baidu.com/view/66971.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">框架</a>，kyphp严格尊守OOP和MVC的理念,具有控件化、可扩展性强。kyphp设计理念是自由、简单。既可以用php源码编程，也可以使用标签，支持多语言，多数据库，多皮肤，多模型部署等。</p><p><br/></p>', 1396360164, 109, 11, 0),
(9, 'php模板引擎', '<p>&nbsp; &nbsp; 目前，可以在PHP中应用的并且比较成熟的模板有很多，例如Smarty、PHPLIB、IPB、<a target="_blank" href="http://baike.baidu.com/view/2475082.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">xingTemplate</a>等几十种。使用这些通过PHP编写的模板引擎，可以让你的代码脉络更加清晰，结构更加合理化。也可以让网站的维护和更新变得更容易，创造一个更加良好的开发环境，让开发和设计工作更容易结合在一起。但是，对于一个PHP程序员来说，没有哪一个PHP模板对他是最合适、最完美的。因为PHP模板就是大众化的东西，并不是针对某个人开发的。如果能在对模板的特点、应用有清楚的认识基础上，充分认识到模板的优势劣势，就可以知道是否选择使用模板或选择使用哪个模板。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">smarty</span></h3><p><a target="_blank" href="http://baike.baidu.com/view/399896.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">smarty</a>是一个基于PHP开发的PHP模板引擎。它提供了逻辑与外在内容的分离，简单的讲，目的就是要使用PHP<a target="_blank" href="http://baike.baidu.com/view/39175.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">程序员</a>同美工分离,使用的程序员改变程序的逻辑内容不会影响到美工的页面设计，美工重新修改页面不会影响到程序的程序逻辑，这在多人合作的项目中显的尤为重要。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Template Lite</span></h3><p>Template Lite是一个非常快而且很小HTML模板引擎。该引擎支持Smarty模板引擎所具有的大部分功能和过滤器。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">TinyButStrong</span></h3><p>TinyButStrong(TBS)是一个可以让PHP<a target="_blank" href="http://baike.baidu.com/view/54.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">脚本</a>和HTML文件干净分离的PHP模板引擎。TBS设计成可以使用任何可视化HTML编辑器来编写TBS的HTML模板页。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">XTemplate</span></h3><p><a target="_blank" href="http://baike.baidu.com/view/1395046.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">XTemplate</a>是一个适用于PHP的模板引擎。它允许把HTML代码与PHP代码分开存储。XTemplate包含了许多有用的功能比如嵌套的程序块，各种类型的插值变量。其代码非常简洁并且是最优化的。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Savant</span></h3><p>Savant是一个强大但轻量级的<a target="_blank" href="http://baike.baidu.com/view/125370.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">面向对象</a>PHP模板引擎。不象其模板系统，Savant默认没有把模板编译成PHP，而是使用PHP本身来作为它的模板语言所以你不需要学习一套新的标记系统。Savant有一个<a target="_blank" href="http://baike.baidu.com/view/125370.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">面向对象</a>的模板插件系统和输出过滤器，可以让你快速为它新增新的行为。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">phemplate</span></h3><p>phemplate是一个简单而且快速的PHP模板引擎。它允许在模板中加入变量和一些动态程序块包括循环。该模板引擎能够可以实现表现与逻辑相分离，也就是说你可以从PHP<a target="_blank" href="http://baike.baidu.com/view/54.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">脚本</a>中抽出所有HTML内容。设计人员可以随意更改HTML而不用担心弄乱你的PHP脚本。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Dwoo</span></h3><p>Dwoo是一个PHP5模板引擎。兼容Smarty模板，它在Smarty语法的基础上完全进行重写。支持通过<a target="_blank" href="http://baike.baidu.com/view/18979.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">插件</a>扩展其功能。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Sugar</span></h3><p>Sugar是一个类似于Smarty的模板引擎，拥有一个简洁和易于理解的语法。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">Twig</span></h3><p>Twig是一个灵活，快速，安全的PHP模板语言。它将模板编译成经过优化的原始PHP代码。Twig拥有一个砂箱模型来评估不可信的模板代码。Twig由一个灵活的<a target="_blank" href="http://baike.baidu.com/view/8705022.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">词法分析器</a>和<a target="_blank" href="http://baike.baidu.com/view/5538632.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">语法分析器</a>组成，可以让开发人员定义自己的标签，过滤器并创建自己的DSL。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">FXL Template</span></h3><p>FXL Template是一个易于使用的模板引擎，提供了一个模板系统所拥有的所有基本功能。支持简单的text/array分配，block和嵌套的blocks。拥有良好的规则表达式和简单的模板语法，以实现尽可能快的模板处理。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">H2o</span></h3><p>H2o是一个PHP模板引擎，它拥有django风格的漂亮模板标签。它大部分概念都源于Django模板。特性：拥有可读和自然的语法。复用模板Inclusion和继承。国际化支持。各种<a target="_blank" href="http://baike.baidu.com/view/907.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">缓存</a>支持。</p><h3 class="headline-2" style="margin: 22px 0px 12px; padding: 0px 0px 0px 5px; font-size: 18px; font-family: 微软雅黑, 黑体, Verdana; line-height: 19px; clear: both; font-weight: 500; white-space: normal; background-color: rgb(255, 255, 255); "><span class="headline-content">ns-template</span></h3><p>2010年大约5月份时，感受到DEDE标签主动调用数据理念适合CMS，所以开发了一些Smarty自定义修改器和<a target="_blank" href="http://baike.baidu.com/view/2241944.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">自定义标签</a>，但是在执行过程中性能低下，开销以s计，这是无法容忍的。分析跟踪，受<a target="_blank" href="http://baike.baidu.com/view/2241944.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">自定义标签</a>实现的原理限制不可能快。于是在dz模板的基础上加入了不少smarty语法以及<a target="_blank" href="http://baike.baidu.com/view/2241944.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">自定义标签</a>功能。经历了一年多线上运行和bug修复，并且弥补了DEDE标签多级嵌套问题后，在较稳定的情况下释出该版本。</p><p><br/></p>', 1396360336, 105, 12, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(10, 'php编程技术', '<p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);">&nbsp; &nbsp; &nbsp; &nbsp;PHP是一种易于学习和使用的服务器端</span><a target="_blank" href="http://baike.baidu.com/view/76320.htm" style="text-decoration: none; color: rgb(19, 110, 194); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; white-space: normal; background-color: rgb(255, 255, 255); ">脚本语言</a><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);">。只需要很少的编程知识你就能使用PHP建立一个真正交互的WEB站点。 PHP是能让你生成</span><a target="_blank" href="http://baike.baidu.com/view/348756.htm" style="text-decoration: none; color: rgb(19, 110, 194); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; white-space: normal; background-color: rgb(255, 255, 255); ">动态网页</a><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);">的工具之一。PHP网页文件被当作一般HTML网页文件来处理并且在编辑时你可以用编辑HTML的常规方法编写PHP。</span></p><p><span style="background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; ">&nbsp; &nbsp; &nbsp; &nbsp;PHP代表：超文本预处理器（PHP: Hypertext Preprocessor）。PHP是完全免费的，不用花钱，可以从PHP官方站点自由下载。PHP遵守 GNU公共许可（GPL)，在这一许可下诞生了许多流行的软件诸如Linux和Emacs。可以不受限制的获得源码，甚至可以从中加进你自己需要的特色。PHP在大多数Unix平台，GUN/Linux和微软Windows平台上均可以运行。怎样在Windows环境的PC机器或Unix机器上安装 PHP的资料可以在PHP官方站点上找到。安装过程很简单。</span><br/></p>', 1396360671, 111, 1, 0),
(11, '有关css兼容', '<p><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">//css_hack完美区分ie6789 ff</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&lt;style type=&quot;text/css&quot;&gt;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">*{</span><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;padding:0;</span><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;margin:0;</span><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">}</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">#houdun{</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;width:500px;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;height:500px;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;margin:0 auto;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;background:red;/*所有浏览器都识别*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;background:blue\\9;/*所以IE浏览器都识别*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;background:green\\0;/*ie8 ie9识别*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;+background: orange;/*ie6 ie7识别*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp;&nbsp;_background:purple;/*ie6识别*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">}</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">:root #houdun{</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&nbsp; &nbsp;background:pink\\9; /*ie9识别*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">}</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">/*ie6显示purple*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">/*ie7显示orange*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">/*ie8显示green*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">/*ie9显示pink*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">/*ff显示red*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&lt;/style&gt;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">&lt;div id=&quot;houdun&quot;&gt;&lt;/div&gt;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">********************************</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">比较流行的清除浮动的代码：</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">.clearFix:after{ clear:both;&nbsp;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">display:block;&nbsp;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">visibility:hidden;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">height:0;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">line-height:0;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">content:&quot;&quot;;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">}.clearFix{zoom:1;}/*解决IE6/7兼容问题*/</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">******设置一块为水平居中时，都会给这个块设置一个宽度值</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">清除浮动：就是可以去掉前面已经浮动对象，对后面对象的影响</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">******当父元素没有指定高度时，并且它的子元素有浮动，这时，这个父元素的高度不会自动增加。</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">1.第一种方法：增加一个空标签，就是没有内容的标签。&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">2.第二种方法：给父元素，加overflow:hidden</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">*******定位布局：就是可以通过元素的position属性控制元素的位置</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">*******当我们要想 使用绝对定位时，必须要有两个条件</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">1.必须给父元素加定位属性，一般建议使用position：relative；</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">2.给子元素，加绝对定位position：absolute;同时要加方向属性</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">*******相对定位和绝对定位</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">绝对定位是父元素为基准点，进行定位-----会脱离文档流。</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">相对定位是根据自身为基准点，进行定位----离开原位置，但还占着原来的空间</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">*******display:none&nbsp;&nbsp;和&nbsp;&nbsp;visibility:hidden&nbsp;&nbsp;的区别</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">相同点：display:none与visibility:hidden都可以用来隐藏某个元素；</span><br style="word-wrap: break-word; color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(68, 68, 68); font-family: Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px;  background-color: rgb(255, 255, 255);">不同点：display:none在隐藏元素的时候，将其占位空间也去掉；而visibility:hidden只是隐藏了内容而已，其占位空间仍然保留。</span></p>', 1396361149, 114, 13, 0),
(12, 'html5的八大技术特征简介', '<p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">html5的八大技术特征简介：</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　HTML5 这个词获得了它自己的生命。无论是在开发者还是公众社区中，这个词的指代对象早已超过了简简单单一个标准的范畴，以至于来带了诸多的不解和争论。这套标准 需要一个标准。那就是，HTML5需要一组一致的、标准的可视化词汇来在对话、展示和解释中清楚地指代特定的对象。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">HTML5的八大技术特征：</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">1. 本地存储</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　在应用缓存，本地存储，索引数据库和文件应用程序接口的帮助下，HTML5应用甚至能在没有因特网连接的情况下工作。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">2. 语义学</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　作为HTML5的前端和中心，语义学能够赋予框架结构以意义。更详尽的标签组合以及资源描述框架，微型数据和微型格式将为你和你的用户打造一套数据驱动的网络。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">3. 设备访问</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　地理定位只是一个开始，HTML5能够让应用程序访问连结到你计算机上的任何设备。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">4. 连结性</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　更有效率的连结性将能带来更实时的聊天，更快的游戏速度以及更好的沟通交流。服务器与客户端之间的网络套接字和邮件摄像头将比以往更加便捷。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">5. 多媒体</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　音频和视频可是HTML5世界的一等公民，他们将与你的应用程序和网站和睦共处。灯光，摄影，开始!</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">6. 平面和三维效果</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　在SVG, Canvas, WebGL和CSS3 3D效果这些特性之间，你一定能找到让你的用户眼花缭乱，美不胜收的创意。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">7. 性能和集成</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　使你的应用程序和网络在大量诸如Web Workers和XMLHttpRequest 2这样的技术下更加快速。没有人愿意停下了等你跟进的。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　<strong style="padding: 0px; margin: 0px; ">8. CSS3</strong></p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　在不牺牲你的讲义结构和性能的情况下，CSS3提供了大量的样式效果和加强你的网络应用。另外WOFF(Web Open Font Format)提供了前所未有的印刷灵活性控制。</p><p><br/></p>', 1396361340, 108, 15, 0),
(13, '用javascript获取地址栏参数', '<p><span style="color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 25.266666412353516px;  background-color: rgb(255, 255, 255);">本文列举了用javascript获取地址栏参数的三种方法：</span><br style="margin: 0px; padding: 0px; word-break: break-all; color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 25.266666412353516px; white-space: normal; background-color: rgb(255, 255, 255); "/><span style="color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 25.266666412353516px;  background-color: rgb(255, 255, 255);">方法一：</span></p><blockquote id="blockquote" style="margin: 0pt 1em; padding: 0.1em 0.5em; word-break: break-all; border: 1px dotted rgb(221, 221, 221); background-color: rgb(255, 255, 225); line-height: 25.266666412353516px; color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; ">&lt;script type=&quot;text/javascript&quot;&gt;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>&lt;!--&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>String.prototype.getQuery = function(name) {&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>　　var reg = new RegExp(&quot;(^|&amp;)&quot;+ name +&quot;=([^&amp;]*)(&amp;|$)&quot;);&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>　　var r = this.substr(this.indexOf(&quot;\\?&quot;)+1).match(reg);&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>　　if (r!=null) return unescape(r[2]); return null;&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>}&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var strHref = &quot;www.cnlei.org/index.htm?a=aaa&amp;b=bbb&amp;c=ccc&quot;;&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(strHref.getQuery(&quot;a&quot;));&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(strHref.getQuery(&quot;b&quot;));&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(strHref.getQuery(&quot;c&quot;));&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>//--&gt;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>&lt;/script&gt;</blockquote><p><span style="color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 25.266666412353516px;  background-color: rgb(255, 255, 255);">方法二：</span></p><blockquote id="blockquote" style="margin: 0pt 1em; padding: 0.1em 0.5em; word-break: break-all; border: 1px dotted rgb(221, 221, 221); background-color: rgb(255, 255, 225); line-height: 25.266666412353516px; color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; ">&lt;script type=&quot;text/javascript&quot;&gt;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>function getUrlPara(paraName){&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var sUrl&nbsp;&nbsp;=&nbsp;&nbsp;location.href;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var sReg&nbsp;&nbsp;=&nbsp;&nbsp;&quot;(?:\\\\?|&amp;){1}&quot;+paraName+&quot;=([^&amp;]*)&quot;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var re=new RegExp(sReg,&quot;gi&quot;);&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>re.exec(sUrl);&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>return RegExp.$1;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>}&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>//应用实例：test_para.html?a=11&amp;b=22&amp;c=33&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(getUrlPara(&quot;a&quot;));&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(getUrlPara(&quot;b&quot;));&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>&lt;/script&gt;</blockquote><p><span style="color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 25.266666412353516px;  background-color: rgb(255, 255, 255);">方法三：</span></p><blockquote id="blockquote" style="margin: 0pt 1em; padding: 0.1em 0.5em; word-break: break-all; border: 1px dotted rgb(221, 221, 221); background-color: rgb(255, 255, 225); line-height: 25.266666412353516px; color: rgb(51, 51, 51); font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 14px; white-space: normal; ">&lt;script type=&quot;text/javascript&quot;&gt;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>&lt;!--&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>function Request(strName){&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var strHref = &quot;www.cnlei.org/index.htm?a=aaa&amp;b=bbb&amp;c=ccc&quot;;&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var intPos = strHref.indexOf(&quot;?&quot;);&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var strRight = strHref.substr(intPos + 1);&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var arrTmp = strRight.split(&quot;&amp;&quot;);&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>for(var i = 0; i &lt; arrTmp.length; i++) {&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>var arrTemp = arrTmp[i].split(&quot;=&quot;);&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>if(arrTemp[0].toUpperCase() == strName.toUpperCase()) return arrTemp[1];&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>}&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>return &quot;&quot;;&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>}&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(Request(&quot;a&quot;));&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(Request(&quot;b&quot;));&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>alert(Request(&quot;c&quot;));&nbsp;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>//--&gt;&nbsp;<br style="margin: 0px; padding: 0px; word-break: break-all; "/>&lt;/script&gt;</blockquote><p><br/></p>', 1396361561, 116, 14, 0),
(14, '前端开发', '<p>&nbsp; &nbsp; Web前端开发是从网页制作演变而来的，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是Web 1.0时代的产物，那时网站的主要内容都是静态的，用户使用网站的行为也以浏览为主。</p><p><br/></p><p>2005年以后，互联网进入Web 2.0时代，各种类似桌面软件的Web应用大量涌现，网站的前端由此发生了翻天覆地的变化。网页不再只是承载单一的文字和图片，各种富媒体让网页的内容更加生动，网页</p><p><br/></p><p>上软件化的交互形式为用户提供了更好的使用体验，这些都是基于前端技术实现的。</p><p>　　以前会Photoshop和Dreamweaver就可以制作网页，现在只掌握这些已经远远不够了。无论是开发难度上，还是开发方式上，现在的网页制作都更接近传统的网站后台开发，所以现在不再叫网页制作</p><p><br/></p><p>，而是叫Web前端开发。Web前端开发在产品开发环节中的作用变得越来越重要，而且需要专业的前端工程师才能做好，这方面的专业人才近几年来备受青睐。Web前端开发是一项很特殊的工作，涵盖的知</p><p><br/></p><p>识面非常广，既有具体的技术，又有抽象的理念。简单地说，它的主要职能就是把网站的界面更好地呈现给用户。</p><p>较强的视觉设计</p><p><br/></p><p>前端技术包括4个部分：前端美工、IE兼容、CSS、HTML“传统”技术与Adobe AIR、Google Gears,以及概念性较强的交互式设计,艺术性较强的视觉设计等等.</p><p>根据该词可以做这样的理解,用互联网来做比喻,凡是通过浏览器到用户端计算机的统称为前端技术.相反存贮于服务器端的统称为后端技术.</p><p><br/></p><p>Web前端优化</p><p>尽量减少HTTP请求 (Make Fewer HTTP Requests)</p><p>减少 DNS 查找 (Reduce DNS Lookups)</p><p>避免重定向 (Avoid Redirects)</p><p>使得 Ajax 可缓存 (Make Ajax Cacheable)</p><p>延迟载入组件 (Post-load Components)</p><p>预载入组件 (Preload Components)</p><p>减少 DOM 元素数量 (Reduce the Number of DOM Elements)</p><p>切分组件到多个域 (Split Components Across Domains)</p><p>最小化 iframe 的数量 (Minimize the Number of iframes)</p><p>杜绝 http 404 错误 (No 404s)</p><p>以上10条涵盖了Web前端开发中遇到的各种页面处理技术，让前端开发人员能够准确和快速地把握整个网页的架构，从而达到减少开发成本和页面美化目的.</p><p>Web前端开发的职责是什么</p><p><br/></p><p>既然Web前端开发有很多的职位，那么不同的职位其各自的职责又是怎样的呢？我们以“前端开发工程师”、“资深前端开发工程师”和“前端架构师”这三种职位为例，来分析一下其各自的职责。</p><p>前端开发工程师（或者说“网页制作”、“网页制作工程师”、“前端制作工程师”、“网站重构工程师”），这样的一个职位的主要职责是与交互设计师、视觉设计师协作，根据设计图用HTML和CSS完成页面制作。同时，在此基础之上，对完成的页面进行维护和对网站前端性能做相应的优化。另外，一名合格的前端开发工程师，应该具有一定的审美能力和基础的美工操作能力，能很好的与交互及视觉协作。</p><p><br/></p>', 1396361830, 103, 2, 0),
(15, '数据库有哪几种？', '<pre id="best-content-1564110956" accuse="aContent" class="best-text mb-10" style="margin-top: 0px; margin-bottom: 10px; padding: 0px; font-family: arial, &#39;courier new&#39;, courier, 宋体, monospace; white-space: pre-wrap; word-wrap: break-word; color: rgb(51, 51, 51); font-size: 14px; line-height: 24px; background-color: rgb(241, 254, 221); ">1、常用的数据库：oracle、sqlserver、mysql、access、sybase&nbsp;\r\n2、特点。\r\n&nbsp;-oracle：\r\n&nbsp;1、完整的数据管理功能：\r\n1）数据的大量性\r\n2）数据的保存的持久性\r\n3）数据的共享性\r\n4）数据的可靠性\r\n2、完备关系的产品：\r\n1）信息准则---关系型DBMS的所有信息都应在逻辑上用一种方法，即表中的值显式地表示；\r\n2）保证访问的准则\r\n3）视图更新准则---只要形成视图的表中的数据变化了，相应的视图中的数据同时变化\r\n4）数据物理性和逻辑性独立准则\r\n3、分布式处理功能：\r\nORACLE数据库自第5版起就提供了分布式处理能力，到第7版就有比较完善的分布式数据库功能了，一个ORACLE分布式数据库由oraclerdbms、sql*Net、SQL*CONNECT和其他非ORACLE的关系型产品构成。\r\n4、用ORACLE能轻松的实现数据仓库的操作。</pre><pre id="best-content-1564110956" accuse="aContent" class="best-text mb-10" style="margin-top: 0px; margin-bottom: 10px; padding: 0px; background-color: rgb(241, 254, 221); font-family: arial, &#39;courier new&#39;, courier, 宋体, monospace; white-space: pre-wrap; word-wrap: break-word; color: rgb(51, 51, 51); font-size: 14px; line-height: 24px; ">-sqlserver：\r\n（1）高性能设计，可充分利用WindowsNT的优势。\r\n（2）系统管理先进，支持Windows图形化管理工具，支持本地和远程的系统管理和配置。\r\n（3）强壮的事务处理功能，采用各种方法保证数据的完整性。\r\n（4）支持对称多处理器结构、存储过程、ODBC，并具有自主的SQL语言。&nbsp;SQLServer以其内置的数据复制功能、强大的管理工具、与Internet的紧密集成和开放的系统结构为广大的用户、开发人员和系统集成商提供了一个出众的数据库平台。</pre><pre id="best-content-1564110956" accuse="aContent" class="best-text mb-10" style="margin-top: 0px; margin-bottom: 10px; padding: 0px; background-color: rgb(241, 254, 221); font-family: arial, &#39;courier new&#39;, courier, 宋体, monospace; white-space: pre-wrap; word-wrap: break-word; color: rgb(51, 51, 51); font-size: 14px; line-height: 24px; ">&nbsp;-mysql：\r\n&nbsp;1．使用C和C++编写，并使用了多种编译器进行测试，保证源代码的可移植性。\r\n2．支持AIX、FreeBSD、HP-UX、Linux、Mac&nbsp;OS、NovellNetware、OpenBSD、OS/2&nbsp;Wrap、Solaris、Windows等多种操作系统。\r\n3．为多种编程语言提供了API。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等。\r\n4．支持多线程，充分利用CPU资源。\r\n5．优化的SQL查询算法，有效地提高查询速度。\r\n6．既能够作为一个单独的应用程序应用在客户端服务器网络环境中，也能够作为一个库而嵌入到其他的软件中。\r\n7．提供多语言支持，常见的编码如中文的GB&nbsp;2312、BIG5，日文的Shift_JIS等都可以用作数据表名和数据列名。\r\n8．提供TCP/IP、ODBC和JDBC等多种数据库连接途径。\r\n9．提供用于管理、检查、优化数据库操作的管理工具。\r\n10．支持大型的数据库。可以处理拥有上千万条记录的大型数据库。\r\n11．支持多种存储引擎。\r\n12.Mysql是开源的，所以你不需要支付额外的费用。\r\n13.MySQL使用标准的SQL数据语言形式。\r\n14.Mysql对PHP有很好的支持，PHP是目前最流行的Web开发语言。\r\n15.Mysql是可以定制的，采用了GPL协议，你可以修改源码来开发自己的Mysql系统。</pre><pre id="best-content-1564110956" accuse="aContent" class="best-text mb-10" style="margin-top: 0px; margin-bottom: 10px; padding: 0px; background-color: rgb(241, 254, 221); font-family: arial, &#39;courier new&#39;, courier, 宋体, monospace; white-space: pre-wrap; word-wrap: break-word; color: rgb(51, 51, 51); font-size: 14px; line-height: 24px; ">&nbsp;-access：\r\n&nbsp;Microsoft&nbsp;Office&nbsp;Access是由微软发布的关联式数据库管理系统。它结合了&nbsp;Microsoft&nbsp;Jet&nbsp;Database&nbsp;Engine&nbsp;和&nbsp;图形用户界面两项特点，是&nbsp;Microsoft&nbsp;Office&nbsp;的系统程式之一。\r\nMicrosoft&nbsp;Office&nbsp;Access是微软把数据库引擎的图形用户界面和软件开发工具结合在一起的一个数据库管理系统。它是微软OFFICE的一个成员,&nbsp;在包括专业版和更高版本的office版本里面被单独出售。\r\n2012年12月4日,最新的微软Office&nbsp;Access&nbsp;2013在微软Office&nbsp;2013里发布,微软Office&nbsp;Access&nbsp;2010&nbsp;是前一个版本。\r\nMS&nbsp;ACCESS以它自己的格式将数据存储在基于Access&nbsp;Jet的数据库引擎里。它还可以直接导入或者链接数据(这些数据存储在其他应用程序和数据库)。\r\n软件开发人员和数据架构师可以使用Microsoft&nbsp;Access开发应用软件,“高级用户”可以使用它来构建软件应用程序。和其他办公应用程序一样，ACCESS支持Visual&nbsp;Basic宏语言,它是一个面向对象的编\r\n程语言,可以引用各种对象，包括DAO(数据访问对象),ActiveX数据对象,以及许多其他的ActiveX组件。可视对象用于显示表和报表，他们的方法和属性是在VBA编程环境下，VBA代码模块可以声明和调用Windows操作系统函数。\r\n&nbsp;-sybase：\r\n美国Sybase公司研制的一种关系型数据库系统，是一种典型的UNIX或WindowsNT平台上客户机/服务器环境下的大型数据库系统。&nbsp;Sybase提供了一套应用程序编程接口和库，可以与非Sybase数据源及服务器集成，允许在多个数据库之间复制数据，适于创建多层应用。系统具有完备的触发器、存储过程、规则以及完整性定义，支持优化查询，具有较好的数据安全性。Sybase通常与SybaseSQLAnywhere用于客户机/服务器环境，前者作为服务器数据库，后者为客户机数据库，采用该公司研制的PowerBuilder为开发工具，在我国大中型系统中具有广泛的应用。</pre><p><br/></p>', 1396362706, 114, 3, 0),
(16, 'NoSQL', '<p>&nbsp; &nbsp; NoSQL，泛指非关系型的数据库。随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展</p><p><br/></p><p>特点</p><p>它们可以处理超大量的数据。</p><p>它们运行在便宜的PC服务器集群上。</p><p>PC集群扩充起来非常方便并且成本很低，避免了“sharding”操作的复杂性和成本。</p><p>它们击碎了性能瓶颈。</p><p>NoSQL的支持者称，通过NoSQL架构可以省去将Web或Java应用和数据转换成SQL友好格式的时间，执行速度变得更快。</p><p>“SQL并非适用于所有的程序代码，” 对于那些繁重的重复操作的数据，SQL值得花钱。但是当数据库结构非常简单时，SQL可能没有太大用处。</p><p>没有过多的操作。</p><p>虽然NoSQL的支持者也承认关系数据库提供了无可比拟的功能集合，而且在数据完整性上也发挥绝对稳定，他们同时也表示，企业的具体需求可能没有那么多。</p><p>Bootstrap支持</p><p>因为NoSQL项目都是开源的，因此它们缺乏供应商提供的正式支持。这一点它们与大多数开源项目一样，不得不从社区中寻求支持。</p><p><br/></p><p>优点</p><p>易扩展</p><p>NoSQL数据库种类繁多，但是一个共同的特点都是去掉关系数据库的关系型特性。数据之间无关系，这样就非常容易扩展。也无形之间，在架构的层面上带来了可扩展的能力。</p><p>大数据量，高性能</p><p>NoSQL数据库都具有非常高的读写性能，尤其在大数据量下，同样表现优秀。这得益于它的无关系性，数据库的结构简单。一般MySQL使用 Query Cache，每次表的更新Cache就失效，是一种大粒度的Cache，在针对web2.0的交互频繁的应用，Cache性能不高。而NoSQL的 Cache是记录级的，是一种细粒度的Cache，所以NoSQL在这个层面上来说就要性能高很多了。</p><p>灵活的数据模型</p><p>NoSQL无需事先为要存储的数据建立字段，随时可以存储自定义的数据格式。而在关系数据库里，增删字段是一件非常麻烦的事情。如果是非常大数据量的表，增加字段简直就是一个噩梦。这点在大数据量的web2.0时代尤其明显。</p><p>高可用</p><p>NoSQL在不太影响性能的情况，就可以方便的实现高可用的架构。比如Cassandra，HBase模型，通过复制模型也能实现高可用。</p><p><br/></p><p>缺点</p><p>但是一些人承认，没有正式的官方支持，万一出了差错会是可怕的，至少很多管理人员是这样看。</p><p>“我们确实需要做一些说服工作，但基本在他们看到我们的第一个原型运行良好之后，我们就能够说服他们，这是条正确的道路。”</p><p>此外，nosql并未形成一定标准，各种产品层出不穷，内部混乱，各种项目还需时间来检验</p><p><br/></p>', 1396363066, 113, 17, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(17, 'mysql基本命令', '<p><strong style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; white-space: normal; background-color: rgb(255, 255, 255); ">[ ]中的内容为可选项</strong></p><p>--创建数据库</p><p>mysql&gt; create database 数据库名称</p><p>--创建表</p><p>mysql&gt; create table 表名 (</p><p>列的名字（id）类型（int（4））primary key(定义主键) auto_increment（描述 自增），</p><p>……，</p><p>）；</p><p>--查看所有数据库</p><p>mysql&gt; show databases ;</p><p>--使用某个数据库</p><p>mysql&gt; use 数据库名称；</p><p>--查看所使用数据库下所有的表</p><p>mysql&gt; show tables;</p><p>--显示表的属性结构</p><p>mysql&gt; desc 表名；</p><p>--选择表中数据的显示</p><p>--* 代表选择所有列 ，</p><p>mysql&gt; select * from 表名 where id=?[and name=？] [or name=?];</p><p>mysql&gt; select id,name from 表名order by 某一列的名称 desc(降序，asc为升序)</p><p>--删除表中的数据</p><p>mysql&gt; delete from table where id=？[or name=? (and name=?)];</p><p>--删除表</p><p>mysql&gt; drop table;</p><p>--删除数据库</p><p>mysql&gt; drop database;</p><p><br/></p>', 1396363181, 107, 16, 0),
(18, '系统构架', '<p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);">系统构架，是对已确定的需求的技术实现构架、作好规划，运用成套、完整的工具，在规划的步骤下去完成任务。</span></p><p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);"><br/></span></p><p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);"></span></p><p><strong>UML与系统构架</strong></p><p>UML对系统架构的定义是：系统的组织结构，包括系统分解的组成部分，它们的关联性，交互，机制和指导原则，这些提供<a target="_blank" href="http://baike.baidu.com/view/170106.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">系统设计</a>的信息。具体的说，就是包括五个系统视图：</p><p>1. 逻辑视图：以问题域的词汇组成的<a target="_blank" href="http://baike.baidu.com/view/4287409.htm" style="text-decoration: none; color: rgb(19, 110, 194); ">类和对象</a>的集合</p><p>2. 进程视图：可执行线程和进程作为活动类的建模，它是对逻辑视图的一次执行实例</p><p>3. 实现视图：队组成基于系统的物理代码的文件和组件进行建模</p><p>4. 部署视图：把组件物理的部署到一组物理的，可计算的节点上<strong><br/>　　</strong></p><p>5.用例视图：是参与者与系统之间，为达到某个目的而进行的一系列活动，是对系统功能的一种描述。</p><p><span style="color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;  background-color: rgb(255, 255, 255);"><br/></span><br/></p>', 1396363496, 104, 4, 0),
(19, 'WAMP', '<p></p><p>简介</p><p>多词缩写</p><p>Windows下的Apache+Mysql+Perl/PHP/Python，一组常用来搭建动态网站或者服务器的开源软件，本身都是各自独立的程序，但是因为常被放在一起使用，拥有了越来越高的兼容度，共同组成了一个强大的Web应用程序平台。</p><p><br/></p><p>随着开源潮流的蓬勃发展，开放源代码的LAMP已经与J2EE和.Net商业软件形成三足鼎立之势，并且该软件开发的项目在软件方面的投资成本较低，因此受到整个IT界的关注。</p><p><br/></p><p>常见的WAMP集成环境</p><p>WAMP是指在Windows服务器上使用Apache、MySQL和PHP的集成安装环境，可以快速安装配置Web服务器，一般说来，大家都习惯 于将Apache、MySQL、PHP架设在Linux系统下，但是，不可否认的是Windows也有其优点，就是易用，界面友好，软件丰富，操作起来非常方便，因此对新手来说在Windows平台下使用Apache、MySQL、PHP也确实是一个不错的选择。下面我将介绍几款在Windows下可以使用的WAMP集成环境。</p><p>WampServer- WampServe集成了Apache、MySQL、PHP、phpmyadmin，支持Apache的mod_rewrite，PHP扩展、Apache模块只需要在菜单“开启/关闭”上点点就搞定，省去了修改配置文件的麻烦。</p><p>总的来说，无论从安全性和性能上来讲，LAMP（Linux + Apache + MySQL + PHP）都优于WAMP（Windows + Apache + MySQL + PHP），不过由于Windows具有易用的特点，WAMP也未尝不是初学者的一个不错的选择。WCPSOFTAMP- 本产品基于开源程序APACHE2.2.21、PHP5.2.17、PHP5.3.5、MYSQL5.0.67和PHPmyadmin3.4.10.1 封装而来。自主研发了集成控制程序WCPSOFTAMP，其特点：方便、实用、免安装、免费使用。节省了新手学习PHP配置环境的时间，同时也是开发者在开发过程中可以快速切换不同的版本运行，使程序更加通用更加稳定。</p><p><br/></p>', 1396363800, 100, 19, 0),
(20, 'lamp', '<p>LAMP介绍</p><p><br/></p><p>LAMP指的Linux（操作系统）、ApacheHTTP 服务器，MySQL（有时也指MariaDB，数据库软件） 和PHP（有时也是指Perl或Python） 的第一个字母，一般用来建立web 服务器。</p><p>虽然这些开放源代码程序本身并不是专门设计成同另几个程序一起工作的，但由于它们的免费和开源，这个组合开始流行（大多数Linux发行版本捆绑了这些软件）。当一起使用的时候，它们表现的像一个具有活力的解决方案包。其他的方案包有苹果的WebObjects（最初是应用服务器），Java/J2EE和微软的.NET架构。</p><p>LAMP包的脚本组件中包括了CGIweb接口，它在90年代初期变得流行。这个技术允许网页浏览器的用户在服务器上执行一个程序，并且和接受静态的内容一样接受动态的内容。程序员使用脚本语言来创建这些程序因为它们能很容易有效的操作文本流，甚至当这些文本流并非源自程序自身时也是。正是由于这个原因系统设计者经常称这些脚本语言为胶水语言。</p><p>软件组件</p><p><br/></p><p>Linux</p><p>Linux 是免费开源软件，这意味着源代码可用的操作系统。</p><p>Apache</p><p>Apache 是使用中最受欢迎的一个开放源码的WEB服务器软件。</p><p>MySQL</p><p>MySQL 是多线程、多用户的SQL数据库管理系统。</p><p>MySQL 已拥有由Oracle公司自 2010 年 1 月 27 日通过SUN购买。SUN 最初于 2008 年 2 月 26 日收购 MySQL。</p><p>PHP，Perl 或 Python</p><p>PHP 是一种编程语言最初设计生产动态网站。PHP 是主要用于服务器端的应用程序软件。Perl 和 Python 类似。</p><p>来源历史</p><p><br/></p><p>Michael Kunze在一篇为德国电脑杂志c&#39;t（1998，第12期，230页）而写的文章中使用了缩略语LAMP。这篇文章意在展示一系列的自由软件成为了商业包的替换物。由于IT世界众所周知的对缩写的爱好，Kunze提出LAMP这一容易被市场接受的术语来普及自由软件的使用。</p><p>举例来说，Wikipedia，免费自由的百科全书，运行的一系列软件具有LAMP环境一样的特点。Wikipedia使用MediaWiki软件，主要在Linux下开发，由Apache HTTP服务器提供内容，在MySQL数据库中存储内容，PHP来实现程序逻辑。</p><p><br/></p>', 1396363891, 106, 18, 0),
(21, 'app开发', '<p>&nbsp; &nbsp; App开发，是指专注于手机应用软件开发与服务。App是application的缩写，通常专指手机上的应用软件，或称手机客户端。苹果公司的App store开创了手机软件业发展的新篇章，使得第三方软件的提供者参与其中的积极性空前高涨。随着智能手机越发普及、用户越发依赖手机软件商店，App开发的市场需求与发展前景也逐渐蓬勃，截止到2012年12月，App开发已变红海。</p><p>&nbsp; &nbsp; 当然移动互联网时代是全民的移动互联网时代，是每个人的时候，也是每个企业的时代。APP便捷了每个人的生活，APP开发让每个企业都开始了移动信息化进程。</p><p>主流的四大APP系统：</p><p>1、苹果ios系统版本，开发语言是Objective-C；</p><p>2、微软Windows phone7系统版本，开发语言是C#；</p><p>3、安卓Android 系统版本，开发语言是Java；</p><p>4、塞班symbian系统版本，开发语言是C++；</p><p><br/></p>', 1397374565, 118, 5, 0),
(22, '网络营销五大方案', '<p><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">&nbsp;网络营销五大方案 &nbsp; &nbsp;&nbsp;</span></p><p><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">&nbsp; &nbsp; &nbsp; 一、战略整体规划：市场分析、竞争分析、受众分析、品牌与产品分析、独特销售主张提炼、创意策略制定、整体运营步骤规划、投入和预期设定。</span><br style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; WHITE-SPACE: normal; COLOR: rgb(51,51,51); FONT-SIZE: 14px"/><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">　　二、</span><a style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; WHITE-SPACE: normal; COLOR: rgb(19,110,194); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://baike.baidu.com/view/1380127.htm" target="_blank">营销型网站</a><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">：网站结构、视觉风格、网站栏目、页面布局、网站功能、关键字策划、网站SEO、设计与开发。</span><br style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; WHITE-SPACE: normal; COLOR: rgb(51,51,51); FONT-SIZE: 14px"/><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">　　三、传播内容规划：品牌形象文案策划、产品销售概念策划、产品销售文案策划、招商文案策划、产品口碑文案策划、新闻资讯内容策划、各种广告文字策划。</span><br style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; WHITE-SPACE: normal; COLOR: rgb(51,51,51); FONT-SIZE: 14px"/><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">　　四、&nbsp;</span><a style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; WHITE-SPACE: normal; COLOR: rgb(19,110,194); FONT-SIZE: 14px; TEXT-DECORATION: none" href="http://baike.baidu.com/view/283326.htm" target="_blank">整合传播</a><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">推广：SEO排名优化、博客营销、微博营销、论坛营销、知识营销、口碑营销、新闻软文营销、视频营销、事件营销、公关活动等病毒传播方式。</span><br style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; WHITE-SPACE: normal; COLOR: rgb(51,51,51); FONT-SIZE: 14px"/><span style="LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 28px; FONT-FAMILY: arial, 宋体, sans-serif; COLOR: rgb(51,51,51); FONT-SIZE: 14px">　　五、 数据监控运营：网站排名监控、传播数据分析、网站访问数量统计分析、访问人群分析、咨询统计分析、网页浏览深度统计分析、热门关键字访问统计分析。</span></p>', 1397372947, 106, 6, 0),
(32, 'php获取数组第一个数组单元值的方法', '<p>本篇文章主要说明的是在php中，如何获取一个数组的第一个数组单元的值的方法。在php的内置函数中，获取数组元素值的函数主要有 reset next current prev end 这几个函数。</p><p>reset (PHP 3, PHP 4, PHP 5)</p><p>函数定义 mixed reset ( array &amp;array )</p><p>作用：该函数将 array 的内部指针倒回到第一个单元并返回第一个数组单元的值，如果数组为空则返回 FALSE。例如：</p><p>查看代码打印</p><p>&lt;?php<br/>$array=array(&#39;step one&#39;,&#39;step two&#39;,&#39;step three&#39;,&#39;step four&#39;);<br/>echo reset($array);<br/>//输出：step one<br/>next (PHP 3, PHP 4, PHP 5)</p><p>函数定义 mixed next ( array &amp;array )</p><p>作用：返回数组内部指针指向的下一个单元的值，或当没有更多单元时返回 FALSE。例如：</p><p>查看代码打印<br/>&lt;?php<br/>$array=array(&#39;step one&#39;,&#39;step two&#39;,&#39;www&#39;,&#39;phpernote.com&#39;,&#39;step four&#39;);<br/>echo next($array);<br/>//输出：step two<br/>警告：如果数组包含空的单元，或者单元的值是 0 则本函数碰到这些单元也返回 FALSE。要正确遍历可能含有空单元或者单元值为 0 的数组，参见 each() 函数。</p><p>current (PHP 3, PHP 4, PHP 5)</p><p>函数定义 mixed current ( array &amp;array )</p><p>作用：返回当前被内部指针指向的数组单元的值，并不移动指针。初始指向插入到数组中的第一个单元。如果内部指针指向超出了单元列表的末端，current() 返回 FALSE。</p><p>警告：如果数组包含有空的单元（0 或者 &quot;&quot;，空字符串）则本函数在碰到这个单元时也返回 FALSE。这使得用 current() 不可能判断是否到了此数组列表的末端。要正确遍历可能含有空单元的数组，用 each() 函数。</p><p>next() 和 current() 的行为类似，只有一点区别，在返回值之前将内部指针向前移动一位。这意味着它返回的是下一个数组单元的值并将数组指针向前移动了一位。如果移动指针的结果是超出了数组单元的末端，则 next() 返回 FALSE。</p><p>下面是相关函数的使用例子：</p><p>查看代码打印<br/>&lt;?php<br/>$transport = array(&#39;foot&#39;, &#39;www&#39;, &#39;car&#39;, &#39;phpernote&#39;,&#39;com&#39;);<br/>$mode = current($transport); // $mode = &#39;foot&#39;;<br/>$mode = next($transport); // $mode = &#39;www&#39;;<br/>$mode = next($transport); // $mode = &#39;car&#39;;<br/>$mode = prev($transport); // $mode = &#39;www&#39;;<br/>$mode = end($transport); // $mode = &#39;com&#39;;<br/>$mode = current($transport); // $mode = &#39;com&#39;;<br/>$mode = reset($transport); // $mode = &#39;foot&#39;;</p><p></p>', 1397375212, 104, 1, 0),
(23, '提高PHP编程效率的53种方法', '<p><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">用单引号代替双引号来包含字符串，这样做会更快一些。因为PHP会在双引号包围的字符串中搜寻变量，单引号则不会，注意：只有echo能这么做，它是一种可以把多个字符串当作参数的“函数”（译注：PHP手册中说echo是语言结构，不是真正的函数，故把函数加上了双引号）。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">1、如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">2、$row[’id’] 的速度是$row[id]的7倍。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">3、echo 比 print 快，并且使用echo的多重参数（译注：指用逗号而不是句点）代替字符串连接，比如echo $str1,$str2。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">4、在执行for循环之前确定最大循环数，不要每循环一次都计算最大值，最好运用foreach代替。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">5、注销那些不用的变量尤其是大数组，以便释放内存。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">6、尽量避免使用__get，__set，__autoload。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">7、require_once()代价昂贵。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">8、include文件时尽量使用绝对路径，因为它避免了PHP去include_path里查找文件的速度，解析操作系统路径所需的时间会更少。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">9、如果你想知道脚本开始执行（译注：即服务器端收到客户端请求）的时刻，使用$_SERVER[‘REQUEST_TIME’]要好于time()。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">10、函数代替正则表达式完成相同功能。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">11、str_replace函数比preg_replace函数快，但strtr函数的效率是str_replace函数的四倍。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">12、如果一个字符串替换函数，可接受数组或字符作为参数，并且参数长度不太长，那么可以考虑额外写一段替换代码，使得每次传递参数是一个字符，而不是只写一行代码接受数组作为查询和替换的参数。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">13、使用选择分支语句（译注：即switch case）好于使用多个if，else if语句。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">14、用@屏蔽错误消息的做法非常低效，极其低效。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">15、打开apache的mod_deflate模块，可以提高网页的浏览速度。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">16、数据库连接当使用完毕时应关掉，不要用长连接。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">17、错误消息代价昂贵。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">18、在方法中递增局部变量，速度是最快的。几乎与在函数中调用局部变量的速度相当。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">19、递增一个全局变量要比递增一个局部变量慢2倍。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">20、递增一个对象属性（如：$this-&gt;prop++）要比递增一个局部变量慢3倍。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">21、递增一个未预定义的局部变量要比递增一个预定义的局部变量慢9至10倍。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">22、仅定义一个局部变量而没在函数中调用它，同样会减慢速度（其程度相当于递增一个局部变量）。PHP大概会检查看是否存在全局变量。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">23、方法调用看来与类中定义的方法的数量无关，因为我（在测试方法之前和之后都）添加了10个方法，但性能上没有变化。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">24、派生类中的方法运行起来要快于在基类中定义的同样的方法。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">25、调用带有一个参数的空函数，其花费的时间相当于执行7至8次的局部变量递增操作。类似的方法调用所花费的时间接近于15次的局部变量递增操作。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">26、Apache解析一个PHP脚本的时间要比解析一个静态HTML页面慢2至10倍。尽量多用静态HTML页面，少用脚本。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">27、除非脚本可以缓存，否则每次调用时都会重新编译一次。引入一套PHP缓存机制通常可以提升25%至100%的性能，以免除编译开销。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">28、尽量做缓存，可使用memcached。memcached是一款高性能的内存对象缓存系统，可用来加速动态Web应用程序，减轻数据库负载。对运算码 (OP code)的缓存很有用，使得脚本不必为每个请求做重新编译。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">29、当操作字符串并需要检验其长度是否满足某种要求时，你想当然地会使用strlen()函数。此函数执行起来相当快，因为它不做任何计算，只返回在zval结构（C的内置数据结构，用于存储PHP变量）中存储的已知字符串长度。但是，由于strlen()是函数，多多少少会有些慢，因为函数调用会经过诸多步骤，如字母小写化（译注：指函数名小写化，PHP不区分函数名大小写）、哈希查找，会跟随被调用的函数一起执行。在某些情况下，你可以使用isset()技巧加速执行你的代码。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">（举例如下）</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">if (strlen($foo) &lt; 5) { echo “Foo is too short”$$ }</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">（与下面的技巧做比较）</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">if (!isset($foo{5})) { echo “Foo is too short”$$ }</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">调用isset()恰巧比strlen()快，因为与后者不同的是，isset()作为一种语言结构，意味着它的执行不需要函数查找和字母小写化。也就是说，实际上在检验字符串长度的顶层代码中你没有花太多开销。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">34、当执行变量$i的递增或递减时，$i++会比++$i慢一些。这种差异是PHP特有的，并不适用于其他语言，所以请不要修改你的C或Java代码并指望它们能立即变快，没用的。++$i更快是因为它只需要3条指令(opcodes)，$i++则需要4条指令。后置递增实际上会产生一个临时变量，这个临时变量随后被递增。而前置递增直接在原值上递增。这是最优化处理的一种，正如Zend的PHP优化器所作的那样。牢记这个优化处理不失为一个好主意，因为并不是所有的指令优化器都会做同样的优化处理，并且存在大量没有装配指令优化器的互联网服务提供商（ISPs）和服务器。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">35、并不是事必面向对象(OOP)，面向对象往往开销很大，每个方法和对象调用都会消耗很多内存。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">36、并非要用类实现所有的数据结构，数组也很有用。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">37、不要把方法细分得过多，仔细想想你真正打算重用的是哪些代码？</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">38、当你需要时，你总能把代码分解成方法。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">39、尽量采用大量的PHP内置函数。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">40、如果在代码中存在大量耗时的函数，你可以考虑用C扩展的方式实现它们。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">41、评估检验(profile)你的代码。检验器会告诉你，代码的哪些部分消耗了多少时间。Xdebug调试器包含了检验程序，评估检验总体上可以显示出代码的瓶颈。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">42、mod_zip可作为Apache模块，用来即时压缩你的数据，并可让数据传输量降低80%。</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">43、在可以用file_get_contents替代file、fopen、feof、fgets等系列方法的情况下，尽量用file_get_contents，因为他的效率高得多！但是要注意file_get_contents在打开一个URL文件时候的PHP版本问题；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">44、尽量的少进行文件操作，虽然PHP的文件操作效率也不低的；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">45、优化Select SQL语句，在可能的情况下尽量少的进行Insert、Update操作(在update上，我被恶批过)；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">46、尽可能的使用PHP内部函数（但是我却为了找个PHP里面不存在的函数，浪费了本可以写出一个自定义函数的时间，经验问题啊！）；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">47、循环内部不要声明变量，尤其是大变量：对象(这好像不只是PHP里面要注意的问题吧？)；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">48、多维数组尽量不要循环嵌套赋值；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">49、在可以用PHP内部字符串操作函数的情况下，不要用正则表达式；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">50、foreach效率更高，尽量用foreach代替while和for循环；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">51、用单引号替代双引号引用字符串；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">52、“用i+=1代替i=i+1。符合c/c++的习惯，效率还高”；</span><br style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal; font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px; background-color: rgb(45, 34, 23); "/><span style="padding: 0px; margin: 0px; color: rgb(51, 51, 51); font-size: 14px;  background-color: rgb(255, 255, 255); font-family: Tahoma, &#39;Microsoft Yahei&#39;; line-height: 22px;">53、对global变量，应该用完就unset()掉；</span></p>', 1396364392, 109, 7, 0),
(24, '2014年全美最佳职业TOP100，程序员排第一', '<p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">USNews最新公布了2014年<a href="http://money.usnews.com/careers/best-jobs/rankings/the-100-best-jobs" target="_blank" style="color: rgb(17, 172, 255); text-decoration: none; ">全美最佳职业TOP100</a>，其中软件开发者名列该榜单榜首。</p><p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">软件开发者的工作充满意义，可以与生活的多个领域接触，待遇优渥，求职不受地域限制，而且大多数岗位不需要研究生学历。</p><p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">据美国劳工部提供的数据，软件开发者，有时也被称为程序员，这一行的平均年薪为90,060美元，而其中10%顶尖级的程序员年平均收入为138,880美元。</p><p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">美国劳工统计局(Bureau of Labor Statistics)预计，到2022年，全美将净增近140,000个程序员岗位。</p><p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">如果你成不了软件开发者，计算机系统分析师则是最佳的选择。该职业主要与科技设计、故障查找以及分析有关。系统分析师的角色将会逐渐演变成“数据科 学家”，这一新兴职位因大数据的推动，其需求量猛增。数据科学家通过对大量信息的分析，例如推文、文章以及销售数据，为企业寻找商机。</p><p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">普通计算机系统分析师的平均年收入达83,800美元，顶尖级的年平均收入能上122,090美元。市场巨大的需求也令该行业的收入水涨船高。劳工统计局预计，到2022年，该岗位的需求将增长24.5%。</p><p style="padding: 3px 0px; margin-top: 0px; margin-bottom: 0px; font-family: 微软雅黑, Arial, sans-serif; font-size: 15px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255); ">在USNews公布的这份榜单上，除去软件开发者和计算机系统分析师位列第一、第二外，排名三到五位的分别是，牙医、执业护士以及药剂师，而被人们普遍看好的医生仅名列第八。</p><p><br/></p>', 1396364507, 118, 8, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(33, 'PHP的echo输出内容过多会很慢', '<p>作为一个行走江湖多年的老中医，今天受命去解决一例前端页面展现缓慢的问题。问题页的情况如下：</p><p>apache + php</p><p>使用smarty模板输出内容</p><p>页面最终输出内容较大，80k+</p><p>页面执行时间在500ms以上</p><p>祭出法宝xhprof对问题页面做了细致检查，发现页面的瓶颈竟然是模板(编译后的)中的一个echo语句，这个echo语句输出的字符串比较大，大概是50k+字节，花费时间为400多毫秒，占整个页面执行时间的80%。这样的echo输出在站点首页中其实是很常见的事情，没有数据库操作，按道理执行时间不应该这么长。</p><p>于是猛力使用搜索技能，最终在php手册的echo部分找到了一些蛛丝马迹，早在2003年就有前辈认为通过echo输出大字符串到客户端会引起服务器的性能问题，据我测试，在这个场景下使用print其实也是一样的慢。建议的解决办法是把字符串切割成更小的字符串输出，展现速度会有提升，输出函数如下：</p><p>查看代码打印</p><pre class="brush:php;toolbar:false">&lt;?php\r\n\r\n//对大字节字符串进行分割保存到数组中，然后循环输出\r\n\r\nfunction&nbsp;echoBigChar($string,$bufferSize=8192){\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;$splitString=str_split($string,$bufferSize);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;foreach($splitString&nbsp;as&nbsp;$chunk){\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$chunk;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n}</pre><p>但是上面的处方不太对症，整个echobig的输出时间仍然在400毫秒左右，没有太大改善。考虑到是输出大量内容到客户端比较慢，于是检查了apache的配置，原来还没打开deflate进行压缩，遂启用之。再次使用xhprof进行检查，这条echo的输出时间降低到5ms左右。400ms到5ms，一个配置问题会产生80倍的差距，还真是省老钱了。</p><p>这个故事告诉我们，开启压缩输出真的很重要。</p><pre class="brush:php;toolbar:false">&nbsp;<br/></pre><p>&nbsp;</p>', 1397375432, 103, 1, 0),
(31, 'php程序员有前途吗', '<p style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 14px/25px 宋体; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(73,73,73); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp; 经常会看到群里有刚学习PHP的朋友问这种问题，学PHP有前途吗？PHP简单吗？好学吗？等等，其实我刚开始学习php的时候和大家一样，一直想搞清楚学习php能否有用，工资是否会很高等等问题。下面就本人做了3年的PHP开发的经验发表一下自己的看法。<br/>&nbsp;<br/>PHP现在是一门非常流行的Web编程语言，今天所有的互联网大型网站都在使用PHP技术，各种新的应用如微博、团购、SNS等几乎都在采用PHP开发，PHP已然成为Web开发的主流语言，PHP程序员的招聘需求暴增更是早已在各大招聘求职网站得到印证。</p><p style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 14px/25px 宋体; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(73,73,73); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">如果有人说PHP是简单的语言，php程序员是草根程序员。那么我想他应该并不理解编程的真正意义所在。编程重在思想，语言只是工具，这就好比你要写一篇论文，文章是否成功取决于构思、论点及论据的正确性、阅历、经验等，而用中文或英文来写，都不会影响论文的好坏。你能说英文比中文好吗？反之也不对。</p><p style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 14px/25px 宋体; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(73,73,73); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">程序员做网站也是一样，用PHP也好，用Java或.NET也罢，你没有对整体的掌控和把握，用啥语言也都白扯。PHP入门相对Java或.NET等来说简单一点，但如果你想用好PHP，或者做一个完整的商业项目出来，甚而成为PHP高手，一定要懂得更多高级的技术及原理，要经过不断的项目实战的历练、经验的积累。其实在你精通一种编程语言后，再学习其他语言，相对来说都非常简单。</p><p style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 14px/25px 宋体; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(73,73,73); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">一个程序员说某种语言低级某种语言高级，本身就是拿无知当个性，语言无高低贵贱之分只有应用之别，比如BBS这样流行的应用有几个是用Java开发的？这也并不是说Java没有PHP流行，只是Java不适合做这种项目而已，同样PHP也不适合做对数据要求比较严谨的商业类项目一样。</p><p style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 14px/25px 宋体; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(73,73,73); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">至于非要说出现在的编程语言里面那个更有前途，那要看自己的发展方向了以及自己的努力了。</p><p>&nbsp;</p>', 1397374272, 104, 8, 0),
(34, 'php网站被挂木马如何修复', '<p>有个朋友的网站长期没有人管理，而网站PR=4,于是网站被人攻陷，首页加上了上百条黑链，找我帮忙修复</p><p>看到首页密密麻麻的黑链，第一反应就是头大。最简单的办法：格式化后重装系统。但是这个服务器web/数据库都部署在同一台上，数据规模有200多G，当初安装的时候也没有分区，在线迁移数据太麻烦了，只能硬着头皮去修复问题，</p><p>修复步骤<br/>停掉web服务，免得旧仇未报，又添新恨<br/>找到被挂马的漏洞。一定要找到，不然问题根本解决不了。服务器被挂马主要是两种原因：sql注入或者某种系统性漏洞<br/>sql注入，和代码有关系，不好查。但是只要你的Nginx/PHP不是以root身份运行的，最多被拖库，被挂马的可能性不大<br/>系统性漏洞，这个破坏性很大，但是都会比较著名，马上有人提供解决方案，搜索一下就能找到<br/>所以，找到被挂马的原因是： nginx文件类型错误解析漏洞，这个漏洞很严重，php网站只要支持图片上传都会中招</p><p>修补漏洞，nginx文件类型错误解析漏洞 这个漏洞比较好修复，在nginx configure文件里面配置一下即可<br/>搜查木马文件,到代码安装目录执行下面命令<br/>find ./ -iname &quot;*.php&quot; | xargs grep -H -n &quot;eval(base64_decode&quot;</p><p>搜出来接近100条结果，这个结果列表很重要，木马都在里面，要一个一个文件打开验证是否是木马，如果是，马上删除掉</p><p>最后找到10个木马文件，存放在各种目录，都是php webshell，功能很齐全，用base64编码</p><p>清理现场， 去掉首页上的黑链，重启web服务<br/>安全经验<br/>普通服务器被挂马，不用紧张，按上述步骤进行修复<br/>关键服务器(比如部署了用户资金/转账/交易 等服务)，被挂马之后，必须要格式化重装，因为webshell的功能实在是非常齐全，攻击者很可能替换掉系统关键程序，比如sshd,nginx等，从此大门打开，随便进出<br/>服务器安装系统要分区，至少应该分 系统区和数据区 两部分，这样重装系统的时候可以不用迁移数据<br/>凡是提供外部端口的服务程序（web server，gate server)，一定要用独立的用户运行，千万不要图省事，直接用root<br/></p><p></p>', 1397375630, 107, 1, 0),
(35, '解决PHP中JSON中文乱码的几种方法', '<p>在开发过程中，我们知道在使用Ajax技术与PHP后台交互时，中文乱码是常有的事，JSON作为与XML类似</p><p>的数据交换格式，在PHP用来进行交互时也会出现中文乱码的情况，解决PHP JSON中文乱码的方法思路</p><p>其实与PHP Ajax传值中文字符乱码的解决方法类似，下面小涛详细介绍下解决PHP JSON中文乱码的方法</p><p>。</p><p>　　为什么PHP与JSON交互时会出现中文乱码？</p><p>　　由于JSON与JS一样，对于客户端的字符是以UTF8的形式处理，即JSON提交或接受返回的字符是以</p><p>UTF8形式处理，当与PHP交互时，如果数据库编码、PHP页面编码不采用UTF8格式时，PHP与JSON交互时</p><p>中文就会产生乱码。</p><p>　　解决PHP JSON中文乱码的方法</p><p>　　在知道了PHP与JSON交互产生中文乱码的原因后解决的方法其实就简单很多。</p><p>　　解决PHP JSON中文乱码方法一：保证数据库、前后台PHP页面编码一致</p><p>　　最简答的解决PHP JSON中文乱码的方法就是保证数据库编码、PHP页面编码统一采用UTF8格式，对</p><p>于PHP入门学习者来说建站时数据库最好使用UTF8格式，可减少不少麻烦。</p><p>　　解决PHP JSON中文乱码方法二：配置使用PHP函数urlencode与JS函数decodeURI()</p><p>　　当PHP使用JSON与前台JS交互时，在使用json_encode函数之前需要使用urlencode函数进行URL编码</p><p>，在JS客户端通过JS函数decodeURI()进行URL解码后再读取中文信息。</p><p>　　注意：当在PHP页面中通过JSON进行交互，比如将数组转换成JSON格式时，首先请使用urlencode函</p><p>数对数组key和value进行URL编码然后再使用json_encode函数和urldecode函数。</p><p>　　解决PHP JSON中文乱码方法三：使用字符串编码转换函数</p><p>　　当由于各种原因，数据库编码、PHP页面编码不一致时，比如现有的数据库编码使用GB2312，这时</p><p>在使用JSON交互时，就需要使用字符串编码转换函数进行字符集之间的转换。常用的函数有iconv，由</p><p>于iconv需要PHP配置环境支持，如果不支持，你可以通过自行编写gbk与UTF8编码转换函数实现编码转</p><p>换，具体可参考PHP Ajax传值中文字符乱码解决教程。</p><p>　　至此，PHP JSON中文字符乱码的三种解决方法就介绍完了，其实在PHP开发中，遇到类似PHP与</p><p>AJAX/JS进行交互，产生中文乱码时基本都是使用这些方法，思路是类似的。</p><p>&nbsp;</p>', 1397376265, 118, 1, 0),
(36, '分享经常用到的公用css，让网页兼容各大浏览器', '<p>分享经常用到的公用css，让网页兼容各大浏览器，这样每写一个网页直接引用就可以了，这样省事的</p><p>代码，还有神马理由不收藏呢？</p><pre class="brush:css;toolbar:false">@charset&nbsp;&quot;utf-8&quot;;\r\n/*----------通用----------*/\r\nul,ol,li,p,h1,h2,h3,h4,h5,form,table,td,img,div,a,dl,dt,dd{margin:0;padding:0;border:0;}\r\nbody,select,input{padding:0;margin:0;text-align:left;font-size:12px;font-family:&quot;宋\r\n体&quot;,&quot;Arial&quot;;}\r\nbody{color:#000;}\r\nul,li,ol{list-style-type:none;}\r\ninput{outline:none;}\r\nimg{vertical-align:bottom;}\r\ntable{border-collapse:collapse;}\r\na&nbsp;img{border:none;}\r\na{color:#000;text-decoration:none;}\r\na:hover{text-decoration:underline;}\r\n.clear{&nbsp;clear:both;}\r\n.cl:after{&nbsp;content:&quot;&quot;;&nbsp;display:block;visibility:hidden;&nbsp;height:0;&nbsp;clear:both;}\r\n.cl&nbsp;{zoom:1;}\r\n.fl{float:left;&nbsp;display:inline;}\r\n.fr{float:right;&nbsp;display:inline;}</pre><p></p>', 1397376416, 101, 2, 0),
(37, 'ie6,ie8,firefox解决padding的兼容性', '<p><br/>&nbsp;&nbsp; 为什么ie6,ie8,firefox这三个浏览器对padding的设置怎么都不一样，经过一系列的努力，终</p><p>于找出了答案，原来是这个样子的：</p><p>假设现在设置一个padding值，这个值在FF、IE8、IE6中都不一样<br/>首先考虑的是FF下的值<br/>.test{padding:10px}<br/>接着考虑IE8下的值<br/>.test{padding:10px;*padding:9px}<br/>最后考虑IE6下的值<br/>.test{padding:10px;*padding:9px;_padding:8px}<br/>这样就可以了。<br/>做兼容性时，最先考虑FF、opera这些浏览器，最后考虑IE6。<br/>拿上例来说，IE8、IE6都可识别*，但FF不能识别。<br/>所以拿*来做IE8的Hack，而_在FF和IE8中都不识别，只有IE6能识别，所以用_做IE6的Hack<br/>&nbsp;&nbsp;&nbsp;&nbsp; 这些兼容性的问题，必须积累了，否则以后出现类似的问题还得下功夫。</p><p></p>', 1397376541, 103, 2, 0),
(38, '提高CSS的网页渲染效率', '<p>CSS学习越深入，我们需要关注的细节之处就越多，今天我们通过11个注意点来提高CSS的网页渲染效率。<br/>1、十六进制的颜色值对位数与大小写<br/>编写十六进制颜色值时你可能会用小写字母或省略成3位数，关于这写法没找到确实的数据证明对浏览器的渲染效率是否有影响，但十六进制的颜色值默认标准是大写及6位数标注。在未知情况下不希望冒险而降低了渲染的效率。<br/>　　* 不赞成 - color:#f3a;<br/>　　* 建议用 - color:#FF33AA;<br/>2、display与visibility的差异<br/>他们用于设置或检索是否显示对象。display隐藏对象不保留物理空间，visibility为隐藏对象保留占据的物理空间。当浏览器渲染被占据的物理空间时，会有所消耗资源。<br/>　　* 不赞成 - visibility:hidden;<br/>　　* 建议用 - display:none;<br/>3、border:none;与border:0;的区别<br/>和display与visibility的关系类似，分别不保留与保留空间。更多的是border:0;尽管可以隐藏掉边框，但它会为你保留border-color/border-style的使用权。<br/>　　* 不赞成 - border:0;<br/>　　* 建议用 - border:none;<br/>4、不宜用过小的背景图片平铺<br/>一张宽高1px的背景图片，虽然文件体积非常之小，但渲染宽高500px的板块需要重复平铺2500次。提高背景图片渲染效率跟图片尺寸及体积有关，最大的图片文件体积保持约70KB。<br/>　　* 不赞成 - 宽高8px以下的平铺背景图片<br/>　　* 建议用 - 衡量适中体积及尺寸的背景图片<br/>5、慎用IE滤镜<br/>IE的滤镜除了比较消耗资源外也有兼容性问题。当中有让PNG透明的滤镜，可采用GIF或JPG似透非透的办法来避免使用此滤镜。建议只在IE6应用GIF透明，因为IE7以上已经支持了PNG透明。<br/>　　* 不赞成，滥用IE滤镜因为消耗资源外也有兼容性问题。<br/>　　* 建议用，最好选择其它方法能避免使用滤镜。<br/>6、*{ margin:0; padding:0;}避免浏览器样式差异<br/>*号通配符把所有标签都初始化一遍，浏览器的渲染消耗一定的资源。有部分在标签在不同浏览器上几乎无差异，或是某些已经不推荐使用的标签(因为你不会去用它)，它们不需通配符要重新初始化一遍这样做能节省一点资源。<br/>　　* 不赞成，使用*号通配符<br/>　　* 不赞成，div span button b table等标签纳入通配符控制内外填充样式<br/>　　* 建议用，有选择性地使用通配符控制内外填充样式。<br/>7、不要添加额外的标签来描述class或id<br/>如果你有一个选择器是以id作为关键选择符，请不要添加多余标签名上去。因为ID是唯一的，你不要为了一个不存在的理由而降低了匹配的效率。<br/>　　* 不赞成 - button#backButton { }<br/>　　* 不赞成 - .menu-left #newMenuIcon { }<br/>　　* 建议用 - #backButton { }<br/>　　* 建议用 - #newMenuIcon { }<br/>8、尽量选择最特殊的类来存放选择器<br/>降低系统效率的一个最大原因是我们在标签类中用了过多的选择符。通过添加 class 到元素，我们可以将类别进行再细分为 class 类，这样就不用为了一个标签浪费时间去匹配过多的选择符了。<br/>　　* 不赞成 - treeitem[mailfolder=&quot;true&quot;] &gt; treerow &gt; treecell { }<br/>　　* 建议用 - .treecell-mailfolder { }<br/>9、避免子孙选择符<br/>子孙选择符是CSS中最耗资源的选择符。他真的是非常的耗资源，尤其是在选择器使用标签类或通用类的时候。很多情况中，我们真正想要的是子选择符。除非有明确说明，在 UI CSS 中是严禁使用子孙选择符的。<br/>　　* 不赞成 - treehead treerow treecell { }<br/>　　* 好一点，但还是不行(参照下一条) - treehead &gt; treerow &gt; treecell { }<br/>10、标签类中不要包含子选择符<br/>不要在标签类中使用子选择符。否则，每次元素的出现，都会额外地增加匹配时间。（特别是当选择器似乎多半会被匹配的情况下）<br/>　　* 不赞成 - treehead &gt; treerow &gt; treecell { }<br/>　　* 建议用 - .treecell-header { }</p><p>11、留意所有子选择符的使用<br/>小心地使用子选择符。如果你能想出一个的不使用他的方法，那么就不要使用。特别是在 RDF 树和菜单会频繁地使用子选择符，像这样。<br/>　　* 不赞成 - treeitem[IsImapServer=&quot;true&quot;] &gt; treerow &gt; .tree-folderpane-icon { }<br/>　　请记住 RDF 的属性是可以在模板中被复制的！利用这一点，我们可以复制那些想基于该属性改变的子 XUL 元素上的 RDF 属性。<br/>　　* 建议用 - .tree-folderpane-icon[IsImapServer=&quot;true&quot;] { }</p><p></p>', 1397378481, 100, 2, 0),
(39, '解决在IE6下文字溢出的解决方法', '<p>说明：注释造成文字溢出是IE的BUG，注释造成文字溢出与其位置有关，注释造成文字溢出与文字区块</p><p>的固定宽度有关，溢出文字的字数=注释的条数*2-1，这里的字数在中文或英文数字时都成立。<br/>　　当溢出的文字字数大于文本的字数时，文字区块将会消失。<br/>　　解决方法：<br/>　　1、不放置注释。最简单、最快捷的解决方法，嘿嘿……<br/>　　　另一解决方法是：<br/>　　　将注释<br/>　　　<br/>　　　改写成<br/>　　　<br/>　　　这样的形式。<br/>　　2、注释不要放置于2个浮动的区块之间。<br/>　　3、将文字区块包含在新的之间，如：&lt;?xml:namespace prefix = divstyle=&quot;float /&gt;<divstyle="float:right;width:400px"></divstyle="float:right;width:400px"></p><p>↓这就是多出来的那只猪。<br/>　　4、去除文字区块的固定宽度，与3有相似之处。<br/>　　另外一种解决方法：<br/>　　在浮动之后的最后一个DIV后面再多一个DIV,什么属性都不需要加,只要一句clear:both;也可.在需</p><p>要兼容多种浏览器的情况下,可加上属性font-size:0; height:0; overflow:hidden;如：<br/>　　</p><p>&nbsp;</p>', 1397378640, 106, 2, 0),
(40, 'mysql的启动方法', '<p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">方法一： 启动服务<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>安装后在windows的服务选项中，选中mysql的服务，然后双击启动即可。。。。具体操作（右击我的电脑－＞管理－＞弹出计算机管理，选服务和应用程序－＞服务－＞MYSQL4－＞双击启动即可。）</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">方法二： 命令行操作<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>开始－＞运行－＞cmd 打开DOS窗口，在窗口中输入net&nbsp; start mysql 即启动了mysql .</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">方法三：使用winmysqladmin<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>1)、进入d::mysqlbin目录，运行winmysqladmin.exe，在屏幕右下角的任务栏内会有一个带红色的图符<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>2)、鼠标左键点击该图符，选择“show me”，出现“WinMySQLAdmin”操作界面；首次运行时会中间会出现一个对话框要求输入并设置你的用户名和口令<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>3)、选择“My.INI setup”<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>4)、在“mysqld file”中选择“mysqld-opt”(win9x)或“mysqld-nt”(winNT)<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>5)、选择“Pick-up or Edit my.ini values”可以在右边窗口内对你的my.ini文件进行编辑<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>6)、选择“Save Modification”保存你的my.ini文件<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>7)、如果你想快速使用winmysqladmin(开机时自动运行），选择“Create ShortCut on Start Menu”<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>8)、测试：<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>进入DOS界面；<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>在d:mysqlbin目录下运行mysql，进入mysql交互操作界面<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>输入show databases并回车，屏幕显示出当前已有的两个数据库mysql和test</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">方法四：不使用winmysqladmin<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>1)、在DOS窗口下，进入d:/mysql/bin目录<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>2)、win9X下)运行:<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysqld<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>在NT下运行:<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysqld-nt --standalone<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>3)、此后，mysql在后台运行<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>4)、测试mysql:（在d:/mysql/bin目录下）<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>a)、mysqlshow<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>正常时显示已有的两个数据库mysql和test<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>b)、mysqlshow -u root mysql<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>正常时显示数据库mysql里的五个表：<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>columns_priv<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>db<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>host<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>tables_priv<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>user<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>c)、mysqladmin version status proc<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>显示版本号、状态、进程信息等<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>d)、mysql test<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>进入mysql操作界面，当前数据库为test<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>5)、mysql关闭方法：<span class="Apple-converted-space">&nbsp;</span><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysqladmin -u root shutdown</p><p></p>', 1397378774, 104, 3, 0),
(41, 'mysql添加用户', '<p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">bin&gt;mysql -u root<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt; grant 权限1,权限2,…权限n on 数据库名称.表名称 to 用户名@用户地址 identified by ‘连接口令’;<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>权限1,权限2,…权限n代表select,insert,update,delete,create,drop,index,alter,grant,references,reload,shutdown,process,file等14个权限。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>当权限1,权限2,…权限n被all privileges或者all代替，表示赋予用户全部权限。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>当数据库名称.表名称被*.*代替，表示赋予用户操作服务器上所有数据库所有表的权限。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>用户地址可以是localhost，也可以是ip地址、机器名字、域名。也可以用’%&#39;表示从任何地址连接。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>‘连接口令’不能为空，否则创建失败。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>例如：<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt;grant select,insert,update,delete,create,drop on vtdc.employee to joe@10.163.225.87 identified by ‘123′;<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>给来自10.163.225.87的用户joe分配可对数据库vtdc的employee表进行select,insert,update,delete,create,drop等操作的权限，并设定口令为123。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt;grant all privileges on vtdc.* to joe@10.163.225.87 identified by ‘123′;<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>给来自10.163.225.87的用户joe分配可对数据库vtdc所有表进行所有操作的权限，并设定口令为123。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt;grant all privileges on *.* to joe@10.163.225.87 identified by ‘123′;<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>给来自10.163.225.87的用户joe分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123。<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt;grant all privileges on *.* to joe@localhost identified by ‘123′;<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>给本机用户joe分配可对所有数据库的所有表进行所有操作的权限，并设定口令为123。</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">mysql添加用户方法<wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/></strong></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">建立数据库gamesp</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">create database gamesp;</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">添加用户</strong></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">grant<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>all<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>on<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>数据库名.*<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>to<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>用户名@localhost<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>identified<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>by<span class="Apple-converted-space">&nbsp;</span><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>&#39;密码&#39;;</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>grant all on gamesp.* to<span class="Apple-converted-space">&nbsp;</span><a style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: rgb(51,102,0); TEXT-DECORATION: none; PADDING-TOP: 0px" href="mailto:newuser@localhost"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: #ed1b24; PADDING-TOP: 0px">newuser@localhost</span></a><span class="Apple-converted-space">&nbsp;</span>identified by &#39;password&#39;;</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">添加一个远程用户，名为username密码为password<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>GRANT ALL PRIVILEGES ON *.* TO<span class="Apple-converted-space">&nbsp;</span><a style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: rgb(51,102,0); TEXT-DECORATION: none; PADDING-TOP: 0px" href="mailto:username@&quot;%"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">username@&quot;%</strong></a><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">&quot; IDENTIFIED BY &#39;password&#39;</strong></strong></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">说明：</strong></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">（1）grant all 赋予所有的权限</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">（2）gamesp.* 数据库 gamesp 中所有的表</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">（3）newuser 用户名</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">（4）@localhost 在本地电脑上的 mysql server 服务器</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">（5）identfified by &#39;password&#39; 设置密码</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">删除用户</strong><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>use mysql<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt;Delete FROM user Where User=&quot;xxxxx&quot; and Host=&quot;localhost&quot;;<br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysql&gt;flush privileges;</p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><wbr style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(253,253,253); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><strong style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px">修改密码</strong><br style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px"/>mysqladmin -uroot -plk317921web password &quot;111111&quot;</p><p></p>', 1397378894, 103, 3, 0),
(42, 'sql语句中条件查询in、like、=的效率', '<p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">1、如果条件字段都是非索引字段,那么效率都差不多,就看结果大小。</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">2、有差别的在于条件字段是索引字段时:</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">&nbsp; &nbsp;“=”在索引的情况下都会进行索引扫描,所以效率总是高的。</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">&nbsp; &nbsp;“like”当模糊查询为右模糊,比如&#39;abc%&#39;时,扫描索引,高效。当模糊查询含左模糊时,比如&#39;%abc&#39;,进行全表扫描,低效。</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">&nbsp; &nbsp;“in”的作用等同于or,也是进行索引扫描,高效。</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">&nbsp; &nbsp;另外,“in”还可以连接查询结果集,这时往往会和exists做比较。</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">&nbsp; &nbsp;a、select * from t1 where f1 in(select f1 from t2 where t2.fx=&#39;x&#39;),其中子查询的where里的条件不受外层查询的影响,这类查询一般情况下,自动优化会转成exist语句,也就是效率和exist一样。</span></p><p style="PADDING-BOTTOM: 0px; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 15px/25px Simsun; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><span style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: 宋体; PADDING-TOP: 0px">&nbsp; &nbsp;b、select * from t1 where f1 in(select f1 from t2 where t2.fx=t1.fx),其中子查询的where里的条件受外层查询的影响,这类查询的效率要看相关条件涉及的字段的索引情况和数据量多少,一般效率不如exists,数据量大时,效果就更加明显。</span></p><p></p>', 1397379035, 102, 3, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(43, 'php mysql基本操作总结', '<p>偶尔要用到php做一些mysql数据库的操作测试，自己写起来太麻烦，搜索的结果一般都又包含一大堆没</p><p>用的代码，这里将php mysql的操作做一下总结，希望以后用到的时候不用再感到麻烦了。</p><p>查看代码打印<br/>&lt;?php<br/>$dbhost=&#39;localhost&#39;;<br/>$dbuser=&#39;root&#39;;<br/>$dbpass=&#39;123456&#39;;<br/>$dbname=&#39;products&#39;;<br/>$connect=mysql_connect($dbhost,$dbuser,$dbpass);<br/>if(!$connect) exit(&#39;数据库连接失败！&#39;);<br/>mysql_select_db($dbname,$connect);<br/>mysql_query(&#39;set names utf8&#39;);<br/>//查询<br/>$sql=&quot;SELECT * FROM `category`&quot;;<br/>$result=mysql_query($sql);<br/>while($row=mysql_fetch_array($result)){<br/>&nbsp;&nbsp;&nbsp; echo $row[&#39;id&#39;];<br/>}<br/>//插入<br/>$sql=&quot;INSERT INTO `category` (`id`,`name`) VALUES (NULL,&#39;&quot;.$name.&quot;&#39;)&quot;;<br/>$result=mysql_query($sql);<br/>if(mysql_affected_rows()){<br/>&nbsp;&nbsp;&nbsp; echo &#39;插入成功，插入ID为：&#39;,mysql_insert_id();<br/>}else{<br/>&nbsp;&nbsp;&nbsp; echo &#39;插入失败：&#39;,mysql_error();<br/>}<br/>//修改<br/>$sql=&quot;UPDATE `category` SET `name`=&#39;&quot;.$name.&quot;&#39; WHERE `id`=&#39;&quot;.$id.&quot;&#39;&quot;;<br/>$result=mysql_query($sql);<br/>if(mysql_affected_rows()){<br/>&nbsp;&nbsp;&nbsp; echo &#39;修改成功！&#39;;<br/>}<br/>//删除<br/>$sql=&quot;DELETE FROM `category` WHERE `id`=&#39;&quot;.$id.&quot;&#39;&quot;;<br/>$result=mysql_query($sql);<br/>if(mysql_affected_rows()){<br/>&nbsp;&nbsp;&nbsp; echo &#39;删除成功！&#39;;<br/>}<br/>//关闭连接<br/>mysql_close($connect);</p><p></p>', 1397379635, 100, 3, 0),
(44, '利用.htaccess实现伪静态方法', '<p>很多朋友可能是空间也就是虚拟主机，自己就没有权限来管理apache的httpd.conf文件了，自然就不太</p><p>可能可以在这上面写静态规则了，下面我们可以让主机商开启支持.htaccess方法，这样就可以自己写</p><p>了。<br/>首先配置服务器启动重写模块<br/>打开 Apache 的配置文件 httpd.conf 。<br/>将#LoadModule rewrite_module modules/mod_rewrite前面的#去掉。<br/>保存后重启Apache</p><p>写重写规则<br/>举例说明，test.php里的代码为<br/>&nbsp;代码如下&nbsp;复制代码<br/>&lt;?php<br/>$id=$_GET[&quot;id&quot;];<br/>echo $id;<br/>?&gt;<br/>功能就是接受URL里的id参数，并在页面显示。<br/>首先用记事本（如果不行就用editplus）新建一个文档，并保存为.htaccess，在里面写入如下代码<br/>&nbsp;代码如下&nbsp;复制代码<br/>.&lt;IFMODULE mod_rewrite.c&gt;<br/>.RewriteEngine On<br/>.RewriteBase /<br/>.RewriteRule ^t_(.*).html$ test.php?id=$1 [L]<br/>.&lt;/IFMODULE&gt;<br/>具体解释可以查看apache手册。下载apache2.2手册<br/>第4行 ^t_(.*).html$ 描述你输入的URL地址， test.php?id=$1&nbsp; 其实际要访问的地址<br/>例如当您在浏览器中输入（假设您的test.php和.htaccess文件都在您服务器的mytest文件夹下）</p><p>localhost/mytest/t_1.html 则在浏览器中将输出 1,&nbsp; <br/>如果输入为 localhost/mytest/t_sophp.html 则浏览器输出sophp<br/>第一个地址实际访问的是localhost/mytest/test.php?id=1 <br/>第二个实际访问的是 localhost/mytest/test.php?id=sophp<br/>重写完规则后，将您网页中以前都为传参数的URL链接改为您修改后的规则样式就成功了。<br/>如果自己买的空间支持重写的话，只要把.htaccess 文件传到根目录即可。</p><p></p>', 1397380033, 100, 4, 0),
(45, '关于apache安全配置方法', '<p>关于apache安全配置方法</p><p>关闭危险函数<br/>如果打开了安全模式，那么函数禁止是可以不需要的，但是我们为了安全还是考虑进去。比如，我们觉</p><p>得不希望执行包括system()等在那的能够执行命令的php教程函数，或者能够查看php信息的phpinfo()</p><p>等函数，那么我们就可以禁止它们：<br/>disable_functions = system,passthru,exec,shell_exec,popen,phpinfo<br/>如果你要禁止任何文件和目录的操作，那么可以关闭很多文件操作<br/>disable_functions =</p><p>chdir,chroot,dir,getcwd,opendir,readdir,scandir,fopen,unlink,delete,copy,mkdir,rmdir,renam</p><p>e,file,file_get_contents,fputs,fwrite,chgrp,chmod,chown<br/>以上只是列了部分不叫常用的文件处理函数，你也可以把上面执行命令函数和这个函数结合，就能够抵</p><p>制大部分的phps教程hell了。<br/>(7) 关闭php版本信息在http头中的泄漏<br/>我们为了防止黑客获取服务器中php版本的信息，可以关闭该信息斜路在http头中：<br/>expose_php = off<br/>比如黑客在 telnet <a href="http://www.zhutiai.com">www.zhutiai.com</a> 80 的时候，那么将无法看到php的信息。<br/>(8) 关闭注册全局变量<br/>在php中提交的变量，包括使用post或者get提交的变量，都将自动注册为全局变量，能够直接访问，这</p><p>是对服务器非常不安全的，所以我们不能让它注册为全局变量，就把注册全局变量选项关闭：<br/>register_globals = off<br/>当然，如果这样设置了，那么获取对应变量的时候就要采用合理方式，比如获取get提交的变量var，那</p><p>么就要用$_get[&#39;var&#39;]来进行获取，这个php程序员要注意。<br/>(9) 打开magic_quotes_gpc来防止sql注入<br/>sql注入是非常危险的问题，小则网站后台被入侵，重则整个服务器沦陷，所以一定要小心。php.ini中</p><p>有一个设置：<br/>magic_quotes_gpc = off<br/>这个默认是关闭的，如果它打开后将自动把用户提交对sql的查询进行转换，比如把 &#39; 转为 &#39;等，这对</p><p>防止sql注射有重大作用。所以我们推荐设置为：<br/>magic_quotes_gpc = on<br/>(10) 错误信息控制<br/>一般php在没有连接到数据库教程或者其他情况下会有提示错误，一般错误信息中会包含php脚本当前的</p><p>路径信息或者查询的sql语句等信息，这类信息提供给黑客后，是不安全的，所以一般服务器建议禁止</p><p>错误提示：<br/>display_errors = off<br/>如果你却是是要显示错误信息，一定要设置显示错误的级别，比如只显示警告以上的信息：<br/>error_reporting = e_warning &amp; e_error<br/>当然，我还是建议关闭错误提示。<br/>(11) 错误日志<br/>建议在关闭display_errors后能够把错误信息记录下来，便于查找服务器运行的原因：<br/>log_errors = on<br/>同时也要设置错误日志存放的目录，建议根apache的日志存在一起：<br/>error_log = /usr/local/apache2/logs/php_error.log<br/>注意：给文件必须允许apache用户的和组具有写的权限。</p><p></p>', 1397380153, 100, 4, 0),
(46, 'rewrite 技术实现 Apache 防盗链', '<p><br/>rewrite 技术实现 apache 防盗链 <br/>　　apache 防盗链的第一种实现方法，可以用 rewrite 实现。首先要确认 apache 的 rewrite</p><p>module 可用：能够控制 apache httpd.conf 文件的，打开 httpd.conf，确保有这么一行配置: <br/>复制代码 代码如下:<br/>loadmodule rewrite_module modules/mod_rewrite.so<br/>在找到自己网站对应的 配置的地方，加入下列代码： <br/>复制代码 代码如下:<br/>servername php100.com <br/># 防盗链配置 <br/>rewriteengine on <br/>rewritecond %{http_referer} !^http://php100.com/.*$ [nc] <br/>rewritecond %{http_referer} !^http://php100.com$ [nc] <br/>rewritecond %{http_referer} !^http://www.php100.com/.*$ [nc] <br/>rewritecond %{http_referer} !^http://www.php100.com$ [nc] <br/>rewriterule .*.(gif|jpg|swf)$ <a href="http://www.php100.com/about/nolink.png">http://www.php100.com/about/nolink.png</a> [r,nc]</p><p></p>', 1397380242, 102, 4, 0),
(47, 'HTTP/Apache 错误代码汇总', '<p>最近测试 deflate 对文件的压缩情况，遭遇一个非常奇怪的现象。查看浏览器 http 包处理状况，发</p><p>现首页的 http 包中显示文件被压缩了， content-encoding 虽然显示 gzip ，但是文件大小确实从</p><p>94k 缩为 14k 了。而其他的 js 甚至另外一个 login.htm 文件竟然显示没有被压缩，不管我怎么设置</p><p>apache 的配置都不行。而且发现浏览器收到的 login.htm 包大小很奇怪，和另外几个 js 文件一样，</p><p>都只有几百字节。想到过可能是浏览器 cache 的原因，还记得期间曾经清过浏览器临时文件。但是在</p><p>httpwatch 里查看的时候，一个页面被 cache 了会被标记 (cache) 字样。<br/>后来跟同事讨论这事，有人提醒，是否是服务器只返回了 http header ，但是 httpwatch 中并没有显</p><p>示使用了 cache 。于是很认真的清理了一下浏览器 cache ，再次访问时，果然一切正常。奇怪，明明</p><p>记得之前不止一次清浏览器 cache 的 :( 追查了一下 http 返回的状态码，才记得之前服务器一直是</p><p>返回的 304 ， 也就是没有修改，只返回了 header 给浏览器，而浏览器根据服务器的返回信息，直接</p><p>取了 cache 来显示给用户。而跟传统的浏览器 cache 不一样的是，这个 cache 是走了流程的，是服</p><p>务器告诉浏览器不需要重新传输请求文件的，而传统的浏览器 cache 则是根本不向服务器发送请求。<br/>于是又搜索了一下 http 状态码，便有了下面的收获：<br/>http 状态码基本上可以分为 5 类：<br/>1xx 为消息类，该类状态代码用于表示服务器临时回应。<br/>100 Continue 表示初始的请求已经被服务器接受，浏览器应当继续发送请求的其余部分(HTTP 1.1)<br/>101 Switching Protocols 服务器将遵从客户的请求转换到另外一种协议(HTTP 1.1)。<br/>2xx 表示浏览器端请求被处理成功。<br/>200 OK 一切正常。<br/>201 Created 服务器已经创建了文档，Location 头给出了它的 URL。<br/>202 Accepted 已经接受请求，但处理尚未完成。<br/>203 Non-Authoritative Information 文档已经正常地返回，但一些应答头可能不正确，因为使用的是</p><p>文档的拷贝(HTTP 1.1新)。<br/>204 No Content 没有新文档，浏览器应该继续显示原来的文档。这个跟下面的 304 非常相似。<br/>205 Reset Content 没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入</p><p>内容(HTTP 1.1新)。<br/>206 Partial Content 客户发送了一个带有 Range 头的GET请求，服务器完成了它(HTTP 1.1新)。注意</p><p>，通过 Range 可以实现断点续传。<br/>3xx 重定向。<br/>300 Multiple Choices 客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如</p><p>果服务器要提出优先选择，则应该在Location应答头指明。<br/>301 Moved Permanently 客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动</p><p>地访问新的URL。<br/>302 Found 类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对</p><p>应的状态信息是“Moved Temporatily”。<br/>出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。<br/>注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求<a href="http://host/~user">http://host/~user</a> (缺少</p><p>了后面的斜杠)，有的服务器返回301，有的则返回302。<br/>严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。<br/>303 See Other 类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目</p><p>标文档应该通过GET提取(HTTP 1.1新)。<br/>304 Not Modified 客户端有缓冲的文档并发出了一个条件性的请求(一般是提供If-Modified-Since头</p><p>表示客户只想比指定日期更新的文档)。服务器告诉客户，原来缓冲的文档还可以继续使用。<br/>305 Use Proxy 客户请求的文档应该通过Location头所指明的代理服务器提取(HTTP 1.1新)。<br/>307 Temporary Redirect 和302(Found)相同。许多浏览器会错误地响应302应答进行重定向，即使原来</p><p>的请求是POST，即使它实际上只能在POST请求的应答是303时 才能重定向。由于这个原因，HTTP 1.1新</p><p>增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST</p><p>请求；如果是307应答，则浏览器只 能跟随对GET请求的重定向。(HTTP 1.1新)<br/>4xx 错误<br/>400 Bad Request 请求出现语法错误。<br/>401 Unauthorized 客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头</p><p>，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。<br/>403 Forbidden 资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的</p><p>权限设置导致。<br/>404 Not Found 无法找到指定位置的资源。这也是一个常用的应答。<br/>405 Method Not Allowed 请求方法(GET、POST、HEAD、Delete、PUT、TRACE等)对指定的资源不适用。</p><p>(HTTP 1.1新)<br/>406 Not Acceptable 指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容(HTTP</p><p>1.1新)。<br/>407 Proxy Authentication Required 类似于401，表示客户必须先经过代理服务器的授权。(HTTP 1.1</p><p>新)<br/>408 Request Timeout 在服务器许可的等待时间内，客户一直没有发出任何请求。客户可以在以后重复</p><p>同一请求。(HTTP 1.1新)<br/>409 Conflict 通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。(HTTP</p><p>1.1新)<br/>410 Gone 所请求的文档已经不再可用，而且服务器不知道应该重定向到哪一个地址。它和404的不同在</p><p>于，返回407表示文档永久地离开了指定的位置，而404表示由于未知的原因文档不可用。(HTTP 1.1新)<br/>411 Length Required 服务器不能处理请求，除非客户发送一个Content-Length头。(HTTP 1.1新)<br/>412 Precondition Failed 请求头中指定的一些前提条件失败(HTTP 1.1新)。<br/>413 Request Entity Too Large 目标文档的大小超过服务器当前愿意处理的大小。如果服务器认为自</p><p>己能够稍后再处理该请求，则应该提供一个Retry-After头(HTTP 1.1新)。<br/>414 Request URI Too Long URI太长(HTTP 1.1新)。<br/>416 Requested Range Not Satisfiable 服务器不能满足客户在请求中指定的Range头。(HTTP 1.1新)<br/>5xx 服务器错误<br/>500 Internal Server Error 服务器遇到了意料不到的情况，不能完成客户的请求。<br/>501 Not Implemented 服务器不支持实现请求所需要的功能。例如，客户发出了一个服务器不支持的</p><p>PUT请求。<br/>502 Bad Gateway 服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非</p><p>法的应答。<br/>503 Service Unavailable 服务器由于维护或者负载过重未能应答。例如，Servlet可能在数据库连接</p><p>池已满的情况下返回503。服务器返回503时可以提供一个Retry-After头。<br/>504 Gateway Timeout 由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。</p><p>(HTTP 1.1新)<br/>505 HTTP Version Not Supported 服务器不支持请求中所指明的HTTP版本。(HTTP 1.1新)</p><p></p>', 1397380400, 108, 4, 0),
(48, '搜索引擎优化之什么是搜索引擎优化', '<p>我写这几篇搜索引擎优化实践报告主要是学校毕业要交时间报告，所以我就想把我这个“成果”分成几篇放在我的博客上，希望能分享交流，这也是我建这个博客的目的，希望能认识到更多的好友，希望能学到更多的知识。</p><p>（二）什么是搜索引擎优化（SEO）</p><p>SEO是“Search Engine Optimization”的缩写，汉译为搜索引擎优化，是较为流行的网络营销方式，主要目的是增加特定关键字的曝光率以增加网站的能见度，进而增加销售的机会。</p><p>SEO优化分为站外SEO和站内SEO两种。SEO的主要工作是通过了解各类搜索引擎如何抓取互联网页面、如何进行索引以及如何确定其对某一特定关键词的搜索结果排名等技术，来对网页进行相关的优化，使其提高搜索引擎排名，从而提高网站访问量，最终提升网站的销售能力或宣传能力的技术。</p><p>1、为什么要搜索引擎优化</p><p>（1）搜索引擎已是上网不可或缺的工具</p><p>随着网络的发展，网站的数量已经数以亿计，互联网上的信息量呈爆炸性增长，加大了人们寻找目标信息的难度，而搜索引擎的出现给人们寻找信息带来极大的便利，已经成为不可或缺的上网工具。</p><p>（2）排名靠前，点击率高</p><p>根据人们的使用习惯和心理，在搜索引擎中排名越靠前的网站，被点击的几率就越大，相反，排名越靠后，得到的搜索流量就越少。据统计，全球500强的公司中，有90%以上的公司在公司网站中导入了SEO技术。</p><p>（3）网站必须针对性优化</p><p>一般的网络公司因缺乏专业的营销知识和理念，仅从技术的角度出发为您建造网站，美工只管将您的网站设计漂亮，程序员只管实现您要求的功能模块，这样做出来的网站是有缺陷的，不符合搜索引擎的收录要求，所以必须对网站进行全面的针对性优化。</p><p>2、搜索引擎优化的特点</p><p>（1）优化结果长期有效</p><p>搜索引擎优化能够帮助你提高网页的综合指数，如果网站始终保持高质量反向连接数的增加和内容的维护，你的排名会继续保持或提高。而竞价广告如果停止了，网站链接也就即刻消失。</p><p>（2）符合用户浏览习惯，搜索流量大</p><p>据调查显示，有87%的网民会利用搜索引擎服务查找需要的信息，而这之中有近70%的搜索者会直接在搜索结果的第一页查找自己所需要的信息。</p><p>（3）覆盖面广泛</p><p>网站优化是针对大部分专业搜索引擎的，你的网站不仅在Google中得到排名提升，同时在其它各大搜索引擎（Baidu\\Yahoo）也会提升你的网站排名。而选择竞价广告方式要达到这一效果则必须和各搜索引擎签订广告协议，这无疑增加了巨大的成本。</p><p><br/></p>', 1397478122, 103, 6, 0),
(49, '网站推广之如何应对网站被挂马', '<p>在网站被挂马之前不知道网站挂马是怎么回事，当我一听网站挂马时不知所措，甚至不知道被挂马的后果，我猜想第一次遇到这种情况的站长也一定很烦恼，下面我谈谈网站挂马的情况和解决方法：</p><p>如何解决网站挂马</p><p>当遇到了自己网站被挂马，网站的程序最重要，要先备份下网站程序和数据库。然后本地架设环境来清理木马代码，千万不要在FTP上直接操作，那样会让你更难处理挂马。挂马分很多种，有图片挂马、框架挂马、js挂马、global.asa挂马、还有IFRAME挂马，实际情况中如果遇到不同种类的挂马，就需要一一对应处理。</p><p>（1）、找挂马的标签，比如有</p><pre class="brush:js;toolbar:false"><br/></pre><p>或, 有的是框架为0的也是挂马特征，以上算上挂马的综合特征，必须先找到挂马代码，然后接下来是处理挂马。<br/></p><p><br/></p><p>（2）、找到了恶意代码后，接下来就是清马，如果是网页被挂马，可以用手动清，也可以用批量清， 网页清马比较简单，不会的可以用sinesafe挂马清理工具来处理，现在着重讲一下SQL数据库清马， 用这一句语句“update 表名set 字段名=replace(字段名,&#39;aaa&#39;,&#39;&#39;)”，解释一下这一句子的意思 ：把字段名里的内容包含aaa的替换成空，这样子就可以一个表一个表的批量删除网马。 再删除挂马之前千万要备份下数据库，因为清理木马的同时也有可能损坏数据库。</p><p><br/></p><p>预防被挂马（预防才是根本，如果等被挂马了一段时间，问题就不单单只是删除木马，修补漏洞了）</p><p>要频繁的注意自己网站的收录页面是否是自己网站页面，反链，友链是否正常，当然一定要及时修补网站的漏洞。</p><p><br/></p>', 1397478200, 100, 6, 0),
(50, '初识HTTP状态码与针对状态码', '<p>HTTP状态码的作用是：web服务器用来告诉客户端，发生了什么事。</p><p>200 网页一切正常</p><p>301 重定向或跳转</p><p>302 临时性转向</p><p>404 网页不存在</p><p>500 内部程序错误</p><p>301转向（301重定向、301跳转）表示本网址永久性转移到另一个地址，从而使得A网站的权重流失到B网站上，而且是永久转移权重，301是网页更改地址后对搜索引擎友好的最好方法。</p><p>302跳转又称暂时性转移，即搜索引擎会保留本网址，而去收录另一个网站的内容。但当搜索引擎遇到302重定向时，并不能正确判定哪个网址更适合，这就造成了网址url劫持的可能性。什么是网站url劫持，当网址A重定向到B网址，处于某种原因，搜索引擎搜索结果显示A的网址，但是是B的内容，这样就造成B网站的内容被A网址偷走。</p><p>404应该很熟悉了，在seo优化上404页面是网站的必备页面，它承载用户体验和seo优化的重任。如果网站没设置404页面，会出现死链接，不利于用户浏览网站也不利于蜘蛛爬行收录。</p><p><br/></p>', 1397478326, 102, 6, 0),
(51, '网络营销推动了文章出轨事件', '<p>近日，被炒得沸沸扬扬的文章出轨事件，不仅在互联网上，微博、朋友圈各种刷屏，而且还占据了各大报纸头条。很多人都说，这次文章的出轨事件背后是有阴谋的，为了满足某位女星的上位之路，这个暂且不评。资深媒体人陈朝华更是微博发文称：“对不住昨晚各位来说情的朋友和领导了，作为主编或出品人，必须尊重一线记者的辛勤劳作，否则编辑记者慢慢就不陪我玩了，读者也渐渐不买账了。”看来，这次文章出轨事件是再也掩盖不住了，而周一见，更是推波助澜的将这个事件推上了风口浪尖。</p><p>那么，为何南都周刊猛料爆出的时间要选择周一见呢?</p><p>一：周一见是南都周刊出刊的日子</p><p>说到周一见这个就不得不追溯到整个事件发生的初始。2014年3月28日晚20:16分，《南都娱乐周刊》主编谢晓发布了一篇微博，暗示周一将会有重磅消息发布，且表明“为了顺利签片，我下午关机拒绝了一切人情电话”，并称“记者也拒绝了巨大的利益诱惑”。</p><p>许多网友和媒体人转发该微博并纷纷猜测该消息的当事人。其中，文章和姚笛被提及的频率最高，有网友留言称“大有‘文章’”。随后，多个微博认证大号也都发微博明示文章和姚笛有事情发生。据观察，文章和姚笛的微博评论下在短短几小时内，被众多网友留言“周一见”。南都的“大料”是什么，娱乐播报，声画并茂，周一见。为每周一出刊。</p><p>二：周一见引爆了互联网，跻身新浪微博热门话题榜</p><p>这次出轨事件，更是成了新浪微博的热门话题之一。更有网友神级评论此”狗血“事件，为马伊琍点蜡烛，“安慰”：伊琍，不哭。而姚笛前男友迟帅与汪峰再次躺枪：姚笛周一见;伊琍，你要挺住;迟帅，大仇已报! 汪峰，周一千万别发新闻!</p><p>一直在被互联网人士断言微博将死的新浪，更是在这次事件中，再次显现出了强大的媒体和社交属性。从最开始，新浪微博的热门，到后期的用户逐渐流失，微信朋友圈的崛起，新浪微博的体验度持续下滑，一直被外界所怀疑。这次文章出轨事件，周一见，从某方面来说，再次激活了新浪微博的媒体基因，而且参与者众多，新浪微博再次逆袭了一把。</p><p>三：文章出轨事件的幕后高人----风行大火</p><p>如果大家有仔细去看的话，可以发现本次爆料的幕后人里处处充满了“风行”这个字眼。那么，此风行到底是视频网站还是娱乐工作室呢。经多方人士证实，这次文章出轨事件，周一见正式风行工作室爆出来的。这次风行又红了一把，业内翘楚：风行工作室的核心成员为两人，分别是有着大陆第一狗仔之称的卓伟和大陆第一图片狗仔的冯科，一个擅长文字一个精于偷拍，这“一文一武”也可谓是珠联璧合。不仅仅是这两人火了，而且随着时间的持续发酵，风行指数将会看涨，而无心插柳的风行网也将会从这个关键词中获取巨大的流量。</p><p>三：周一见VS红衣教主周一键</p><p>商业嗅觉敏锐的红衣教主更是在此时机，借势推出了最新科技产品“周一键”。不可谓不是营销高手，而且获得了大量转发，虽然并没有引爆，但是从这方面也值得我们深思。</p><p>红衣教主原文如下：“最近大家都在说周一键，这是啥意思呢 我沾沾自喜想了个答案，老周推出智键产品，大家亲切称之为老周的一键，简称周一键，等我们决定推出双键合璧套装后，可以周二键，我推出三键客装，就叫周三键，以此类推，直到六脉神键周六键。”</p><p>红衣教主聪明的规避了此类敏感话题，机智幽默的推出了自己的产品，获得了很多的拥簇。这比上次用马航事件推出保险产品的某公司可谓是强了很多倍，一边是被骂得很惨，一边是360用户的大力支持，可谓一斑。</p><p>四：阿里巴巴：借势周一见</p><p>而在此期间，@互联网的那些事更是爆料周一阿里巴巴更将有大事爆出，也许会抢夺文章出轨事件的头条。更多很多好事者跟帖评论。从这方面来说，阿里的公关团队在这次事件当中，利用大V的转发，再次重夺大家的眼球，让阿里巴巴重回观众的心中。虽然最终只是博大家一乐，娱乐一下，但是却不由得让人想起了阿里巴巴最新推出的一款理财产品，娱乐宝，与此次事件正是相得益彰的结合起来了，真正发挥了娱乐的本质。</p><p>五：从文章出轨事件周一见看借势营销</p><p>现在，线下的资质媒体，平面媒体已经和线上媒体进行了无缝连接，任何当下的网络热门话题都可以在第二天的报纸上发现端倪。本次文章出轨事件周一见，就是在网络上炒的沸沸扬扬，然后上了各大报纸的头条。而炒作热门话题，上头条扩大传播的这种宣传方式则是屡试不爽，各类电影，明星上位，选秀节目都是这样的一种操作手法，可谓是深谙此道。</p><p>而360和阿里巴巴再次事件中，也借势营销了自己，都算比较成功。360营销了自己的产品，阿里巴巴推广了自己的娱乐精神，以及后面的娱乐宝。可谓是用很小的成本或者是没有成本，获得了很大的关注，成为了最大赢家。而借势推广关键在于借势，借势妥当，便可四两拨千金，以较低的投入取得超值的报答。若是借势不妥，不光可能带不来任何收益，还简单“偷鸡不成蚀把米”，给本身带来许多的负面影响。这值得我们每位营销人员深思!</p><p><br/></p>', 1397478367, 106, 6, 0),
(52, '史上最全面的网站诊断分析报告方案', '<p>很多新手SEO，刚进入SEO这个圈里面的时候，都想要一份网站诊断方案，或者网站诊断分析报告模板。有些SEO刚进去一个新公司的第一天上班，就是给网站做个大检查，你的领导或者老板往往都会这样安排的。如果没有一个清晰的思路，那网站诊断起来是非常乱的。</p><p>今天老冯(冯东阳)我给大家整理一份基于SEO方面的网站诊断分析方案，也可以说是一个流程，或者说是一个目录或者导航吧!这样，网站优化师能很方面的按照这个诊断流程，去分析自己网站的情况，老冯会在这份网站诊断方案里面放入一些需要用到的免费诊断工具。</p><p>基于SEO的网站诊断方案</p><p>一、网站基本情况</p><p>1、网站域名诊断：注册信息、域名后缀、长度、易记等;</p><p>2、空间诊断：位置、速度、是否是独立IP;</p><p>3、SEO基本数据：</p><p>网站各大搜索引擎收录情况</p><p>百度快照</p><p>外链情况</p><p>PR、BR</p><p>关键词密度;</p><p>4、网站关键词排名：</p><p>关键词是否有排名、品牉词是否有排名;</p><p>以上网站的基本信息诊断，我们用站长工具就能一下子诊断出来了，常用的站长工具有站长之家的</p><p>SEO诊断工具：seo.chinaz.com，</p><p>爱站的SEO综合查询工具：www.aizhan.com</p><p>去查网www.7c.com</p><p>这几个站长用的在线查询工具都是可以分析出网站基本情况的。</p><p>5、网站功能诊断：</p><p>是否存在BUG;</p><p>6、网站可信度诊断：</p><p>内容、实力、荣誉证书等;</p><p>二、关键词诊断——最合适的关键词</p><p>1、关键词的难易程度;</p><p>2、关键词的精准程度;</p><p>3、关键词的选择是否合适</p><p>三、网站关键词布局诊断</p><p>1、title标签的关键词设定;</p><p>2、description标签的关键词设定;</p><p>3、keywords标签的关键词设定;</p><p>4、导航的关键词设定;</p><p>5、网站内容中的关键词;</p><p>6、网页其他位置中是否有关键词频率;</p><p>这一点可以用点击网站页面，右键查看源代码的方式去检查一些栏目页、关键词的情况，如果栏目页设置好了关键词，我们也可以用站长之家的站长工具seo.chinaz.com查询栏目中的关键词密度。</p><p>四、网站结构诊断</p><p>1、物理结构——URL地址：静态or动态、长短、分隔符、目录层次、网址规范化、是否含有关键词;</p><p>2、内部链接结构;</p><p>3、网站导航设置;</p><p>4、网站栏目设置与层次;</p><p>5、网页内容布局：内容板块是否考虑到用户需求和转化，是否符合SEO(内容更新板块/相关性链接布局等);</p><p>五、网站内容诊断</p><p>1、内容的原创比例;</p><p>内容的原创度可以用文章原创度检查工具，可以简单分析几篇看看。</p><p>2、内容的更新频率;</p><p>3、内容与网站主题及关键词的相关性;</p><p>六、网站代码诊断</p><p>1、网页布局代码;</p><p>2、代码是否简洁;</p><p>3、权重代码有没有使用;</p><p>4、图片代码是否优化;</p><p>5、JS和flash;</p><p>七、网站链接情况诊断</p><p>1、站内死链接检测;</p><p>2、友情链接检测;</p><p>3、链接锚文本;</p><p>4、面包屑链接;</p><p>5、外链检测：外链的质量和数量;</p><p>外链的分析老冯（冯东阳）我还是比较推荐使用百度外链查询工具的，如果你是针对百度做优化的话，还是使用百度外链分析吧！</p><p>八、网站图片诊断</p><p>1、图片的大小是否合理</p><p>特别是首页这块，图片越小打开首页的速度越快，可以用网页审查工具，或者直接点击图片，右键属性去查询图片的大小。</p><p>2、图片是否加ALT标签</p><p>图片是否加入ALT标签或者title标签</p><p>3、图片是否美观</p><p>图片是否美观，是否与内容比较贴合</p><p>九、网站IP、PV、跳出率、访客停留时间、平均点击深度诊断分析</p><p>利用百度统计工具进行网站的IP/PV、网站跳出率等衡量网站的指标进行分析。以便诊断出网站哪些栏目、哪些页面优化的程度不够，分析访客行为、搜索关键词，访客人群、入口链接以便查询出网站整体运营情况。</p><p>十、站内其他诊断</p><p>1、网站地图;</p><p>2、404页面设置;</p><p>3、robots文件;</p><p>以上十个诊断要点，是郑州SEO老冯为大家整理的网站诊断方案，我感觉方案已经大概框架已经整理的算是比较全面了，一些细节方面的具体诊断，我就不在这份网站诊断方案里面进行阐述了。如果给网站进行诊断的过程中，遇到什么问题了，或者不知道该如何进行具体诊断操作，可以留言，老冯（冯东阳）看到后一定会及时回应！</p><p><br/></p>', 1397478438, 105, 8, 0),
(53, ' 创业公司和求职者都应看的九个面试题', '<p>Ryan Matzner是Fueled公司战略主管，首席iPhone应用开发者和移动设计大师。最近他在个人博客撰文，就面试谈了自己一些看法，同时也给出他自己认为很有价值的面试题，希望能给创业公司招聘员工以及求职者带来帮助。</p><p><br/></p><p>从起步阶段到如今拥有100多名员工，我经常需要定期面试许多聪明的求职者，这些人哪怕睡着也能回答你的标准面试问题。</p><p>虽然这些求职者的专业、大学和目标能够提供一些可靠的基本信息，使之能够更深入的了解，并让求职者从众多候选人中脱颖而出，但实际上教育背景很难能够真正反映出一个人能力，譬如我就是，只是勉强地上了大学。</p><p>这些都告诉我：如果你不去真正地问一些开放性问题，你就真的不知道这些求职者他们是怎么想的？未来他们会成为什么类型的员工？所以当我面试的时候，我希望能够知道简历之外的事情。因此，对于一些年轻的创业公司，当你需要面试员工时，这里的一些东西可能会引发你深思，而对于其他人，我的见解或许能帮你寻找到一份好工作。</p><p><br/></p><p>第一个问题：你能告诉我一些不无聊的应用吗？</p><p>我们都希望我们的应用程序很流行，但是如果你最喜欢的应用程序是Flappy Bird和Instagram，这就是一个问题，我需要听到一些尚未听过的应用。</p><p>只要不无聊，我喜欢求职者告诉我一些从来没听说过的应用，然后我就会出一些问题去考验面试者：能告诉我你将如何改进这款应用？如果对方回答称，这是一款很酷的应用，那说明这位面试者就很平淡无奇。</p><p>&nbsp;</p><p>第二个问题：你对经常使用的应用有什么不喜欢的地方吗？</p><p>最好的产品经理往往是最喜欢抱怨的，如果你对一个应用没有任何想评论的地方，那么你将如何帮助大家在市场上建立最好的应用？要成一个完美主义者，要做一个改进者。</p><p>&nbsp;</p><p>第三个问题：如果我给你足够的钱，你会做什么创业项目？</p><p>我不想看你的商业计划，我只是希望能够和你很明智地谈论你拥有的想法。我们经营的就是创意——人们每天都会提出一些创意给我们。</p><p>同样，如果你创业的想法是想开一家餐馆或鞋店，那么你不应该在科技公司面试。</p><p>&nbsp;</p><p>第四个问题：有多少人住在纽约？</p><p>我们喜欢拥有很多常识的人，因为你永远不知道它哪天就会派上用场。关于人口估计数，你差个几百万都没关系，但是如果你认为纽约这座城市有十万人或者一亿人，这就是个相当大的问题了。</p><p>如果我们打算开发一款针对纽约市民的应用，你不知道纽约人数有多少，我们又怎么能指望你来创建一个商业模式？</p><p>&nbsp;</p><p>第五个问题：你在业内，听到的最新消息是什么？</p><p>在一般情况下，你应该能谈论创业和科技项目，比如企业如何获得资助，谁获得了投资？以及你对这件事的看法？我们喜欢那些具有企业家精神的人。</p><p>&nbsp;</p><p>第六个问题：互联网是如何工作的？</p><p>如果你想做技术职位，请解释这个问题给我听，最好比较细节一点。如果是其它岗位，你能理解的很好，那么会额外加分。</p><p>&nbsp;</p><p>第七个问题：你听什么音乐？你读什么书？喜欢什么电影？</p><p>这题没有正确或错误的答案，你又不必非得对这些事感兴趣。但是，你至少得有喜欢的东西，并且我也希望能够理解为什么？我喜欢通过这个去深度地了解一个人。</p><p>&nbsp;</p><p>第八个问题：你擅长打乒乓球吗？</p><p>身边有擅长打乒乓球的人当然是好事，不过这绝对不是一个硬性要求。</p><p>&nbsp;</p><p>第九个问题：你如何度周末？</p><p>我们不是想审判你，也不关心你周末究竟做了什么，但我关心你是如何告诉我周末你做了什么。</p><p>很大一部分有概念的人都是一个非常善于讲故事的人，能够口头传递信息也非常重要，如果你周末什么都没做，哪怕是在睡觉，有些人甚至都可以把它讲成一个有趣的事。</p><p><br/></p>', 1397478476, 104, 8, 0),
(54, ' 开发者常犯的九大错误', '<p>如今的创业公司面临的最大问题就是服务交付的速度，创业公司的开发者也与创业团队的其他成员一样，整天忙于救火，因此往往搞错重点和优先级，并最终为公司带来大麻烦。</p><p>青年创业家协会Young Entrepreneur Council近日就创业开发团队常犯的错误进行了一次调查，发现创业团队的开发者最常犯的错误可以归结为以下九大类：</p><p>&nbsp;</p><p>一、围绕个人问题/需求开发。</p><p>大多数创业公司都以解决现实问题为己任。但问题是创业公司经常错把个人看到的问题和需求当做是用户面临的问题。他们实际上是在围绕自己看到的所谓需 求和问题来开发，这往往是失败之源。避免搞错需求的做法是多在目标群体做调研，摸清楚真正的问题和需求是什么，在制定计划来解决或者满足它。</p><p>&nbsp;</p><p>二、开发出太多华而不实的功能。</p><p>大家都在强调所谓的最小可用产品（原型），但是一个最小可用产品应当尽可能的简单，只要能验证你的设想就好。在这个基础上开始beta测试，再决定是否需要增加那些锦上添花，华丽丽的功能。</p><p>&nbsp;</p><p>三、代码僵化。</p><p>虽然你不需要从一开始就开发一个高度可扩展的平台，但你要确保你的平台能够支持未来的扩展，而不是等成功后再考虑这个问题，这一点至关重要。</p><p>当你的僵化的代码被很多用户使用时，再想修改会是一件极为头大的事情，而且会在公司增长的关键时刻拖慢速度。</p><p>&nbsp;</p><p>四、过早发布。</p><p>创业公司崇尚快速部署。确实，尽快发布产品获得反馈对创业公司来说非常重要，但是先发布再修正的态度往往会导致过多的bug，让你的产品和公司看上去很蠢。</p><p>试着比计划晚几天发布产品，给出错工作多留几天时间，这对用户体验和品牌都有好处。</p><p>&nbsp;</p><p>五、太过关注代码。</p><p>在产品的早期，关注用户面临的问题比写代码更重要。如果你的关注重点是客户，就能写出正确的代码和功能。</p><p>&nbsp;</p><p>六、与业务脱钩。</p><p>与业务脱钩，或者错误理解客户需求是创业公司开发者常犯的错误。产品不是企业的一切，应当了解产品如何从整体上帮助公司达成各项目标和战略，而且要认识到客户才是成功的产品开发的关键所在。</p><p>&nbsp;</p><p>七、贪图覆盖所有平台。</p><p>创业公司发布产品时，总是希望覆盖尽可能多的平台，但实际上明智的做法是选择几个重点平台——甚至一个平台。这样你才有可能开发出更好的产品，同时 避免团队资源被稀释。对于有些公司来说，他们面临桌面与移动的抉择，而有些公司则纠结于Android和iOS，总之，你需要敲定一个先发平台，然后开始 优化。</p><p>&nbsp;</p><p>八、部门和职能交叉。</p><p>创业公司要做的第一件事就是将创新者从运营者的事务中剥离出来。不要让技术极客去时刻关注财务报表。</p><p>&nbsp;</p><p>九、根据编码的难易程度来做规划。</p><p>开发之前必做的一件事就是规划。这时候一个常犯的错误就是根据编码的难易或者可行程度来让产品削足适履。你不应当问自己：“实现这个功能的最简单的方法是什么？”而应该是：“能解决用户问题的最简单的方法是什么？”</p><p><br/></p>', 1398614669, 105, 8, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(55, ' 程序员，如何在工作中崭露头角？', '<p>文章作者 Yuriy Lopotun有着8年的IT工作经验，分别在4家不同的公司。在这期间有幸和一些程序员一起共事，他们都很特别：有的人在这个行业里取得了成功；有的人对自己的现状很满意，就一直在一家公司一个岗位上干了很多年；还有一部分人被炒鱿鱼了。基于作者自己的所见所闻所想，于是列出了下面的能够帮助程序员在工作岗位上取得成功的建议。（以下是编译内容）</p><p>1. 大胆的提出问题</p><p><br/></p><p>有些新的程序员在进入公司的第一天很犹豫是否要去向别人寻求帮助，比如：当程序员在项目环境设定上遇到问题或者是他们不明白这个项目的商业流程的时候，他们很犹豫，不知道该不该问出这个问题。其实这都不是什么大的问题——尽管寻求帮助，或是向别人澄清一下你的想法。否则的话将会在和项目有关的问题上纠结、浪费时间。</p><p>还有一种情况就是，当领导让你自己提出根本没有任何限制的问题的时候，很多程序员对自己的口才很吝啬。千万不要害怕问问题，尤其是在大的环境下。</p><p>2. 找准自己的定位</p><p><br/></p><p>在很多项目或者项目模块里缺少资源，这就意味着在你开始工作的时候或是完成目前项目的时候要让你的领导知道你的偏好项目和执行能力。许多人常常是喜欢加入一个新的有特色的项目，而有的人喜欢加入一个有熟人的开发团队。</p><p>不过，最明智的选择是挑选一个没有多少同行的开发者知道的项目，只有你一个人在这方面擅长。只不过在刚开始的时候需要花大量的时间去了解熟悉它的运作模式和现有的代码；当一切事项都已掌握之后，就可以向管理层自我推荐，领先于别人，就是超越了自己。</p><p>3. 熟悉App的“蓝图”</p><p><br/></p><p>现如今大多数的企业App都是比较复杂的，使用不同的技术完成的模块来组成的。作者展示了他现在的工作就是由3个部分组成的：</p><p>&nbsp;</p><p>一个和社交网络和收集数据互动的模块。</p><p>一个处理收集的所有数据的模块。</p><p>一个UI模块。</p><p>&nbsp;</p><p>每一个模块都是由不同的开发者团队开发并操控的。这些模块在技术上没有什么联系，但是在商业流程上是相互联系的，也就是说，无论什么时候想要引入一个新的功能的时候，都会影响到这3个模块。</p><p>事实上并没有多少人理解整个App的商业流程，当讨论一个新功能的时候，经理常常会要求在行的人对软件程序的更改最初最好的评估，评估结果可能会用在每一个模块里。所以如果你这道这个App蓝图的话，你就能参与到这个讨论中。</p><p>4. 做你需要做的事，而不是做你喜欢的事</p><p><br/></p><p>一些非常有才能的程序员经常会遇到很严重的问题——他们有自己的特别之处或者说是感兴趣的方向，一旦被要求去做其他的不一样的事情的时候，能力和做事质量就下降了。因为他们不能集中注意力在不感兴趣的事情上，这是很致命的短板。你如说：人们可能想要测试Scala，但必须先处理Hibernate或原生SQL；他们可能想要并发性，但是必须要协助与前端开发相关的工作。</p><p>如果你需要长期处理你自己根本不擅长的技术问题/工作，那么你最好换工作。否则如果你是临时帮助别人处理你不擅长的问题，最好表现的专业一点，把事情做好。</p><p>5. 善于分享，乐于帮助</p><p><br/></p><p>估计很少有人单枪匹马的情况下还能有很高的产量吧，这只能暗示在交流上的贫乏。自私是团队合作的最大障碍，最后也只能是整个团队停滞不前的结果。这样的“孤狼”也基本上得不到团队的信任。</p><p>此外，如果你在一个区域办事处工作，而你的同事没有把任务做好，你最好去帮助他，因为团队荣誉至关重要，这也是一个双赢的决策。</p><p>6. 尽量给出现实的评估</p><p><br/></p><p>给出太乐观的评估对于程序员来说是比较困难的，作者站在自己的立场给出两大主要原因：</p><p>A. 我们经常忽略将要花费的时间：</p><p>&nbsp;</p><p>在实施阶段处理预料之外的问题。</p><p>在开发环境上测试实现的功能。</p><p>编写单元测试和集成测试。</p><p>分散时间和精力到其他高优先级任务上。</p><p>&nbsp;</p><p>B. 有时在给出真正的评估之后会让我们觉得不舒服，因为经理看到这样的评估之后表情会很吓人。在这种情况下，我们通常会把特点划分成几个子任务，以至于总的评估看起来不是那么可怕。</p><p>太乐观的评估在大多数情况下会有悲惨的结局：</p><p>你必须把任务移到QA在一个buggy状态下，通过思考来证明它：“通常QA会返回所有开发功能列表的备注资料给开发人员，所以我仍然会有机会解决所有的bug”。但是在现实的评估条件下情况就不会是这个样子了。</p><p>7. 测试，测试，再测试！</p><p><br/></p><p>许多程序员因为错误评估而被迫转入QA环节，有些程序员在交货期来临之前停止了任务，转入测试阶段，只是想证明他们的高效能。当然了，这是一个好的意图，但是并不似所有的掉头检查都能带来好的结果。总之，中途检查要比从头开始好得多。</p><p>再次强调一下单元测试和集成测试的重要性。它们是回归分析的第一个指标：一个打破现有功能的机会。不幸的是,有些人编写测试只有一个目的——避免漏掉代码覆盖率而带来的责任。这样的代码在代码审查过程中需要被捕获并拒绝，这是提高代码质量的另一个好方法。</p><p>&nbsp;</p><p>8. 记住：谁都会犯错误的。</p><p><br/></p><p>有谁希望和一个出现bug就喜欢批评别人的的人一起工作呢？估计没人愿意，但事实是我们大多数人看起来就是那个样子，只是自己没意识到。下面列举了一些避免出现这些状况的建议：</p><p>如果你和同事一起构建一些功能，而他有稍微慢了一些，与其去责怪他还不如去帮助他，至少应该到经理那去争取更多的时间。既然需要共同的按时交付产品，那么两个人对这项功能的完成都是有责任的。</p><p>当你修复了一个bug或者是发现了一个bug，即使你知道是谁的缘故导致这些bug的出现，也没必要通过网络电话渠道让公司里的每个人都知道这件事。犯错误是在所难免的，有的时候你会遇到“ugly code”模块，同上，不需要让更多的人知道它的制造者。</p><p>如果你对一个同事有什么不好的意见，都没必要向你的上级反映，除非上级向你询问。首先你要确保你的上级是一个开明人士——知晓他所管理的团队里队员的强项和弱项，这样才能处理好队员之间需求。</p><p>恰恰相反，我们应该经量多的向大家包括领导反映同事做的一些好事。比如，数周之前我的一个同事在早上7点钟的时候临时驾车到公司来试运行App模块，所以他应该得到大家的赞美之词。</p><p>9. 在社交网站上宣传公司的强项。</p><p><br/></p><p>现如今，基本上每个程序员都在使用社交工具。你可以关注朋友们的公司，也可以在网上介绍自己所在公司，不管是好事还是坏事，都可以在网上贴出来：有的时候会组织技术峰会、赞助商会议、商业论坛、发布会、寻找新的开发者等等，社交工具对于一个程序员来说是有很大的用处的。除此之外，有很多的网站上都有公司人员对公司的评论，任何人都可以写，当然，只要是你喜欢的内容，没必要撒谎。</p><p>在国外，想要和公司CTO或者是CEO进行交流的最简单的方式是通过Twitter，在国内可使用的交流工具也是各种各样啊！</p><p>10. 小建议和小技巧。</p><p><br/></p><p>接下来的是一些能够让你获得领导或者同事的赞美的建议和技巧：</p><p>A. 适应老板的时区</p><p>许多来自欧洲和印度的程序员都是从美国那边接受发自总部的指令的。在这种情况下，如果程序员能够在晚上的时间段和美国总部进行交流讨论工作上的事情，肯定比在下午5点钟下班时候和总部进行交流所获得的工作效率要高得多。</p><p>B. 如果有需要，任何时候都要帮助公司做事。</p><p>身边的例子：公司的生产系统需要全天候的监视着，因为任何时候都有可能出现问题。通常情况下是区域的程序员参与监视，但是去年的新年假期期间我们被要求留下来值班，我被安排在大年三十那天，我本来可以要求调整一下的，但是我服从了公司的安排，很幸运，那一晚上基本上没什么问题出现，我在一个很正常的环境下度过了我的新年，但是至少公司知道我随时愿意为公司付出。</p><p>C. 在公司的指引下参加应聘面试</p><p>如果你有机会以面试官的身份参加面试，一定要好好利用这一机会，因为这是无价的经验。首先，这能发挥出你的口才能力，很多程序员都缺乏这样的技能。其次，你可以认真听一听别的面试官（你的同事）都问了哪些问题。最后，你对求职者的观点将会纳入参考范围，这关乎到这个应聘者最后能不能加入到这个公司里</p><p><br/></p>', 1397478563, 107, 8, 0),
(56, 'php 中cookie和session的用法比较', '<p>cookie和session最大的区别一个是保存在服务器上，一个是保存在客户端电脑中，cookie安全性不如</p><p>session而session用多了会占机器资源。<br/>1、cookie数据存放在客户的浏览器上，session数据放在服务器上。<br/>2、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗，考虑到安全应当使用</p><p>session。<br/>3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能， 考虑到减轻服</p><p>务器性能方面，应当使用COOKIE。<br/>4、单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能3K。<br/>例，COOKIE<br/>如：setCookie(&#39;user&#39;,&#39;zhangsan&#39;,time()+3600)，代表 user变量值为张三的cookie存活时间为1小时，</p><p>在此要注意此函数属于头函数，也就相当于php中的header()跳转函数，在它之前不能有“任何输出（包</p><p>括空格）”。<br/>2、用$_COOKIE[&#39;user&#39;]来获取cookie值。<br/>3、注销cookie ：setCookie(&#39;user&#39;,&#39;&#39;,time()-3600); 或 setCookie(&#39;user&#39;);<br/>4、<br/>//删除客户端在cookie中的sessionid<br/>if(isset($_COOKIE[session_name()])){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setCookie(session_name(),&#39;&#39;,time()-30,&#39;/&#39;); <br/>}</p><p>例，session<br/>1、//开启session<br/>&nbsp;&nbsp;&nbsp;&nbsp; session_start();<br/>2、//清空session值 <br/>&nbsp;&nbsp;&nbsp;&nbsp; $_SESSION = array();<br/>//彻底销毁session<br/>session_destroy();</p><p>session和cookie谁更安全 <br/>就个人而言，我觉得session更安全一点，我以下几点看法。<br/>1，如果session和cookie一样安全的话，二者就没有并要同时存在了，只要cookie就好了，让客户端来分</p><p>提服务器的负担，并且对于用户来说又是透明的。何乐而不为呢。<br/>2，session的sessionID是放在cookie里，要想功破session的话，第一要功破cookie。功破cookie后，你</p><p>要得到 sessionID,sessionID是要有人登录，或者启动session_start才会有，你不知道什么时候会有人</p><p>登录。第二，sessionID是加密的，第二次session_start的时候，前一次的sessionID就没有用了，</p><p>session过期时sessionid也会失效，想在短时间内功破加了密的 sessionID很难。session是针对某一次</p><p>通信而言，会话结束session也就随着消失了，而真正的cookie存在于客户端硬盘上的一个文本文件，谁</p><p>安全很显然了。<br/>3，如果session这么容易被功破，这么不安全的话，我想现有的绝大部分网站都不安全了。</p><p></p>', 1398153261, 146, 9, 0),
(58, '简单实现冒泡排序', '<table width="NaN" height="NaN"><tbody style="padding: 0px !important; margin: 0px !important; border: 0px !important; outline: 0px !important; background-image: none !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 10pt !important; min-height: inherit !important; "><tr style="padding: 0px !important; margin: 0px !important; border: 0px !important; outline: 0px !important; background-image: none !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 10pt !important; min-height: inherit !important; "><td class="content" style="padding: 0px 0px 0px 0.5em !important; margin: 0px !important; border-width: 0px 0px 0px 3px !important; border-left-color: rgb(108, 226, 108) !important; outline: 0px !important; background-image: none !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; line-height: 1.1em !important; font-size: 10pt !important; min-height: inherit !important; " width="NaN" height="NaN"></td></tr></tbody></table><p>&lt;?php</p><p><br/></p><p>#冒泡排序法</p><p><br/></p><p>$arr = array(12,45,89,3,24,55,223,76,22,11,89,2,4,5,28,112,20,434,23,65,65,765,6,8,23,5,33,553,45,423,64,77,84,23);</p><p><br/></p><p>$tmp;</p><p><br/></p><p>for($i=0;$i&lt;count($arr)-1;$i++ ){ &nbsp; &nbsp; &nbsp;</p><p><br/></p><p>&nbsp; &nbsp; for($j=0;$j&lt;count($arr)-1-$i;$j++){</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; if($arr[$j] &gt; $arr[$j+1]){</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $tmp = $arr[$j];</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $arr[$j] = $arr[$j+1];</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $arr[$j+1] = $tmp;</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; }</p><p><br/></p><p>}</p><p><br/></p><p>print_r($arr);</p><p><br/></p><p>?&gt;</p><p><br/></p>', 1398614455, 108, 9, 0),
(59, 'MySql常用语句', '<p>一、mysql常用语句</p><p><br/></p><p>创建，删除和最基本查询：</p><p>显示数据库 &nbsp; &nbsp; mysql-&gt;show databases;</p><p>创建数据库 &nbsp; &nbsp; mysql-&gt;create database db;</p><p>删除数据库　　mysql-&gt;drop database db;</p><p>选择数据库 &nbsp; &nbsp; mysql-&gt;use db</p><p>创建表 &nbsp; &nbsp; &nbsp; &nbsp; mysql-&gt;create table mytable(name varchar(20),sex(char(1),birth date);</p><p>删除表　　　　mysql-&gt;drop table mytable;</p><p>显示表的内容 &nbsp; mysql-&gt;show tables;</p><p>显示表的结构 &nbsp; mysql-&gt;describe mytable;</p><p><br/></p><p>更新：</p><p>１、对列的操作：</p><p>在一个表中增加一条字段 mysql-&gt;alter table yourtable add &nbsp;name varchar(20)not null;</p><p>删除一个字段 &nbsp;mysql-&gt;alter table yourtable drop name ;</p><p>２、对行的操作：</p><p>插入一条记录 &nbsp; mysql-&gt;insert into mytable values(&#39;summer&#39;,&#39;m&#39;,&#39;1983-08-24&#39;);</p><p>删除一条记录 &nbsp;mysql-&gt;delete from mytable where name=&#39;summer&#39;;</p><p>修改一条记录 &nbsp;mysql-&gt;update mytable set sex=&#39;vm&#39; where name=&#39;summer&#39;;</p><p>插入多条记录 &nbsp; mysql-&gt;insert into mytable &nbsp;select *from yourtable;(</p><p>这种形式的INSERT 语句中,新行的数据值不是在语句正文中明确地指定的.而是语句中指定的一个数据库查询. 该查询的逻辑限制:</p><p>»查询不能含有ORDER BY子句. »查询结果应含有与INSERT语句中列数目相同的列,且数据类型必须逐列兼容. )</p><p><br/></p><p>简单查询：</p><p>1.在查询结果中显示列名</p><p>a.用as关键字：select name as &#39;姓名&#39; &nbsp; from students order by age</p><p>b.直接表示：select name &#39;姓名&#39; &nbsp; from students order by age</p><p>.精确查找:</p><p>a.用in限定范围：select * from students where native in (&#39;湖南&#39;, &#39;四川&#39;)</p><p>b.between...and：select * from students where age between 20 and 30</p><p>c. 比较测试符：（包括=,&lt;&gt;,&lt;,&lt;=,&gt;,&gt;=）select * from students where name = &#39;李山&#39;</p><p>d.like:select * from students where name &nbsp;like &nbsp;&#39;李%&#39; (注意查询条件中有“%”，则说明是部分匹配，而且还有先后信息在里面，即查找以“李”开头的匹配项。所以若查询有“李”的所有对象</p><p><br/></p><p>，应该命令：&#39;% 李%&#39;;若是第二个字为李，则应为&#39;_李%&#39;或&#39;_李&#39;或&#39;_李_&#39;。)</p><p>e.[]匹配检查符：select * from courses where cno like &#39;[AC]%&#39; (表示或的关系，与&quot;in(...)&quot;类似，而且&quot;[]&quot;可以表示范围，如：select * from courses where cno like &#39;[A-C]%&#39;)注：关于这个</p><p><br/></p><p>字符我在mysql里用的时候mysql把它当两个普通自符处理的。</p><p>[^]stockname like &#39;[^F-M]%&#39; --------- (^排除指定范围)</p><p>a.count()求总数，如：select count(*) &nbsp;from students (求学生总人数)</p><p>b.avg(列)求平均，如：select avg(mark) &nbsp;from grades where cno=’B2’</p><p>c.max(列)和min(列)，求最大与最小</p><p><br/></p><p>---------------------------------------------------------------------------------------------------------------------------------------------</p><p>二、一些常用的mysql语句</p><p>PHP+MySQL+Linux目前已逐渐成为小型web服务器的一种经典组合。在windows环境下构筑和调试MySQL数据库是许多网站开发者的一种首选。</p><p><br/></p><p>以下为一些常用的MYSQL语句:</p><p><br/></p><p>一、连接MYSQL。</p><p>格式： mysql -h主机地址 -u用户名 －p用户密码</p><p>1、例1：连接到本机上的MYSQL。</p><p>首先在打开DOS窗口，然后进入目录 mysqlbin，再键入命令mysql -uroot -p，回车后提示你输密码，如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示</p><p><br/></p><p>符是：mysql&gt;</p><p>2、例2：连接到远程主机上的MYSQL。假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：</p><p>mysql -h110.110.110.110 -uroot -pabcd123</p><p>（注:u与root可以不用加空格，其它也一样）</p><p>3、退出MYSQL命令： exit （回车）</p><p><br/></p><p>二、修改密码。</p><p>格式：mysqladmin -u用户名 -p旧密码 password 新密码</p><p>1、例1：给root加个密码ab12。首先在DOS下进入目录mysqlbin，然后键入以下命令</p><p>mysqladmin -uroot -password ab12</p><p>注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。</p><p>2、例2：再将root的密码改为djg345。</p><p>mysqladmin -uroot -pab12 password djg345</p><p><br/></p><p>三、增加新用户。（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）</p><p>格式：grant select on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot; 例1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。</p><p><br/></p><p>首先用以root用户连入MYSQL，然后键入以下命令：</p><p>grant select,insert,update,delete on *.* to test1@&quot;%&quot; Identified by &quot;abc&quot;;</p><p>但例1增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见例2。</p><p>例2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使</p><p><br/></p><p>用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。</p><p>grant select,insert,update,delete on mydb.* to test2@localhost identified by &quot;abc&quot;;</p><p>如果你不想test2有密码，可以再打一个命令将密码消掉。</p><p>grant select,insert,update,delete on mydb.* to test2@localhost identified by &quot;&quot;;</p><p><br/></p><p><br/></p><p>4、第一条命令</p><p>mysql&gt; select version(),current_date();</p><p>+----------------+-----------------+</p><p>| version() | current_date() |</p><p>+----------------+-----------------+</p><p>| 3.23.25a-debug | 2001-05-17 |</p><p>+----------------+-----------------+</p><p>1 row in set (0.01 sec)</p><p>mysql&gt;</p><p><br/></p><p>此命令要求mysql服务器告诉你它的版本号和当前日期。尝试用不同大小写操作上述命令，看结果如何。</p><p>结果说明mysql命令的大小写结果是一致的。</p><p>练习如下操作：</p><p>mysql&gt;Select (20+5)*4;</p><p>mysql&gt;Select (20+5)*4,sin(pi()/3);</p><p>mysql&gt;Select (20+5)*4 AS Result,sin(pi()/3); (AS: 指定假名为Result)</p><p><br/></p><p>5、多行语句</p><p>一条命令可以分成多行输入，直到出现分号“；”为止：</p><p>mysql&gt; select</p><p>-&gt; USER()</p><p>-&gt; ,</p><p>-&gt; now()</p><p>-&gt;;</p><p>+--------------------+---------------------+</p><p>| USER() | now() |</p><p>+--------------------+---------------------+</p><p>| ODBC@localhost | 2001-05-17 2215 |</p><p>+--------------------+---------------------+</p><p>1 row in set (0.06 sec)</p><p>mysql&gt;</p><p>注意中间的逗号和最后的分号的使用方法。</p><p><br/></p><p>6、一行多命令</p><p>输入如下命令：</p><p>mysql&gt; Select USER(); Select NOW();</p><p>+------------------+</p><p>| USER() |</p><p>+------------------+</p><p>| ODBC@localhost |</p><p>+------------------+</p><p>1 row in set (0.00 sec)</p><p><br/></p><p>+---------------------+</p><p>| NOW() |</p><p>+---------------------+</p><p>| 2001-05-17 23:06:15 |</p><p>+---------------------+</p><p>1 row in set (0.00 sec)</p><p>mysql&gt;</p><p>注意中间的分号，命令之间用分号隔开。</p><p><br/></p><p>7、显示当前存在的数据库</p><p>mysql&gt; show databases;</p><p>+----------+</p><p>| Database |</p><p>+----------+</p><p>| mysql|</p><p>| test |</p><p>+----------+</p><p>2 row in set (0.06 sec)</p><p>mysql&gt;</p><p><br/></p><p>8、选择数据库并显示当前选择的数据库</p><p>mysql&gt; USE mysql</p><p>Database changed</p><p>mysql&gt;</p><p>(USE 和 QUIT 命令不需要分号结束。）</p><p>mysql&gt; select database();</p><p>+---------------+</p><p>| database()|</p><p>+---------------+</p><p>| mysql |</p><p>+---------------+</p><p>1 row in set (0.00 sec)</p><p><br/></p><p>9、显示当前数据库中存在的表</p><p>mysql&gt; SHOW TABLES;</p><p><br/></p><p>10、显示表(db)的内容</p><p>mysql&gt;select * from db;</p><p><br/></p><p>11、命令的取消</p><p>当命令输入错误而又无法改变（多行语句情形）时，只要在分号出现前就可以用 c来取消该条命令</p><p>mysql&gt; select</p><p>-&gt; user()</p><p>-&gt; c</p><p>mysql&gt;</p><p><br/></p><p>这是一些最常用的最基本的操作命令，通过多次练习就可以牢牢掌捂了。</p><p><br/></p><p>学习篇</p><p><br/></p><p>了解了一些最基本的操作命令后，我们再来学习如何创建一个数据库和数据库表。</p><p><br/></p><p>1、使用SHOW语句找出在服务器上当前存在什么数据库：</p><p><br/></p><p>mysql&gt; SHOW DATABASES;</p><p>+----------+</p><p>| Database |</p><p>+----------+</p><p>| mysql|</p><p>| test |</p><p>+----------+</p><p>3 rows in set (0.00 sec)</p><p><br/></p><p>2、创建一个数据库abccs</p><p>mysql&gt; Create DATABASE abccs;</p><p>注意不同操作系统对大小写的敏感。</p><p><br/></p><p>3、选择你所创建的数据库</p><p>mysql&gt; USE abccs</p><p>Database changed</p><p>此时你已经进入你刚才所建立的数据库abccs.</p><p><br/></p><p>4、 创建一个数据库表</p><p>首先看现在你的数据库中存在什么表：</p><p>mysql&gt; SHOW TABLES;</p><p>Empty set (0.00 sec)</p><p>说明刚才建立的数据库中还没有数据库表。下面来创建一个数据库表mytable:</p><p><br/></p><p>我们要建立一个你公司员工的生日表，表的内容包含员工姓名、性别、出生日期、出生城市。</p><p>mysql&gt; Create TABLE mytable (name VARCHAR(20), sex CHAR(1),</p><p>-&gt; birth DATE, birthaddr VARCHAR(20));</p><p>Query OK, 0 rows affected (0.00 sec)</p><p><br/></p><p>由于name、birthadd的列值是变化的，因此选择VARCHAR，其长度不一定是20。可以选择从</p><p>1到255的任何长度，如果以后需要改变它的字长，可以使用Alter TABLE语句。）;</p><p>性别只需一个字符就可以表示：&quot;m&quot;或&quot;f&quot;，因此选用CHAR(1);</p><p>birth列则使用DATE数据类型。</p><p><br/></p><p>创建了一个表后，我们可以看看刚才做的结果，用SHOW TABLES显示数据库中有哪些表：</p><p>mysql&gt; SHOW TABLES;</p><p>+---------------------+</p><p>| Tables in menagerie |</p><p>+---------------------+</p><p>| mytables|</p><p>+---------------------+</p><p><br/></p><p>5、显示表的结构：</p><p>mysql&gt; DESCRIBE mytable;</p><p>+-------------+-------------+------+-----+---------+-------+</p><p>| Field | Type| Null | Key | Default | Extra |</p><p>+-------------+-------------+------+-----+---------+-------+</p><p>| name| varchar(20) | YES | | NULL| |</p><p>| sex | char(1) | YES | | NULL| |</p><p>| birth | date| YES | | NULL| |</p><p>| deathaddr | varchar(20) | YES | | NULL| |</p><p>+-------------+-------------+------+-----+---------+-------+</p><p>4 rows in set (0.00 sec)</p><p><br/></p><p>6、 往表中加入记录</p><p>我们先用Select命令来查看表中的数据：</p><p>mysql&gt; select * from mytable;</p><p>Empty set (0.00 sec)</p><p>这说明刚才创建的表还没有记录。</p><p><br/></p><p>加入一条新记录：</p><p>mysql&gt; insert into mytable</p><p>-&gt; values (&#39;abccs&#39;,&#39;f&#39;,&#39;1977-07-07&#39;,&#39;china&#39;);</p><p>Query OK, 1 row affected (0.05 sec)</p><p>再用上面的Select命令看看发生了什么变化。</p><p><br/></p><p>我们可以按此方法一条一条地将所有员工的记录加入到表中。</p><p><br/></p><p>7、用文本方式将数据装入一个数据库表</p><p>如果一条一条地输入，很麻烦。我们可以用文本文件的方式将所有记录加入你的数据库表中。</p><p>创建一个文本文件“mysql.txt”，每行包含一个记录，用定位符(tab)把值分开，并且以在</p><p>Create TABLE语句中列出的列次序给出，例如：</p><p><br/></p><p>abccs f 1977-07-07 china 　</p><p>mary f 1978-12-12 usa</p><p>tom m 1970-09-02 usa</p><p><br/></p><p>使用下面命令将文本文件“mytable.txt”装载到mytable表中:</p><p>mysql&gt; LOAD DATA LOCAL INFILE &quot;mytable.txt&quot; INTO TABLE pet;</p><p><br/></p><p>再使用如下命令看看是否已将数据输入到数据库表中：</p><p>mysql&gt; select * from mytable;</p><p><br/></p><p>上篇我们学会了如何创建一个数据库和数据库表，并知道如何向数据库表中添加记录。</p><p>那么我们如何从数据库表中检索数据呢？</p><p><br/></p><p>1、从数据库表中检索信息</p><p>实际上，前面我们已经用到了Select语句，它用来从数据库表中检索信息。</p><p>select语句格式一般为：</p><p><br/></p><p>Select 检索关键词 FROM 被检索的表 Where 检索条件(可选)</p><p><br/></p><p>以前所使用的“ * ”表示选择所有的列。</p><p>下面继续使用我们在上篇文章中创建的表mytable：</p><p><br/></p><p>2、查询所有数据：</p><p>mysql&gt; select * from mytable;</p><p>+----------+------+------------+----------+</p><p>| name | sex | birth | birthaddr |</p><p>+----------+------+------------+--------+</p><p>| abccs|f| 1977-07-07 | china |</p><p>| mary |f| 1978-12-12 | usa |</p><p>| tom |m| 1970-09-02 | usa |</p><p>+----------+------+------------+----------+</p><p>3 row in set (0.00 sec)</p><p><br/></p><p>3、修正错误记录：</p><p>假如tom的出生日期有错误，应该是1973－09－02，则可以用update语句来修正：</p><p>mysql&gt; update mytable set birth = &quot;1973-09-02&quot; where name = &quot;tom&quot;;</p><p>再用2中的语句看看是否已更正过来。</p><p><br/></p><p>4、选择特定行</p><p>上面修改了tom的出生日期，我们可以选择tom这一行来看看是否已经有了变化：</p><p>mysql&gt; select * from mytable where name = &quot;tom&quot;;</p><p>+--------+------+------------+------------+</p><p>| name |sex | birth | birthaddr |</p><p>+--------+------+------------+------------+</p><p>| tom|m| 1973-09-02 | usa|</p><p>+--------+------+------------+------------+</p><p>1 row in set (0.06 sec)</p><p><br/></p><p>上面Where的参数指定了检索条件。我们还可以用组合条件来进行查询：</p><p>mysql&gt; Select * FROM mytable Where sex = &quot;f&quot; AND birthaddr = &quot;china&quot;;</p><p>+--------+------+------------+------------+</p><p>| name |sex | birth | birthaddr |</p><p>+--------+------+------------+------------+</p><p>| abccs |f| 1977-07-07 | china |</p><p>+--------+------+------------+------------+</p><p>1 row in set (0.06 sec)</p><p><br/></p><p>5、 选择特定列</p><p>假如你想查看表中的所有人的姓名，则可以这样操作：</p><p>mysql&gt; Select name FROM mytable;</p><p>+----------+</p><p>| name |</p><p>+----------+</p><p>| abccs |</p><p>| mary |</p><p>| tom |</p><p>+----------+</p><p>3 row in set (0.00 sec)</p><p>如果想列出姓名和性别两列，则可以用逗号将关键词name和birth分开：</p><p>myaql&gt; select name,birth from mytable;</p><p><br/></p><p>6、对行进行排序</p><p>我们可以对表中的记录按生日大小进行排序：</p><p>mysql&gt; Select name, birth FROM mytable orDER BY birth;</p><p>+----------+------------+</p><p>| name | birth |</p><p>+----------+------------+</p><p>| tom | 1973-09-02 |</p><p>| abccs| 1977-07-07 |</p><p>| mary | 1978-12-12 |</p><p>+----------+------------+</p><p>3 row in set (0.00 sec)</p><p><br/></p><p>我们可以用DESC来进行逆序排序：</p><p>mysql&gt; Select name, birth FROM mytable orDER BY birth DESC;</p><p>+----------+------------+</p><p>| name | birth |</p><p>+----------+------------+</p><p>| mary | 1978-12-12 |</p><p>| abccs| 1977-07-07 |</p><p>| tom | 1973-09-02 |</p><p>+----------+------------+</p><p>3 row in set (0.00 sec)</p><p><br/></p><p>7、 行计数</p><p>数据库经常要统计一些数据，如表中员工的数目，我们就要用到行计数函数COUNT()。</p><p>COUNT()函数用于对非NULL结果的记录进行计数：</p><p>mysql&gt; Select COUNT(*) FROM mytable;</p><p>+----------+</p><p>| COUNT(*) |</p><p>+----------+</p><p>|3 |</p><p>+----------+</p><p>1 row in set (0.06 sec)</p><p><br/></p><p>员工中男女数量：</p><p>mysql&gt; Select sex, COUNT(*) FROM mytable GROUP BY sex;</p><p>+------+----------+</p><p>| sex | COUNT(*) |</p><p>+------+----------+</p><p>| f|2 |</p><p>| m|1 |</p><p>+------+----------+</p><p>2 row in set (0.00 sec)</p><p><br/></p><p>注意我们使用了GROUP BY对SEX进行了分组。</p><p><br/></p><p>多表操作</p><p><br/></p><p>前面我们熟悉了数据库和数据库表的基本操作，现在我们再来看看如何操作多个表。</p><p><br/></p><p>在一个数据库中，可能存在多个表，这些表都是相互关联的。我们继续使用前面的例子。前面建立的表中包含了员工的一些基本信息，如姓名、性别、出生日期、出生地。我们再创建一个表，该表用于</p><p><br/></p><p>描述员工所发表的文章，内容包括作者姓名、文章标题、发表日期。</p><p><br/></p><p>1、查看第一个表mytable的内容：</p><p>mysql&gt; select * from mytable;</p><p>+----------+------+------------+-----------+</p><p>| name | sex | birth | birthaddr |</p><p>+----------+------+------------+-----------+</p><p>| abccs|f | 1977-07-07 | china |</p><p>| mary |f | 1978-12-12 | usa |</p><p>| tom |m | 1970-09-02 | usa |</p><p>+----------+------+------------+-----------+</p><p><br/></p><p>2、创建第二个表title（包括作者、文章标题、发表日期）:</p><p>mysql&gt; create table title(writer varchar(20) not null,</p><p>-&gt; title varchar(40) not null,</p><p>-&gt; senddate date);</p><p><br/></p><p>向该表中填加记录，最后表的内容如下：</p><p>mysql&gt; select * from title;</p><p>+--------+-------+------------+</p><p>| writer | title | senddate |</p><p>+--------+-------+------------+</p><p>| abccs | a1| 2000-01-23 |</p><p>| mary | b1| 1998-03-21 |</p><p>| abccs | a2| 2000-12-04 |</p><p>| tom| c1| 1992-05-16 |</p><p>| tom| c2| 1999-12-12 |</p><p>+--------+-------+------------+</p><p>5 rows in set (0.00sec)</p><p><br/></p><p>3、多表查询</p><p>现在我们有了两个表: mytable 和 title。利用这两个表我们可以进行组合查询：</p><p>例如我们要查询作者abccs的姓名、性别、文章：</p><p>mysql&gt; Select name,sex,title FROM mytable,title</p><p>-&gt; Where name=writer AND name=&#39;abccs&#39;;</p><p>+-------+------+-------+</p><p>| name | sex | title |</p><p>+-------+------+-------+</p><p>| abccs | f| a1|</p><p>| abccs | f| a2|</p><p>+-------+------+-------+</p><p><br/></p><p>上面例子中，由于作者姓名、性别、文章记录在两个不同表内，因此必须使用组合来进行查询。必须要指定一个表中的记录如何与其它表中的记录进行匹配。</p><p>注意：如果第二个表title中的writer列也取名为name（与mytable表中的name列相同）而不是writer时，就必须用mytable.name和title.name表示，以示区别。</p><p><br/></p><p>再举一个例子，用于查询文章a2的作者、出生地和出生日期：</p><p>mysql&gt; select title,writer,birthaddr,birth from mytable,title</p><p>-&gt; where mytable.name=title.writer and title=&#39;a2&#39;;</p><p>+-------+--------+-----------+------------+</p><p>| title | writer | birthaddr | birth |</p><p>+-------+--------+-----------+------------+</p><p>| a2| abccs | china | 1977-07-07 |</p><p>+-------+--------+-----------+------------+</p><p><br/></p><p>修改和备份、批处理</p><p><br/></p><p>有时我们要对数据库表和数据库进行修改和删除，可以用如下方法实现：</p><p><br/></p><p>1、增加一列：</p><p>如在前面例子中的mytable表中增加一列表示是否单身single:</p><p>mysql&gt; alter table mytable add column single char(1);</p><p><br/></p><p>2、修改记录</p><p>将abccs的single记录修改为“y”：</p><p>mysql&gt; update mytable set single=&#39;y&#39; where name=&#39;abccs&#39;;</p><p><br/></p><p>现在来看看发生了什么：</p><p>mysql&gt; select * from mytable;</p><p>+----------+------+------------+-----------+--------+</p><p>| name | sex | birth | birthaddr | single |</p><p>+----------+------+------------+-----------+--------+</p><p>| abccs|f | 1977-07-07 | china | y |</p><p>| mary |f | 1978-12-12 | usa | NULL |</p><p>| tom |m | 1970-09-02 | usa | NULL |</p><p>+----------+------+------------+-----------+--------+</p><p><br/></p><p>3、增加记录</p><p>前面已经讲过如何增加一条记录，为便于查看，重复与此：</p><p>mysql&gt; insert into mytable</p><p>-&gt; values (&#39;abc&#39;,&#39;f&#39;,&#39;1966-08-17&#39;,&#39;china&#39;,&#39;n&#39;);</p><p>Query OK, 1 row affected (0.05 sec)</p><p>查看一下：</p><p>mysql&gt; select * from mytable;</p><p>+----------+------+------------+-----------+--------+</p><p>| name | sex | birth | birthaddr | single |</p><p>+----------+------+------------+-----------+--------+</p><p>| abccs|f | 1977-07-07 | china | y |</p><p>| mary |f | 1978-12-12 | usa | NULL |</p><p>| tom |m | 1970-09-02 | usa | NULL |</p><p>| abc |f | 1966-08-17 | china | n |</p><p>+----------+------+------------+-----------+--------+</p><p><br/></p><p><br/></p><p>3、删除记录</p><p>用如下命令删除表中的一条记录：</p><p>mysql&gt; delete from mytable where name=&#39;abc&#39;;</p><p>Delete从表中删除满足由where给出的条件的一条记录。</p><p><br/></p><p>再显示一下结果：</p><p>mysql&gt; select * from mytable;</p><p>+----------+------+------------+-----------+--------+</p><p>| name | sex | birth | birthaddr | single |</p><p>+----------+------+------------+-----------+--------+</p><p>| abccs|f | 1977-07-07 | china | y |</p><p>| mary |f | 1978-12-12 | usa | NULL |</p><p>| tom |m | 1970-09-02 | usa | NULL |</p><p>+----------+------+------------+-----------+--------+</p><p><br/></p><p>4、删除表：</p><p>mysql&gt; drop table ****(表1的名字)，***表2的名字;</p><p>可以删除一个或多个表，小心使用。</p><p><br/></p><p>5、数据库的删除：</p><p>mysql&gt; drop database 数据库名;</p><p>小心使用。</p><p><br/></p><p>6、数据库的备份：</p><p>退回到DOS：</p><p>mysql&gt; quit</p><p>d:mysqlbin</p><p>使用如下命令对数据库abccs进行备份：</p><p>mysqldump --opt abccs&gt;abccs.dbb</p><p>abccs.dbb就是你的数据库abccs的备份文件。</p><p><br/></p><p>7、用批处理方式使用MySQL:</p><p><br/></p><p>首先建立一个批处理文件mytest.sql,内容如下：</p><p>use abccs;</p><p>select * from mytable;</p><p>select name,sex from mytable where name=&#39;abccs&#39;;</p><p><br/></p><p>在DOS下运行如下命令：</p><p>d:mysqlbin mysql &lt; mytest.sql</p><p>在屏幕上会显示执行结果。</p><p><br/></p><p>如果想看结果，而输出结果很多，则可以用这样的命令：</p><p>mysql &lt; mytest.sql | more</p><p><br/></p><p>我们还可以将结果输出到一个文件中：</p><p>mysql &lt; mytest.sql &gt; mytest.out</p><p><br/></p>', 1398614633, 104, 16, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(60, 'mysql数据库优化', '<p>当我们去设计数据库表结构，对操作数据库时（尤其是查表时的SQL语句），我们都需要注意数据操作的性能。这里，我们不会讲过多的SQL语句的优化，而只是针对MySQL这一Web应用最多的数据库。希望下面的这些优化技巧对你有用。&nbsp;</p><p>1. 为查询缓存优化你的查询&nbsp;</p><p><br/></p><p>大多数的MySQL服务器都开启了查询缓存。这是提高性最有效的方法之一，而且这是被MySQL的数据库引擎处理的。当有很多相同的查询被执行了多次的时候，这些查询结果会被放到一个缓存中，这样，后续的相同的查询就不用操作表而直接访问缓存结果了。&nbsp;</p><p><br/></p><p>这里最主要的问题是，对于程序员来说，这个事情是很容易被忽略的。因为，我们某些查询语句会让MySQL不使用缓存。请看下面的示例：&nbsp;</p><p>复制代码 代码如下:</p><p>// 查询缓存不开启&nbsp;</p><p>$r = mysql_query(&quot;SELECT username FROM user WHERE signup_date &gt;= CURDATE()&quot;);&nbsp;</p><p><br/></p><p>// 开启查询缓存&nbsp;</p><p>$today = date(&quot;Y-m-d&quot;);&nbsp;</p><p>$r = mysql_query(&quot;SELECT username FROM user WHERE signup_date &gt;= &#39;$today&#39;&quot;);&nbsp;</p><p><br/></p><p>上面两条SQL语句的差别就是 CURDATE() ，MySQL的查询缓存对这个函数不起作用。所以，像 NOW() 和 RAND() 或是其它的诸如此类的SQL函数都不会开启查询缓存，因为这些函数的返回是会不定的易变的。所以，你所需要的就是用一个变量来代替MySQL的函数，从而开启缓存。&nbsp;</p><p><br/></p><p>2. EXPLAIN 你的 SELECT 查询&nbsp;</p><p><br/></p><p>使用 EXPLAIN 关键字可以让你知道MySQL是如何处理你的SQL语句的。这可以帮你分析你的查询语句或是表结构的性能瓶颈。&nbsp;</p><p><br/></p><p>EXPLAIN 的查询结果还会告诉你你的索引主键被如何利用的，你的数据表是如何被搜索和排序的……等等。&nbsp;</p><p><br/></p><p>挑一个你的SELECT语句（推荐挑选那个最复杂的，有多表联接的），把关键字EXPLAIN加到前面。你可以使用phpmyadmin来做这个事。然后，你会看到一张表格。下面的这个示例中，我们忘记加上了group_id索引，并且有表联接：</p><p><br/></p><p>当我们为 group_id 字段加上索引后：</p><p><br/></p><p>我们可以看到，前一个结果显示搜索了 7883 行，而后一个只是搜索了两个表的 9 和 16 行。查看rows列可以让我们找到潜在的性能问题。&nbsp;</p><p><br/></p><p>3. 当只要一行数据时使用 LIMIT 1&nbsp;</p><p><br/></p><p>当你查询表的有些时候，你已经知道结果只会有一条结果，但因为你可能需要去fetch游标，或是你也许会去检查返回的记录数。&nbsp;</p><p><br/></p><p>在这种情况下，加上 LIMIT 1 可以增加性能。这样一样，MySQL数据库引擎会在找到一条数据后停止搜索，而不是继续往后查少下一条符合记录的数据。&nbsp;</p><p><br/></p><p>下面的示例，只是为了找一下是否有“中国”的用户，很明显，后面的会比前面的更有效率。（请注意，第一条中是Select *，第二条是Select 1）&nbsp;</p><p>复制代码 代码如下:</p><p>// 没有效率的：&nbsp;</p><p>$r = mysql_query(&quot;SELECT * FROM user WHERE country = &#39;China&#39;&quot;);&nbsp;</p><p>if (mysql_num_rows($r) &gt; 0) {&nbsp;</p><p>// ...&nbsp;</p><p>}&nbsp;</p><p><br/></p><p>// 有效率的：&nbsp;</p><p>$r = mysql_query(&quot;SELECT 1 FROM user WHERE country = &#39;China&#39; LIMIT 1&quot;);&nbsp;</p><p>if (mysql_num_rows($r) &gt; 0) {&nbsp;</p><p>// ...&nbsp;</p><p>}</p><p><br/></p><p><br/></p><p>4. 为搜索字段建索引&nbsp;</p><p><br/></p><p>索引并不一定就是给主键或是唯一的字段。如果在你的表中，有某个字段你总要会经常用来做搜索，那么，请为其建立索引吧。</p><p><br/></p><p>从上图你可以看到那个搜索字串 “last_name LIKE ‘a%&#39;”，一个是建了索引，一个是没有索引，性能差了4倍左右。&nbsp;</p><p><br/></p><p>另外，你应该也需要知道什么样的搜索是不能使用正常的索引的。例如，当你需要在一篇大的文章中搜索一个词时，如： “WHERE post_content LIKE ‘%apple%&#39;”，索引可能是没有意义的。你可能需要使用MySQL全文索引 或是自己做一个索引（比如说：搜索关键词或是Tag什么的）&nbsp;</p><p><br/></p><p>5. 在Join表的时候使用相当类型的例，并将其索引&nbsp;</p><p><br/></p><p>如果你的应用程序有很多 JOIN 查询，你应该确认两个表中Join的字段是被建过索引的。这样，MySQL内部会启动为你优化Join的SQL语句的机制。&nbsp;</p><p><br/></p><p>而且，这些被用来Join的字段，应该是相同的类型的。例如：如果你要把 DECIMAL 字段和一个 INT 字段Join在一起，MySQL就无法使用它们的索引。对于那些STRING类型，还需要有相同的字符集才行。（两个表的字符集有可能不一样）&nbsp;</p><p>复制代码 代码如下:</p><p>// 在state中查找company&nbsp;</p><p>$r = mysql_query(&quot;SELECT company_name FROM users&nbsp;</p><p>LEFT JOIN companies ON (users.state = companies.state)&nbsp;</p><p>WHERE users.id = $user_id&quot;);&nbsp;</p><p><br/></p><p>// 两个 state 字段应该是被建过索引的，而且应该是相当的类型，相同的字符集。</p><p><br/></p><p><br/></p><p>6. 千万不要 ORDER BY RAND()&nbsp;</p><p><br/></p><p>想打乱返回的数据行？随机挑一个数据？真不知道谁发明了这种用法，但很多新手很喜欢这样用。但你确不了解这样做有多么可怕的性能问题。&nbsp;</p><p><br/></p><p>如果你真的想把返回的数据行打乱了，你有N种方法可以达到这个目的。这样使用只让你的数据库的性能呈指数级的下降。这里的问题是：MySQL会不得不去执行RAND()函数（很耗CPU时间），而且这是为了每一行记录去记行，然后再对其排序。就算是你用了Limit 1也无济于事（因为要排序）&nbsp;</p><p><br/></p><p>下面的示例是随机挑一条记录&nbsp;</p><p>复制代码 代码如下:</p><p>// 千万不要这样做：&nbsp;</p><p>$r = mysql_query(&quot;SELECT username FROM user ORDER BY RAND() LIMIT 1&quot;);&nbsp;</p><p><br/></p><p>// 这要会更好：&nbsp;</p><p>$r = mysql_query(&quot;SELECT count(*) FROM user&quot;);&nbsp;</p><p>$d = mysql_fetch_row($r);&nbsp;</p><p>$rand = mt_rand(0,$d[0] - 1);&nbsp;</p><p><br/></p><p>$r = mysql_query(&quot;SELECT username FROM user LIMIT $rand, 1&quot;);</p><p><br/></p><p><br/></p><p>7. 避免 SELECT *&nbsp;</p><p><br/></p><p>从数据库里读出越多的数据，那么查询就会变得越慢。并且，如果你的数据库服务器和WEB服务器是两台独立的服务器的话，这还会增加网络传输的负载。&nbsp;</p><p><br/></p><p>所以，你应该养成一个需要什么就取什么的好的习惯。&nbsp;</p><p>复制代码 代码如下:</p><p>// 不推荐&nbsp;</p><p>$r = mysql_query(&quot;SELECT * FROM user WHERE user_id = 1&quot;);&nbsp;</p><p>$d = mysql_fetch_assoc($r);&nbsp;</p><p>echo &quot;Welcome {$d[&#39;username&#39;]}&quot;;&nbsp;</p><p><br/></p><p>// 推荐&nbsp;</p><p>$r = mysql_query(&quot;SELECT username FROM user WHERE user_id = 1&quot;);&nbsp;</p><p>$d = mysql_fetch_assoc($r);&nbsp;</p><p>echo &quot;Welcome {$d[&#39;username&#39;]}&quot;;</p><p><br/></p><p>8. 永远为每张表设置一个ID&nbsp;</p><p><br/></p><p>我们应该为数据库里的每张表都设置一个ID做为其主键，而且最好的是一个INT型的（推荐使用UNSIGNED），并设置上自动增加的 AUTO_INCREMENT标志。&nbsp;</p><p><br/></p><p>就算是你 users 表有一个主键叫 “email”的字段，你也别让它成为主键。使用 VARCHAR 类型来当主键会使用得性能下降。另外，在你的程序中，你应该使用表的ID来构造你的数据结构。&nbsp;</p><p><br/></p><p>而且，在MySQL数据引擎下，还有一些操作需要使用主键，在这些情况下，主键的性能和设置变得非常重要，比如，集群，分区……&nbsp;</p><p><br/></p><p>在这里，只有一个情况是例外，那就是“关联表”的“外键”，也就是说，这个表的主键，通过若干个别的表的主键构成。我们把这个情况叫做“外键”。比如：有一个“学生表”有学生的ID，有一个“课程表”有课程ID，那么，“成绩表”就是“关联表”了，其关联了学生表和课程表，在成绩表中，学生ID和课程ID叫“外键”其共同组成主键。&nbsp;</p><p>9. 使用 ENUM 而不是 VARCHAR&nbsp;</p><p><br/></p><p>ENUM 类型是非常快和紧凑的。在实际上，其保存的是 TINYINT，但其外表上显示为字符串。这样一来，用这个字段来做一些选项列表变得相当的完美。&nbsp;</p><p><br/></p><p>如果你有一个字段，比如“性别”，“国家”，“民族”，“状态”或“部门”，你知道这些字段的取值是有限而且固定的，那么，你应该使用 ENUM 而不是 VARCHAR。&nbsp;</p><p><br/></p><p>MySQL也有一个“建议”（见第十条）告诉你怎么去重新组织你的表结构。当你有一个 VARCHAR 字段时，这个建议会告诉你把其改成 ENUM 类型。使用 PROCEDURE ANALYSE() 你可以得到相关的建议。&nbsp;</p><p>10. 从 PROCEDURE ANALYSE() 取得建议&nbsp;</p><p><br/></p><p>PROCEDURE ANALYSE() 会让 MySQL 帮你去分析你的字段和其实际的数据，并会给你一些有用的建议。只有表中有实际的数据，这些建议才会变得有用，因为要做一些大的决定是需要有数据作为基础的。&nbsp;</p><p><br/></p><p>例如，如果你创建了一个 INT 字段作为你的主键，然而并没有太多的数据，那么，PROCEDURE ANALYSE()会建议你把这个字段的类型改成 MEDIUMINT 。或是你使用了一个 VARCHAR 字段，因为数据不多，你可能会得到一个让你把它改成 ENUM 的建议。这些建议，都是可能因为数据不够多，所以决策做得就不够准。&nbsp;</p><p><br/></p><p>在phpmyadmin里，你可以在查看表时，点击 “Propose table structure” 来查看这些建议</p><p><br/></p><p>一定要注意，这些只是建议，只有当你的表里的数据越来越多时，这些建议才会变得准确。一定要记住，你才是最终做决定的人。&nbsp;</p><p>11. 尽可能的使用 NOT NULL&nbsp;</p><p><br/></p><p>除非你有一个很特别的原因去使用 NULL 值，你应该总是让你的字段保持 NOT NULL。这看起来好像有点争议，请往下看。&nbsp;</p><p><br/></p><p>首先，问问你自己“Empty”和“NULL”有多大的区别（如果是INT，那就是0和NULL）？如果你觉得它们之间没有什么区别，那么你就不要使用NULL。（你知道吗？在 Oracle 里，NULL 和 Empty 的字符串是一样的！)&nbsp;</p><p><br/></p><p>不要以为 NULL 不需要空间，其需要额外的空间，并且，在你进行比较的时候，你的程序会更复杂。 当然，这里并不是说你就不能使用NULL了，现实情况是很复杂的，依然会有些情况下，你需要使用NULL值。&nbsp;</p><p><br/></p><p>下面摘自MySQL自己的文档：&nbsp;</p><p><br/></p><p>“NULL columns require additional space in the row to record whether their values are NULL. For MyISAM tables, each NULL column takes one bit extra, rounded up to the nearest byte.”&nbsp;</p><p><br/></p><p>12. Prepared Statements&nbsp;</p><p><br/></p><p>Prepared Statements很像存储过程，是一种运行在后台的SQL语句集合，我们可以从使用 prepared statements 获得很多好处，无论是性能问题还是安全问题。&nbsp;</p><p><br/></p><p>Prepared Statements 可以检查一些你绑定好的变量，这样可以保护你的程序不会受到“SQL注入式”攻击。当然，你也可以手动地检查你的这些变量，然而，手动的检查容易出问题，而且很经常会被程序员忘了。当我们使用一些framework或是ORM的时候，这样的问题会好一些。&nbsp;</p><p><br/></p><p>在性能方面，当一个相同的查询被使用多次的时候，这会为你带来可观的性能优势。你可以给这些Prepared Statements定义一些参数，而MySQL只会解析一次。&nbsp;</p><p><br/></p><p>虽然最新版本的MySQL在传输Prepared Statements是使用二进制形势，所以这会使得网络传输非常有效率。&nbsp;</p><p><br/></p><p>当然，也有一些情况下，我们需要避免使用Prepared Statements，因为其不支持查询缓存。但据说版本5.1后支持了。&nbsp;</p><p><br/></p><p>在PHP中要使用prepared statements，你可以查看其使用手册：mysqli 扩展 或是使用数据库抽象层，如： PDO.&nbsp;</p><p>复制代码 代码如下:</p><p>// 创建 prepared statement&nbsp;</p><p>if ($stmt = $mysqli-&gt;prepare(&quot;SELECT username FROM user WHERE state=?&quot;)) {&nbsp;</p><p><br/></p><p>// 绑定参数&nbsp;</p><p>$stmt-&gt;bind_param(&quot;s&quot;, $state);&nbsp;</p><p><br/></p><p>// 执行&nbsp;</p><p>$stmt-&gt;execute();&nbsp;</p><p><br/></p><p>// 绑定结果&nbsp;</p><p>$stmt-&gt;bind_result($username);&nbsp;</p><p><br/></p><p>// 移动游标&nbsp;</p><p>$stmt-&gt;fetch();&nbsp;</p><p><br/></p><p>printf(&quot;%s is from %s\\n&quot;, $username, $state);&nbsp;</p><p><br/></p><p>$stmt-&gt;close();&nbsp;</p><p>}</p><p><br/></p><p>13. 无缓冲的查询&nbsp;</p><p><br/></p><p>正常的情况下，当你在当你在你的脚本中执行一个SQL语句的时候，你的程序会停在那里直到没这个SQL语句返回，然后你的程序再往下继续执行。你可以使用无缓冲查询来改变这个行为。&nbsp;</p><p><br/></p><p>关于这个事情，在PHP的文档中有一个非常不错的说明： mysql_unbuffered_query() 函数：&nbsp;</p><p><br/></p><p>“mysql_unbuffered_query() sends the SQL query query to MySQL without automatically fetching and buffering the result rows as mysql_query() does. This saves a considerable amount of memory with SQL queries that produce large result sets, and you can start working on the result set immediately after the first row has been retrieved as you don&#39;t have to wait until the complete SQL query has been performed.”&nbsp;</p><p><br/></p><p>上面那句话翻译过来是说，mysql_unbuffered_query() 发送一个SQL语句到MySQL而并不像mysql_query()一样去自动fethch和缓存结果。这会相当节约很多可观的内存，尤其是那些会产生大量结果的查询语句，并且，你不需要等到所有的结果都返回，只需要第一行数据返回的时候，你就可以开始马上开始工作于查询结果了。&nbsp;</p><p><br/></p><p>然而，这会有一些限制。因为你要么把所有行都读走，或是你要在进行下一次的查询前调用 mysql_free_result() 清除结果。而且， mysql_num_rows() 或 mysql_data_seek() 将无法使用。所以，是否使用无缓冲的查询你需要仔细考虑。&nbsp;</p><p>14. 把IP地址存成 UNSIGNED INT&nbsp;</p><p><br/></p><p>很多程序员都会创建一个 VARCHAR(15) 字段来存放字符串形式的IP而不是整形的IP。如果你用整形来存放，只需要4个字节，并且你可以有定长的字段。而且，这会为你带来查询上的优势，尤其是当你需要使用这样的WHERE条件：IP between ip1 and ip2。&nbsp;</p><p><br/></p><p>我们必需要使用UNSIGNED INT，因为 IP地址会使用整个32位的无符号整形。&nbsp;</p><p><br/></p><p>而你的查询，你可以使用 INET_ATON() 来把一个字符串IP转成一个整形，并使用 INET_NTOA() 把一个整形转成一个字符串IP。在PHP中，也有这样的函数 ip2long() 和 long2ip()。&nbsp;</p><p>1 $r = &quot;UPDATE users SET ip = INET_ATON(&#39;{$_SERVER[&#39;REMOTE_ADDR&#39;]}&#39;) WHERE user_id = $user_id&quot;;&nbsp;</p><p>15. 固定长度的表会更快&nbsp;</p><p><br/></p><p>如果表中的所有字段都是“固定长度”的，整个表会被认为是 “static” 或 “fixed-length”。 例如，表中没有如下类型的字段： VARCHAR，TEXT，BLOB。只要你包括了其中一个这些字段，那么这个表就不是“固定长度静态表”了，这样，MySQL 引擎会用另一种方法来处理。&nbsp;</p><p><br/></p><p>固定长度的表会提高性能，因为MySQL搜寻得会更快一些，因为这些固定的长度是很容易计算下一个数据的偏移量的，所以读取的自然也会很快。而如果字段不是定长的，那么，每一次要找下一条的话，需要程序找到主键。&nbsp;</p><p><br/></p><p>并且，固定长度的表也更容易被缓存和重建。不过，唯一的副作用是，固定长度的字段会浪费一些空间，因为定长的字段无论你用不用，他都是要分配那么多的空间。&nbsp;</p><p><br/></p><p>使用“垂直分割”技术（见下一条），你可以分割你的表成为两个一个是定长的，一个则是不定长的。&nbsp;</p><p>16. 垂直分割&nbsp;</p><p><br/></p><p>“垂直分割”是一种把数据库中的表按列变成几张表的方法，这样可以降低表的复杂度和字段的数目，从而达到优化的目的。（以前，在银行做过项目，见过一张表有100多个字段，很恐怖）&nbsp;</p><p><br/></p><p>示例一：在Users表中有一个字段是家庭地址，这个字段是可选字段，相比起，而且你在数据库操作的时候除了个人信息外，你并不需要经常读取或是改写这个字段。那么，为什么不把他放到另外一张表中呢？ 这样会让你的表有更好的性能，大家想想是不是，大量的时候，我对于用户表来说，只有用户ID，用户名，口令，用户角色等会被经常使用。小一点的表总是会有好的性能。&nbsp;</p><p><br/></p><p>示例二： 你有一个叫 “last_login” 的字段，它会在每次用户登录时被更新。但是，每次更新时会导致该表的查询缓存被清空。所以，你可以把这个字段放到另一个表中，这样就不会影响你对用户 ID，用户名，用户角色的不停地读取了，因为查询缓存会帮你增加很多性能。&nbsp;</p><p><br/></p><p>另外，你需要注意的是，这些被分出去的字段所形成的表，你不会经常性地去Join他们，不然的话，这样的性能会比不分割时还要差，而且，会是极数级的下降。&nbsp;</p><p>17. 拆分大的 DELETE 或 INSERT 语句&nbsp;</p><p><br/></p><p>如果你需要在一个在线的网站上去执行一个大的 DELETE 或 INSERT 查询，你需要非常小心，要避免你的操作让你的整个网站停止相应。因为这两个操作是会锁表的，表一锁住了，别的操作都进不来了。&nbsp;</p><p><br/></p><p>Apache 会有很多的子进程或线程。所以，其工作起来相当有效率，而我们的服务器也不希望有太多的子进程，线程和数据库链接，这是极大的占服务器资源的事情，尤其是内存。&nbsp;</p><p><br/></p><p>如果你把你的表锁上一段时间，比如30秒钟，那么对于一个有很高访问量的站点来说，这30秒所积累的访问进程/线程，数据库链接，打开的文件数，可能不仅仅会让你泊WEB服务Crash，还可能会让你的整台服务器马上掛了。&nbsp;</p><p><br/></p><p>所以，如果你有一个大的处理，你定你一定把其拆分，使用 LIMIT 条件是一个好的方法。下面是一个示例：</p><p>复制代码 代码如下:</p><p>while (1) {&nbsp;</p><p>//每次只做1000条&nbsp;</p><p>mysql_query(&quot;DELETE FROM logs WHERE log_date &lt;= &#39;2009-11-01&#39; LIMIT 1000&quot;);&nbsp;</p><p>if (mysql_affected_rows() == 0) {&nbsp;</p><p>// 没得可删了，退出！&nbsp;</p><p>break;&nbsp;</p><p>}&nbsp;</p><p>// 每次都要休息一会儿&nbsp;</p><p>usleep(50000);&nbsp;</p><p>}</p><p><br/></p><p>18. 越小的列会越快&nbsp;</p><p><br/></p><p>对于大多数的数据库引擎来说，硬盘操作可能是最重大的瓶颈。所以，把你的数据变得紧凑会对这种情况非常有帮助，因为这减少了对硬盘的访问。&nbsp;</p><p><br/></p><p>参看 MySQL 的文档 Storage Requirements 查看所有的数据类型。&nbsp;</p><p><br/></p><p>如果一个表只会有几列罢了（比如说字典表，配置表），那么，我们就没有理由使用 INT 来做主键，使用 MEDIUMINT, SMALLINT 或是更小的 TINYINT 会更经济一些。如果你不需要记录时间，使用 DATE 要比 DATETIME 好得多。&nbsp;</p><p><br/></p><p>当然，你也需要留够足够的扩展空间，不然，你日后来干这个事，你会死的很难看，参看Slashdot的例子（2009年11月06 日），一个简单的ALTER TABLE语句花了3个多小时，因为里面有一千六百万条数据。&nbsp;</p><p>19. 选择正确的存储引擎&nbsp;</p><p><br/></p><p>在 MySQL 中有两个存储引擎 MyISAM 和 InnoDB，每个引擎都有利有弊。酷壳以前文章《MySQL: InnoDB 还是 MyISAM?》讨论和这个事情。&nbsp;</p><p><br/></p><p>MyISAM 适合于一些需要大量查询的应用，但其对于有大量写操作并不是很好。甚至你只是需要update一个字段，整个表都会被锁起来，而别的进程，就算是读进程都无法操作直到读操作完成。另外，MyISAM 对于 SELECT COUNT(*) 这类的计算是超快无比的。&nbsp;</p><p><br/></p><p>InnoDB 的趋势会是一个非常复杂的存储引擎，对于一些小的应用，它会比 MyISAM 还慢。他是它支持“行锁” ，于是在写操作比较多的时候，会更优秀。并且，他还支持更多的高级应用，比如：事务。&nbsp;</p><p><br/></p><p>下面是MySQL的手册&nbsp;</p><p><br/></p><p>* target=”_blank”MyISAM Storage Engine&nbsp;</p><p>* InnoDB Storage Engine&nbsp;</p><p><br/></p><p>20. 使用一个对象关系映射器（Object Relational Mapper）&nbsp;</p><p><br/></p><p>使用 ORM (Object Relational Mapper)，你能够获得可靠的性能增涨。一个ORM可以做的所有事情，也能被手动的编写出来。但是，这需要一个高级专家。&nbsp;</p><p><br/></p><p>ORM 的最重要的是“Lazy Loading”，也就是说，只有在需要的去取值的时候才会去真正的去做。但你也需要小心这种机制的副作用，因为这很有可能会因为要去创建很多很多小的查询反而会降低性能。&nbsp;</p><p><br/></p><p>ORM 还可以把你的SQL语句打包成一个事务，这会比单独执行他们快得多得多。&nbsp;</p><p><br/></p><p>目前，个人最喜欢的PHP的ORM是：Doctrine。&nbsp;</p><p>21. 小心“永久链接”&nbsp;</p><p><br/></p><p>“永久链接”的目的是用来减少重新创建MySQL链接的次数。当一个链接被创建了，它会永远处在连接的状态，就算是数据库操作已经结束了。而且，自从我们的Apache开始重用它的子进程后——也就是说，下一次的HTTP请求会重用Apache的子进程，并重用相同的 MySQL 链接。&nbsp;</p><p><br/></p><p>* PHP手册：mysql_pconnect()&nbsp;</p><p><br/></p><p>在理论上来说，这听起来非常的不错。但是从个人经验（也是大多数人的）上来说，这个功能制造出来的麻烦事更多。因为，你只有有限的链接数，内存问题，文件句柄数，等等。&nbsp;</p><p><br/></p><p>而且，Apache 运行在极端并行的环境中，会创建很多很多的了进程。这就是为什么这种“永久链接”的机制工作地不好的原因。在你决定要使用“永久链接”之前，你需要好好地考虑一下你的整个系统的架构。</p><p><br/></p>', 1398615076, 100, 16, 0),
(61, 'PHP操作MYSQL', '<p>PHP操作MYSQL函数手册大全:</p><p>对于mysql数据库，用ASP和PHP语言都可以对其进行数据操作，所要实现的目标都是相同的，结果也会一致，但是方法和过程却有很打的差别；一般来说，ASP的编程、使用以及操作要远比PHP简单的多，只有是你想学习网络编程，掌握ASP是很容易的，也是大多初学者的首选；但是要掌握PHP就不是那么简单了。php项目开发整理尽管ASP也可以操作mysql数据库，但是与PHP相比，在速度上可能要比PHP慢一下；在语法上PHP似乎也更复杂。下面我也实现同一数据库查询为例，总结一下这两种语言在操作mysql数据库中的实现过程。</p><p>&nbsp; &nbsp;数据库：gaorui</p><p>&nbsp; &nbsp;数据表:user</p><p>&nbsp; &nbsp;字段:username &amp; password</p><p>&nbsp; &nbsp;目的:从同一数据库中分别查询出最新插入的3条数据记录</p><p>&nbsp;&nbsp;</p><p>&nbsp; &nbsp;用PHP实现过程代码：</p><p>&lt;html&gt;</p><p>&lt;body&gt;</p><p>&lt;?php</p><p>$db=mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;luo&quot;);</p><p>mysql_select_db(&quot;gaorui&quot;,$db);</p><p>mysql_query(&quot;set names &#39;gb2312&#39;&quot;);</p><p>$sql=&quot;select * from user order by username desc&quot;;</p><p>$result=mysql_query($sql,$db);</p><p>for($i=0;$i&lt;3;$i++) {</p><p>printf(&quot;姓名:%s&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;,mysql_result($result,$i,&quot;username&quot;));</p><p>printf(&quot;密码:%s&lt;br /&gt;&quot;,mysql_result($result,$i,&quot;password&quot;));}</p><p>mysql_free_result($result);</p><p>?&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p>结果：</p><p>姓名:西安 &nbsp; &nbsp;密码:123</p><p>姓名:石油 &nbsp; &nbsp;密码:123</p><p>姓名:商务 &nbsp; &nbsp;密码:123</p><p>----------------------------</p><p>&lt;?php</p><p>$ip= $_POST[&#39;select&#39;];</p><p>$flag= substr($ip, -2);</p><p>&nbsp;</p><p>$mysql_server_name=&quot;172.16.16.16&quot;; //数据库服务器名称</p><p>$mysql_username=&quot;bill&quot;; // 连接数据库用户名</p><p>$mysql_password=&quot;bill&quot;; // 连接数据库密码</p><p>$mysql_database=&quot;isd_pttc_info&quot;; // 数据库的名字</p><p>&nbsp;</p><p>// 连接到数据库</p><p>$conn=mysql_connect($mysql_server_name, $mysql_username,</p><p>$mysql_password);</p><p>&nbsp;</p><p>// 从表中提取信息的sql语句</p><p>$strsql=&quot;select * from t_pttc_info where ip=\\&quot;$ip\\&quot;;&quot;;</p><p>// 执行sql查询</p><p>$result=mysql_db_query($mysql_database, $strsql, $conn);</p><p>// 获取查询结果</p><p>$row=mysql_fetch_row($result);</p><p>&nbsp;</p><p>echo &#39;&lt;font face=&quot;verdana&quot;&gt;&#39;;</p><p>echo &#39;&lt;table border=&quot;1&quot; cellpadding=&quot;1&quot; cellspacing=&quot;2&quot;&gt;&#39;;</p><p>// 显示字段名称</p><p>echo &quot;\\n&lt;tr&gt;\\n&quot;;</p><p>for ($i=0; $i&lt;mysql_num_fields($result); $i++)</p><p>{</p><p>echo &#39;&lt;td bgcolor=&quot;#AE57A4&quot;&gt;&lt;b&gt;&#39;.</p><p>mysql_field_name($result, $i);</p><p>echo &quot;&lt;/b&gt;&lt;/td&gt;\\n&quot;;</p><p>}</p><p>echo &quot;&lt;/tr&gt;\\n&quot;;</p><p>// 定位到第一条记录</p><p>mysql_data_seek($result, 0);</p><p>// 循环取出记录</p><p>while ($row=mysql_fetch_row($result))</p><p>{</p><p>echo &quot;&lt;tr&gt;\\n&quot;;</p><p>for ($i=0; $i&lt;mysql_num_fields($result); $i++ )</p><p>{</p><p>echo &#39;&lt;td bgcolor=&quot;#B8B8E8&quot;&gt;&#39;;</p><p>echo &quot;$row[$i]&quot;;</p><p>echo &#39;&lt;/td&gt;&#39;;</p><p>}</p><p>echo &quot;&lt;/tr&gt;\\n&quot;;</p><p>}</p><p>&nbsp;</p><p>echo &quot;&lt;/table&gt;\\n&quot;;</p><p>echo &quot;&lt;/font&gt;&quot;;</p><p>// 释放资源</p><p>mysql_free_result($result);</p><p>// 关闭连接</p><p>mysql_close();</p><p>?&gt;</p><p><br/></p>', 1398615335, 101, 16, 0),
(62, ' Cookies 和 Session的区别', '<p>1.cookie 是一种发送到客户浏览器的文本串句柄，并保存在客户机硬盘上，可以用来在某个WEB站点会话间持久的保持数据。</p><p>&nbsp;</p><p>2.session其实指的就是访问者从到达某个特定主页到离开为止的那段时间。 Session其实是利用Cookie进行信息处理的，当用户首先进行了请求后，服务端就在用户浏览器上创建了一个Cookie，当这个</p><p><br/></p><p>Session结束时，其实就是意味着这个Cookie就过期了。</p><p>注：为这个用户创建的Cookie的名称是aspsessionid。这个Cookie的唯一目的就是为每一个用户提供不同的身份认证。</p><p><br/></p><p><br/></p><p>3.cookie和session的共同之处在于：cookie和session都是用来跟踪浏览器用户身份的会话方式。</p><p><br/></p><p><br/></p><p>4.cookie 和session的区别是：cookie数据保存在客户端，session数据保存在服务器端。</p><p>&nbsp; 简单的说，当你登录一个网站的时候，</p><p>&nbsp;</p><p>· &nbsp; &nbsp; &nbsp; &nbsp; 如果web服务器端使用的是session，那么所有的数据都保存在服务器上，客户端每次请求服务器的时候会发送当前会话的sessionid，服务器根据当前sessionid判断相应的用户数据标志，以</p><p><br/></p><p>确定用户是否登录或具有某种权限。由于数据是存储在服务器上面，所以你不能伪造，但是如果你能够获取某个登录用户的 sessionid，用特殊的浏览器伪造该用户的请求也是能够成功的。sessionid是</p><p><br/></p><p>服务器和客户端链接时候随机分配的，一般来说是不会有重复，但如果有大量的并发请求，也不是没有重复的可能性.</p><p>&nbsp;</p><p>· &nbsp; &nbsp; &nbsp; &nbsp; 如果浏览器使用的是cookie，那么所有的数据都保存在浏览器端，比如你登录以后，服务器设置了cookie用户名，那么当你再次请求服务器的时候，浏览器会将用户名一块发送给服务器，这</p><p><br/></p><p>些变量有一定的特殊标记。服务器会解释为cookie变量，所以只要不关闭浏览器，那么cookie变量一直是有效的，所以能够保证长时间不掉线。如果你能够截获某个用户的 cookie变量，然后伪造一个数</p><p><br/></p><p>据包发送过去，那么服务器还是认为你是合法的。所以，使用 cookie被攻击的可能性比较大。如果设置了的有效时间，那么它会将 cookie保存在客户端的硬盘上，下次再访问该网站的时候，浏览器先</p><p><br/></p><p>检查有没有 cookie，如果有的话，就读取该 cookie，然后发送给服务器。如果你在机器上面保存了某个论坛 cookie，有效期是一年，如果有人入侵你的机器，将你的 &nbsp;cookie拷走，然后放在他的浏览</p><p><br/></p><p>器的目录下面，那么他登录该网站的时候就是用你的的身份登录的。所以 cookie是可以伪造的。当然，伪造的时候需要主意，直接copy &nbsp; &nbsp;cookie文件到 cookie目录，浏览器是不认的，他有一个</p><p><br/></p><p>index.dat文件，存储了 cookie文件的建立时间，以及是否有修改，所以你必须先要有该网站的 cookie文件，并且要从保证时间上骗过浏览器</p><p>&nbsp;</p><p>5.两个都可以用来存私密的东西，同样也都有有效期的说法,区别在于session是放在服务器上的，过期与否取决于服务期的设定，cookie是存在客户端的，过去与否可以在cookie生成的时候设置进去。</p><p>(1)cookie数据存放在客户的浏览器上，session数据放在服务器上</p><p>(2)cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗,如果主要考虑到安全应当使用session</p><p>(3)session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能，如果主要考虑到减轻服务器性能方面，应当使用COOKIE</p><p>(4)单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能3K。</p><p>(5)所以：将登陆信息等重要信息存放为SESSION;其他信息如果需要保留，可以放在COOKIE中</p><p><br/></p>', 1398615436, 105, 9, 0),
(63, 'MyISAM InnoDB 区别', '<p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">MyISAM 和 InnoDB 讲解</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　InnoDB和MyISAM是许多人在使用MySQL时最常用的两个表类型，这两个表类型各有优劣，视具体应用而定。基本的差别为：MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持。MyISAM类型的表强调的是性能，其执行数度比InnoDB类型更快，但是不提供事务支持，而InnoDB提供事务支持已经外部键等高级数据库功能。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　以下是一些细节和具体实现的差别：</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　◆1.InnoDB不支持FULLTEXT类型的索引。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　◆2.InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　◆3.对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　◆4.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　◆5.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性(例如外键)的表不适用。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　另外，InnoDB表的行锁也不是绝对的，假如在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　两种类型最主要的差别就是Innodb 支持事务处理与外键和行级锁.而MyISAM不支持.所以MyISAM往往就容易被人认为只适合在小项目中使用。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　我作为使用MySQL的用户角度出发，Innodb和MyISAM都是比较喜欢的，但是从我目前运维的数据库平台要达到需求：99.9%的稳定性，方便的扩展性和高可用性来说的话，MyISAM绝对是我的首选。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　原因如下：</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　1、首先我目前平台上承载的大部分项目是读多写少的项目，而MyISAM的读性能是比Innodb强不少的。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　2、MyISAM的索引和数据是分开的，并且索引是有压缩的，内存使用率就对应提高了不少。能加载更多索引，而Innodb是索引和数据是紧密捆绑的，没有使用压缩从而会造成Innodb比MyISAM体积庞大不小。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　3、从平台角度来说，经常隔1，2个月就会发生应用开发人员不小心update一个表where写的范围不对，导致这个表没法正常用了，这个时候MyISAM的优越性就体现出来了，随便从当天拷贝的压缩包取出对应表的文件，随便放到一个数据库目录下，然后dump成sql再导回到主库，并把对应的binlog补上。如果是Innodb，恐怕不可能有这么快速度，别和我说让Innodb定期用导出xxx.sql机制备份，因为我平台上最小的一个数据库实例的数据量基本都是几十G大小。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　4、从我接触的应用逻辑来说，select count(*) 和order by 是最频繁的，大概能占了整个sql总语句的60%以上的操作，而这种操作Innodb其实也是会锁表的，很多人以为Innodb是行级锁，那个只是where对它主键是有效，非主键的都会锁全表的。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　5、还有就是经常有很多应用部门需要我给他们定期某些表的数据，MyISAM的话很方便，只要发给他们对应那表的frm.MYD,MYI的文件，让他们自己在对应版本的数据库启动就行，而Innodb就需要导出xxx.sql了，因为光给别人文件，受字典数据文件的影响，对方是无法使用的。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　6、如果和MyISAM比insert写操作的话，Innodb还达不到MyISAM的写性能，如果是针对基于索引的update操作，虽然MyISAM可能会逊色Innodb,但是那么高并发的写，从库能否追的上也是一个问题，还不如通过多实例分库分表架构来解决。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　7、如果是用MyISAM的话，merge引擎可以大大加快应用部门的开发速度，他们只要对这个merge表做一些select count(*)操作，非常适合大项目总量约几亿的rows某一类型(如日志，调查统计)的业务表。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　当然Innodb也不是绝对不用，用事务的项目如模拟炒股项目，我就是用Innodb的，活跃用户20多万时候，也是很轻松应付了，因此我个人也是很喜欢Innodb的，只是如果从数据库平台应用出发，我还是会首选MyISAM。</p><p style="padding: 0px; margin-top: 0px; margin-bottom: 22px; font-family: 宋体, Arial, sans-serif; font-size: 14px; line-height: 25px; white-space: normal; background-color: rgb(239, 244, 250); ">　　另外，可能有人会说你MyISAM无法抗太多写操作，但是我可以通过架构来弥补，说个我现有用的数据库平台容量：主从数据总量在几百T以上，每天十多亿 pv的动态页面，还有几个大项目是通过数据接口方式调用未算进pv总数，(其中包括一个大项目因为初期memcached没部署,导致单台数据库每天处理 9千万的查询)。而我的整体数据库服务器平均负载都在0.5-1左右。</p><p><br/></p>', 1399213971, 103, 16, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(64, '优化MYSQL数据库的方法', '<p><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">1、选取最适用的字段属性,尽可能减少定义字段长度,尽量把字段设置NOT NULL,例如&#39;省份,性别&#39;,最好设置为ENUM</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">2、使用连接（JOIN）来代替子查询:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.删除没有任何订单客户:DELETE FROM customerinfo WHERE customerid NOTin(SELECT customerid FROM orderinfo)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;b.提取所有没有订单客户:SELECT FROM customerinfo WHERE customerid NOTin(SELECT customerid FROM orderinfo)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;c.提高b的速度优化:SELECT FROM customerinfo LEFT JOIN orderidcustomerinfo.customerid=orderinfo.customerid</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;WHERE orderinfo.customerid IS NULL</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">3、使用联合(UNION)来代替手动创建的临时表</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.创建临时表:SELECT name FROM `nametest` UNION SELECTusername FROM `nametest2`</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">4、事务处理:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.保证数据完整性,例如添加和修改同时,两者成立则都执行,一者失败都失败</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;BEGIN&quot;);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;INSERT INTOcustomerinfo (name) VALUES (&#39;$name1&#39;)&quot;;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;SELECT * FROM`orderinfo` where customerid=&quot;.$id&quot;);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;COMMIT&quot;);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">5、锁定表,优化事务处理:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.我们用一个SELECT 语句取出初始数据，通过一些计算，用UPDATE 语句将新值更新到表中。</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;包含有WRITE 关键字的LOCK TABLE 语句可以保证在UNLOCK TABLES 命令被执行之前，</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;不会有其它的访问来对inventory 进行插入、更新或者删除的操作</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;LOCK TABLEcustomerinfo READ, orderinfo WRITE&quot;);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;SELECT customeridFROM `customerinfo` where id=&quot;.$id);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;UPDATE `orderinfo`SET ordertitle=&#39;$title&#39; where customerid=&quot;.$id);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;mysql_query(&quot;UNLOCKTABLES&quot;);</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">6、使用外键,优化锁定表</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.把customerinfo里的customerid映射到orderinfo里的customerid,</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;任何一条没有合法的customerid的记录不会写到orderinfo里</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;CREATE TABLE customerinfo</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;(</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;customerid INT NOT NULL,</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;PRIMARY KEY(customerid)<span class="Apple-converted-space">&nbsp;</span></span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;)TYPE = INNODB;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;CREATE TABLE orderinfo</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;(</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;orderid INT NOT NULL,</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;customerid INT NOT NULL,</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;PRIMARYKEY(customerid,orderid),</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;FOREIGN KEY (customerid)REFERENCES customerinfo</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;(customerid) ON DELETECASCADE &nbsp;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;)TYPE = INNODB;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;注意:&#39;ON DELETE CASCADE&#39;,该参数保证当customerinfo表中的一条记录删除的话同时也会删除order</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表中的该用户的所有记录,注意使用外键要定义事务安全类型为INNODB;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">7、建立索引:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.格式:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;(普通索引)-&gt;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;创建:CREATE INDEX &lt;索引名&gt; ON tablename (索引字段)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;修改:ALTER TABLE tablename ADD INDEX [索引名] (索引字段)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;创表指定索引:CREATE TABLE tablename([...],INDEX[索引名](索引字段))</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;(唯一索引)-&gt;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;创建:CREATE UNIQUE &lt;索引名&gt; ON tablename (索引字段)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;修改:ALTER TABLE tablename ADD UNIQUE [索引名] (索引字段)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;创表指定索引:CREATE TABLE tablename([...],UNIQUE[索引名](索引字段))</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;(主键)-&gt;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;它是唯一索引,一般在创建表是建立,格式为:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;CREATA TABLE tablename([...],PRIMARY KEY[索引字段])</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">8、优化查询语句</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;a.最好在相同字段进行比较操作,在建立好的索引字段上尽量减少函数操作</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;例子1:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;SELECT * FROM order WHEREYEAR(orderDate)&lt;2008;(慢)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;SELECT * FROM order WHEREorderDate&lt;&quot;2008-01-01&quot;;(快)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;例子2:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;SELECT * FROM order WHEREaddtime/7&lt;24;(慢)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;SELECT * FROM order WHEREaddtime&lt;24*7;(快)</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;例子3:</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;SELECT * FROM order WHERE title like&quot;%good%&quot;;</span><br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/><span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 14px/20px &#39;Microsoft Yahei&#39;, Georgia, &#39;Times New Roman&#39;, Times, STHeiti, serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(102,102,102); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">&nbsp;SELECT * FROM order WHEREtitle&gt;=&quot;good&quot; and name&lt;&quot;good&quot;;</span></p>', 1400638423, 105, 16, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(65, '提高PHP编程效率的53种方法', '<p><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">1、如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">2、$row[’id’] 的速度是$row[id]的7倍。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">3、echo 比 print 快，并且使用echo的多重参数（译注：指用逗号而不是句点）代替字符串连接，比如echo $str1,$str2。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">4、在执行for循环之前确定最大循环数，不要每循环一次都计算最大值，最好运用foreach代替。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">5、注销那些不用的变量尤其是大数组，以便释放内存。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">6、尽量避免使用__get，__set，__autoload。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">7、require_once()代价昂贵。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">8、include文件时尽量使用绝对路径，因为它避免了PHP去include_path里查找文件的速度，解析操作系统路径所需的时间会更少。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">9、如果你想知道脚本开始执行（译注：即服务器端收到客户端请求）的时刻，使用$_SERVER[‘REQUEST_TIME’]要好于time()。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">10、函数代替正则表达式完成相同功能。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">11、str_replace函数比preg_replace函数快，但strtr函数的效率是str_replace函数的四倍。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">12、如果一个字符串替换函数，可接受数组或字符作为参数，并且参数长度不太长，那么可以考虑额外写一段替换代码，使得每次传递参数是一个字符，而不是只写一行代码接受数组作为查询和替换的参数。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">13、使用选择分支语句（译注：即switch case）好于使用多个if，else if语句。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">14、用@屏蔽错误消息的做法非常低效，极其低效。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">15、打开apache的mod_deflate模块，可以提高网页的浏览速度。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">16、数据库连接当使用完毕时应关掉，不要用长连接。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">17、错误消息代价昂贵。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">18、在方法中递增局部变量，速度是最快的。几乎与在函数中调用局部变量的速度相当。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">19、递增一个全局变量要比递增一个局部变量慢2倍。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">20、递增一个对象属性（如：$this-&gt;prop++）要比递增一个局部变量慢3倍。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">21、递增一个未预定义的局部变量要比递增一个预定义的局部变量慢9至10倍。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">22、仅定义一个局部变量而没在函数中调用它，同样会减慢速度（其程度相当于递增一个局部变量）。PHP大概会检查看是否存在全局变量。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">23、方法调用看来与类中定义的方法的数量无关，因为我（在测试方法之前和之后都）添加了10个方法，但性能上没有变化。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">24、派生类中的方法运行起来要快于在基类中定义的同样的方法。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">25、调用带有一个参数的空函数，其花费的时间相当于执行7至8次的局部变量递增操作。类似的方法调用所花费的时间接近于15次的局部变量递增操作。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">26、Apache解析一个PHP脚本的时间要比解析一个静态HTML页面慢2至10倍。尽量多用静态HTML页面，少用脚本。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">27、除非脚本可以缓存，否则每次调用时都会重新编译一次。引入一套PHP缓存机制通常可以提升25%至100%的性能，以免除编译开销。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">28、尽量做缓存，可使用memcached。memcached是一款高性能的内存对象缓存系统，可用来加速动态Web应用程序，减轻数据库负载。对运算码 (OP code)的缓存很有用，使得脚本不必为每个请求做重新编译。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">29、当操作字符串并需要检验其长度是否满足某种要求时，你想当然地会使用strlen()函数。此函数执行起来相当快，因为它不做任何计算，只返回在zval结构（C的内置数据结构，用于存储PHP变量）中存储的已知字符串长度。但是，由于strlen()是函数，多多少少会有些慢，因为函数调用会经过诸多步骤，如字母小写化（译注：指函数名小写化，PHP不区分函数名大小写）、哈希查找，会跟随被调用的函数一起执行。在某些情况下，你可以使用isset()技巧加速执行你的代码。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">（举例如下）</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">if (strlen($foo) &lt; 5) { echo “Foo is too short”$$ }</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">（与下面的技巧做比较）</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">if (!isset($foo{5})) { echo “Foo is too short”$$ }</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">调用isset()恰巧比strlen()快，因为与后者不同的是，isset()作为一种语言结构，意味着它的执行不需要函数查找和字母小写化。也就是说，实际上在检验字符串长度的顶层代码中你没有花太多开销。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">34、当执行变量$i的递增或递减时，$i++会比++$i慢一些。这种差异是PHP特有的，并不适用于其他语言，所以请不要修改你的C或Java代码并指望它们能立即变快，没用的。++$i更快是因为它只需要3条指令(opcodes)，$i++则需要4条指令。后置递增实际上会产生一个临时变量，这个临时变量随后被递增。而前置递增直接在原值上递增。这是最优化处理的一种，正如Zend的PHP优化器所作的那样。牢记这个优化处理不失为一个好主意，因为并不是所有的指令优化器都会做同样的优化处理，并且存在大量没有装配指令优化器的互联网服务提供商（ISPs）和服务器。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">35、并不是必须面向对象(OOP)，面向对象往往开销很大，每个方法和对象调用都会消耗很多内存。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">36、并非要用类实现所有的数据结构，数组也很有用。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">37、不要把方法细分得过多，仔细想想你真正打算重用的是哪些代码？</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">38、当你需要时，你总能把代码分解成方法。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">39、尽量采用大量的PHP内置函数。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">40、如果在代码中存在大量耗时的函数，你可以考虑用C扩展的方式实现它们。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">41、评估检验(profile)你的代码。检验器会告诉你，代码的哪些部分消耗了多少时间。Xdebug调试器包含了检验程序，评估检验总体上可以显示出代码的瓶颈。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">42、mod_zip可作为Apache模块，用来即时压缩你的数据，并可让数据传输量降低80%。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">43、在可以用file_get_contents替代file、fopen、feof、fgets等系列方法的情况下，尽量用file_get_contents，因为他的效率高得多！但是要注意file_get_contents在打开一个URL文件时候的PHP版本问题；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">44、尽量的少进行文件操作，虽然PHP的文件操作效率也不低的；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">45、优化Select SQL语句，在可能的情况下尽量少的进行Insert、Update操作(在update上，我被恶批过)；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">46、尽可能的使用PHP内部函数（但是我却为了找个PHP里面不存在的函数，浪费了本可以写出一个自定义函数的时间，经验问题啊！）；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">47、循环内部不要声明变量，尤其是大变量：对象(这好像不只是PHP里面要注意的问题吧？)；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">48、多维数组尽量不要循环嵌套赋值；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">49、在可以用PHP内部字符串操作函数的情况下，不要用正则表达式；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">50、foreach效率更高，尽量用foreach代替while和for循环；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">51、“用i+=1代替i=i+1。符合c/c++的习惯，效率还高”；</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">52、对global变量，应该用完就unset()掉；</span></p><p><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">53<span style="FONT-FAMILY: Tahoma; COLOR: #333333">、</span><span style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px">用单引号代替双引号来包含字符串，这样做会更快一些。因为PHP会在双引号包围的字符串中搜寻变量，单引号则不会，注意：只有echo能这么做，它是一种可以把多个字符串当作参数的“函数”（译注：PHP手册中说echo是语言结构，不是真正的函数，故把函数加上了双引号）。</span><br style="PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(45,34,23); TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; FONT: 14px/22px Tahoma, &#39;Microsoft Yahei&#39;; WHITE-SPACE: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"/></span></p>', 1406562869, 108, 7, 0),
(66, '笔记-- 讲义', '<p>/*<br/>&nbsp; $a=0;<br/>&nbsp; $b=0;<br/>&nbsp; if($a=3 &amp;&amp; $b=3){&nbsp;&nbsp;&nbsp; &nbsp;<br/>&nbsp;&nbsp; $a++;<br/>&nbsp;&nbsp; $b++;<br/>}<br/>echo $a.&quot;,&quot;.$b; //1,4<br/>*/<br/>/*<br/>&nbsp; $a=0;<br/>&nbsp; $b=0;<br/>&nbsp; if($a=3 || $b=3){&nbsp;&nbsp;&nbsp; &nbsp;<br/>&nbsp;&nbsp; $a++;<br/>&nbsp;&nbsp; $b++;<br/>}<br/>echo $a.&quot;,&quot;.$b; //1,1<br/>*/<br/><br/>/*<br/>function demo(){&nbsp; &nbsp;<br/>&nbsp;&nbsp;&nbsp; $sum=0;<br/>&nbsp;&nbsp; &nbsp;for($i=0;$i&lt;func_num_args();$i++){<br/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sum+=func_get_arg($i);<br/>&nbsp;&nbsp; &nbsp;}<br/>&nbsp;&nbsp; &nbsp;&nbsp; echo $sum;<br/>&nbsp;&nbsp; &nbsp;}<br/>demo(1,2,3,4,5,6,7,8,9); //45<br/>//func_num_args()&nbsp;&nbsp; //返回参数总数<br/>//func_get_arg()&nbsp;&nbsp;&nbsp; //接收一个数字参数，返回指定参数<br/>*/<br/><br/>/*<br/>function demo(){<br/>&nbsp;&nbsp; $a=10;<br/>&nbsp;&nbsp; $b=20;<br/>&nbsp;&nbsp; $one=function($str) use ($a,$b){ <br/>&nbsp;&nbsp; echo $str.&quot;&lt;br&gt;&quot;;<br/>&nbsp;&nbsp; $a++;<br/>&nbsp;&nbsp; echo $a.&quot;&lt;br&gt;&quot;;<br/>&nbsp;&nbsp; echo $b.&quot;&lt;br&gt;&quot;;<br/>};<br/>&nbsp;&nbsp; $one(&quot;hello&quot;);<br/>&nbsp;&nbsp; echo $a.&quot;&lt;br&gt;&quot;;<br/>}<br/>demo();&nbsp; //匿名函数使用<br/>*/<br/><br/>/*<br/>//在Javascript中可以将一个匿名函数赋值给一个对象的属性<br/>var a = {};<br/>a.call = function() {alert(&quot;called&quot;);}<br/>a.call(); // alert called<br/>*/<br/><br/>/*<br/>hello <br/>11<br/>20<br/>10<br/>*/<br/><br/>/*<br/>$arr1=array(1,2,3);<br/>$arr2=array(&quot;one&quot;,&quot;two&quot;,&quot;tree&quot;);<br/>function demo($a,$b){<br/>&nbsp;&nbsp; echo &quot;$a-----$b&lt;br&gt;&quot;;<br/>&nbsp;&nbsp; $c=&quot;$a-----$b&quot;;<br/>&nbsp;&nbsp; return $c;<br/>}<br/>$fun_name=&quot;demo&quot;;<br/>$rarr=array_map($fun_name,$arr1,$arr2);<br/>var_dump($rarr);<br/>*/<br/>//回调函数使用<br/>//array_map() 函数返回用户自定义函数作用后的数组<br/>/*<br/>1-----one<br/>2-----two<br/>3-----tree<br/>array(3) { [0]=&gt; string(9) &quot;1-----one&quot; [1]=&gt; string(9) &quot;2-----two&quot; [2]=&gt; string(10) &quot;3-----tree&quot; }<br/>*/</p>', 1406651242, 108, 1, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(67, '数据库优化', '<p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这篇文章我花费了大量的时间查找资料、修改、排版，希望大家阅读之后，感觉好的话推荐给更多的人，让更多的人看到、纠正以及补充。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">1.对查询进行优化，要尽量避免全表扫描，首先应考虑在&nbsp;where&nbsp;及&nbsp;order&nbsp;by&nbsp;涉及的列上建立索引。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">2.应尽量避免在&nbsp;where&nbsp;子句中对字段进行&nbsp;null&nbsp;值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;is&nbsp;null</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">最好不要给数据库留NULL，尽可能的使用&nbsp;NOT&nbsp;NULL填充数据库.</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">备注、描述、评论之类的可以设置为&nbsp;NULL，其他的，最好不要使用NULL。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">不要以为&nbsp;NULL&nbsp;不需要空间，比如：char(100)&nbsp;型，在字段建立时，空间就固定了，&nbsp;不管是否插入值（NULL也包含在内），都是占用&nbsp;100个字符的空间的，如果是varchar这样的变长字段，&nbsp;null&nbsp;不占用空间。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;=&nbsp;0</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">3.应尽量避免在&nbsp;where&nbsp;子句中使用&nbsp;!=&nbsp;或&nbsp;&lt;&gt;&nbsp;操作符，否则将引擎放弃使用索引而进行全表扫描。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">4.应尽量避免在&nbsp;where&nbsp;子句中使用&nbsp;or&nbsp;来连接条件，如果一个字段有索引，一个字段没有索引，将导致引擎放弃使用索引而进行全表扫描，如：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num=10&nbsp;or&nbsp;Name&nbsp;=&nbsp;&#39;admin&#39;</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">可以这样查询：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;=&nbsp;10&nbsp;union&nbsp;all&nbsp;select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;Name&nbsp;=&nbsp;&#39;admin&#39;</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">5.in&nbsp;和&nbsp;not&nbsp;in&nbsp;也要慎用，否则会导致全表扫描，如：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;in(1,2,3)</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">对于连续的数值，能用&nbsp;between&nbsp;就不要用&nbsp;in&nbsp;了：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;between&nbsp;1&nbsp;and&nbsp;3</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">很多时候用&nbsp;exists&nbsp;代替&nbsp;in&nbsp;是一个好的选择：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;num&nbsp;from&nbsp;a&nbsp;where&nbsp;num&nbsp;in(select&nbsp;num&nbsp;from&nbsp;b)</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">用下面的语句替换：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;num&nbsp;from&nbsp;a&nbsp;where&nbsp;exists(select&nbsp;1&nbsp;from&nbsp;b&nbsp;where&nbsp;num=a.num)</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">6.下面的查询也将导致全表扫描：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;name&nbsp;like&nbsp;‘%abc%’</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">若要提高效率，可以考虑全文检索。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">7.如果在&nbsp;where&nbsp;子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然&nbsp;而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;=&nbsp;@num</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">可以改为强制查询使用索引：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;with(index(索引名))&nbsp;where&nbsp;num&nbsp;=&nbsp;@num</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">应尽量避免在&nbsp;where&nbsp;子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num/2&nbsp;=&nbsp;100</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">应改为:</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;num&nbsp;=&nbsp;100*2</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;substring(name,1,3)&nbsp;=&nbsp;’abc’&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-–name以abc开头的id&nbsp;select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;datediff(day,createdate,’2005-11-30′)&nbsp;=&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;-–‘2005-11-30’&nbsp;&nbsp;&nbsp;&nbsp;--生成的id</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">应改为:</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;name&nbsp;like&nbsp;&#39;abc%&#39;&nbsp;select&nbsp;id&nbsp;from&nbsp;t&nbsp;where&nbsp;createdate&nbsp;&gt;=&nbsp;&#39;2005-11-30&#39;&nbsp;and&nbsp;createdate&nbsp;&lt;&nbsp;&#39;2005-12-1&#39;</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">10.不要在&nbsp;where&nbsp;子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">12.不要写一些没有意义的查询，如需要生成一个空表结构：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/></p><pre class="prettyprint" style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/1.4285 &#39;Courier New&#39;, Arial; PADDING-LEFT: 5px; MARGIN: 15px 0px; BORDER-LEFT: rgb(108,226,108) 3px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 5px; BACKGROUND-COLOR: rgb(246,246,246); TEXT-INDENT: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; -webkit-text-stroke-width: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px">select&nbsp;col1,col2&nbsp;into&nbsp;#t&nbsp;from&nbsp;t&nbsp;where&nbsp;1=0</pre><p><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">create&nbsp;table&nbsp;#t(…)</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">13.Update&nbsp;语句，如果只更改1、2个字段，不要Update全部字段，否则频繁调用会引起明显的性能消耗，同时带来大量日志。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">14.对于多张大数据量（这里几百条就算大了）的表JOIN，要先分页再JOIN，否则逻辑读会很高，性能很差。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">15.select&nbsp;count(*)&nbsp;from&nbsp;table；这样不带任何条件的count会引起全表扫描，并且没有任何业务意义，是一定要杜绝的。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">16.索引并不是越多越好，索引固然可以提高相应的&nbsp;select&nbsp;的效率，但同时也降低了&nbsp;insert&nbsp;及&nbsp;update&nbsp;的效率，因为&nbsp;insert&nbsp;或&nbsp;update&nbsp;时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有&nbsp;必要。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">17.应尽可能的避免更新&nbsp;clustered&nbsp;索引数据列，因为&nbsp;clustered&nbsp;索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新&nbsp;clustered&nbsp;索引数据列，那么需要考虑是否应将该索引建为&nbsp;clustered&nbsp;索引。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">18.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连&nbsp;接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">19.尽可能的使用&nbsp;varchar/nvarchar&nbsp;代替&nbsp;char/nchar&nbsp;，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">20.任何地方都不要使用&nbsp;select&nbsp;*&nbsp;from&nbsp;t&nbsp;，用具体的字段列表代替“*”，不要返回用不到的任何字段。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">21.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">22.&nbsp;避免频繁创建和删除临时表，以减少系统表资源的消耗。临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，&nbsp;最好使用导出表。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; WORD-BREAK: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"/><span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(51,51,51); FONT: 18px/36px &#39;Century Gothic&#39;, &#39;MicroSoft YaHei&#39;, &#39;hiragino sans GB&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(244,246,248); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">23.在新建临时表时，如果一次性插入数据量很大，那么可以使用&nbsp;select&nbsp;into&nbsp;代替&nbsp;create&nbsp;table，避免造成大量&nbsp;log&nbsp;，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create&nbsp;table，然后insert。</span><br style="BOX-SIZING: border-box; WORD-WRAP: break-word; WHITE-SPACE: normal; WORD-SPACING: 0px; ', 1408073830, 103, 3, 0);
INSERT INTO `hd_blog` (`id`, `title`, `content`, `time`, `click`, `cid`, `del`) VALUES
(68, 'Redis,Memcache,mongoDB的区别', '<p>从以下几个维度，对redis、memcache、mongoDB 做了对比，欢迎拍砖</p><p>1、性能</p><p>都比较高，性能对我们来说应该都不是瓶颈</p><p>总体来讲，TPS方面redis和memcache差不多，要大于mongodb</p><p>2、操作的便利性</p><p>memcache数据结构单一</p><p>redis丰富一些，数据操作方面，redis更好一些，较少的网络IO次数</p><p>mongodb支持丰富的数据表达，索引，最类似关系型数据库，支持的查询语言非常丰富</p><p>3、内存空间的大小和数据量的大小</p><p>redis在2.0版本后增加了自己的VM特性，突破物理内存的限制；可以对key value设置过期时间（类似memcache）</p><p>memcache可以修改最大可用内存,采用LRU算法</p><p>mongoDB适合大数据量的存储，依赖操作系统VM做内存管理，吃内存也比较厉害，服务不要和别的服务在一起</p><p>4、可用性（单点问题）</p><p>对于单点问题，</p><p>redis，依赖客户端来实现分布式读写；主从复制时，每次从节点重新连接主节点都要依赖整个快照,无增量复制，因性能和效率问题，</p><p>所以单点问题比较复杂；不支持自动sharding,需要依赖程序设定一致hash 机制。</p><p>一种替代方案是，不用redis本身的复制机制，采用自己做主动复制（多份存储），或者改成增量复制的方式（需要自己实现），一致性问题和性能的权衡</p><p>Memcache本身没有数据冗余机制，也没必要；对于故障预防，采用依赖成熟的hash或者环状的算法，解决单点故障引起的抖动问题。</p><p>mongoDB支持master-slave,replicaset（内部采用paxos选举算法，自动故障恢复）,auto sharding机制，对客户端屏蔽了故障转移和切分机制。</p><p>5、可靠性（持久化）</p><p>对于数据持久化和数据恢复，</p><p>redis支持（快照、AOF）：依赖快照进行持久化，aof增强了可靠性的同时，对性能有所影响</p><p>memcache不支持，通常用在做缓存,提升性能；</p><p>MongoDB从1.8版本开始采用binlog方式支持持久化的可靠性</p><p>6、数据一致性（事务支持）</p><p>Memcache 在并发场景下，用cas保证一致性</p><p>redis事务支持比较弱，只能保证事务中的每个操作连续执行</p><p>mongoDB不支持事务</p><p>7、数据分析</p><p>mongoDB内置了数据分析的功能(mapreduce),其他不支持</p><p>8、应用场景</p><p>redis：数据量较小的更性能操作和运算上</p><p>memcache：用于在动态系统中减少数据库负载，提升性能;做缓存，提高性能（适合读多写少，对于数据量比较大，可以采用sharding）</p><p>MongoDB:主要解决海量数据的访问效率问题</p><p></p>', 1409663341, 102, 1, 0),
(69, 'PHP使用数组实现队列', '<p>PHP的数组处理函数还可以将数组实现队列，堆栈是“先进后出”。在堆栈中，最后压入的数据（进栈），将会被最先弹出（出栈）。而队列是先进先出，就如同银行的排号机<br/>PHP中将数组当做一个栈，主要是使用array_push()和array_pop()两个系统函数来完成。入栈主要是利用array_push()函数向第一个参数的数组尾部添加一个或多个元素，然后返回新数组的长度，示例如下： <br/>而PHP中，将数组当作是队列则主要是用array_push()和array_shift()实现。 <br/>复制代码 代码如下:<br/>&lt;?php <br/>$zhan=array(&quot;WEB&quot;);//声明一个数组当做队列 <br/>array_push($zhan,&quot;PHP&quot;);//将字符串压入栈（数组）中 <br/>array_push($zhan,&quot;<a href="http://www.CHHUA.COM&quot;);//">WWW.CHHUA.COM&quot;);//</a>再压入一个元素 <br/>print_r($zhan);//打印数组内容 <br/>?&gt;</p><p>出栈主要是利用array_shift()函数将数组的第一个元素弹出，并将数组的长度减1，示例如下： <br/>复制代码 代码如下:<br/>&lt;?php <br/>$zhan=array(&quot;WEB&quot;,&quot;<a href="http://www.chhua.com&quot;,&quot;WEB">www.chhua.com&quot;,&quot;WEB</a>开发笔记&quot;,&quot;PHP&quot;,&quot;网站建设&quot;);//声明一个数组当做栈 <br/>array_shift($zhan);//将字符串出队（数组）中 <br/>print_r($zhan);//打印数组内容 Array([0] =&gt; WEB[1] =&gt; <a href="http://www.chhua.com[2">www.chhua.com[2</a>] =&gt; WEB开发笔记[3] =&gt; PHP) <br/>?&gt;</p><p></p>', 1409663978, 100, 1, 0),
(70, 'MYSql存储过程的作用', '<p>1、使用了存过程，很多相似性的删除，更新，新增等操作就变得轻松了，并且以后也便于管理！</p><p>&nbsp;2、存储过程因为SQL语句已经预编绎过了，因此运行的速度比较快。</p><p>&nbsp;3、存储过程可以接受参数、输出参数、返回单个或多个结果集以及返回值。可以向程序返回错误原因。&nbsp;&nbsp;&nbsp;</p><p>4、存储过程运行比较稳定，不会有太多的错误。只要一次成功，以后都会按这个程序运行。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>5、存储过程主要是在服务器上运行，减少对客户机的压力。&nbsp;&nbsp;&nbsp;</p><p>6、存储过程可以包含程序流、逻辑以及对数据库的查询。同时可以实体封装和隐藏了数据逻辑。&nbsp;&nbsp;&nbsp;</p><p>7、存储过程可以在单个存储过程中执行一系列SQL语句。&nbsp;&nbsp;&nbsp;</p><p>&nbsp;8、存储过程可以从自己的存储过程内引用其它存储过程，这可以简化一系列复杂语句。</p>', 1409664899, 101, 1, 0),
(71, 'MySQL学习笔记：InnoDB和MyISAM的差别', '<p>InnoDB和MyISAM是在使用MySQL最常用的两个表类型，各有优缺点，视具体应用而定。基本的差别为：MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持。MyISAM类型的表强调的是性能，其执行数度比InnoDB类型更快，但是不提供事务支持，而InnoDB提供事务支持已经外部键等高级数据库功能。</p><p>MyIASM是IASM表的新版本，有如下扩展：<wbr/><br/>二进制层次的可移植性。<wbr/><br/>NULL列索引。<wbr/><br/>对变长行比ISAM表有更少的碎片。<wbr/><br/>支持大文件。<wbr/><br/>更好的索引压缩。<wbr/><br/>更好的键吗统计分布。<wbr/><br/>更好和更快的auto_increment处理。<wbr/></p><p>以下是一些细节和具体实现的差别：</p><p>1.InnoDB不支持FULLTEXT类型的索引。<br/>2.InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。<br/>3.对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。<br/>4.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。<br/>5.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</p><p>另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</p><p>任何一种表都不是万能的，只用恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。</p><p></p>', 1409665197, 101, 1, 0),
(72, 'Apache与Nginx的优缺点比较  ', '<p><strong>1、nginx相对于apache的优点： </strong><br/>轻量级，同样起web 服务，比apache<strong>占用更少的内存及资源 </strong><br/><strong>抗并发，nginx 处理请求是异步非阻塞的，而apache 则是阻塞型的</strong>，在高并发下nginx 能保持低资源低消耗高性能 <br/>高度模块化的设计，编写模块相对简单 <br/>社区活跃，各种高性能模块出品迅速啊 <br/><strong>apache 相对于nginx 的优点： </strong><br/></p><p>rewrite ，<strong>比nginx 的rewrite 强大 </strong></p><p><strong>动态页面</strong></p><p>模块超多，基本想到的都可以找到 <br/>少bug ，nginx 的bug 相对较多 <br/></p><p>超稳定</p><p><br/></p><p>存在就是理由，一般来说，<strong>需要性能的web 服务，用nginx 。如果不需要性能只求稳定，那就apache </strong>吧。后者的各种功能模块实现得比前者，例如ssl 的模块就比前者好，可配置项多。这里要注意一点，epoll(freebsd 上是 kqueue )网络 IO 模型是nginx 处理性能高的根本理由，但并不是所有的情况下都是epoll 大获全胜的，如果本身提供静态服务的就只有寥寥几个文件，apache 的select 模型或许比epoll 更高性能。当然，这只是根据网络IO 模型的原理作的一个假设，真正的应用还是需要实测了再说的。 <br/><br/>2、作为 Web 服务器：相比 Apache，Nginx 使用更少的资源，支持更多的并发连接，体现更高的效率，这点使 Nginx 尤其受到虚拟主机提供商的欢迎。在高连接并发的情况下，Nginx是Apache服务器不错的替代品: Nginx在美国是做虚拟主机生意的老板们经常选择的软件平台之一. 能够支持高达 50,000 个并发连接数的响应, <strong>感谢Nginx为我们选择了 epoll and kqueue 作为开发模型. </strong><br/>Nginx 作为负载均衡服务器: Nginx 既可以在内部直接支持 Rails 和 PHP 程序对外进行服务, 也可以支持作为 HTTP代理 服务器对外进行服务. Nginx采用C进行编写, 不论是系统资源开销还是CPU使用效率都比 Perlbal 要好很多. <br/>作为邮件代理服务器: Nginx 同时也是一个非常优秀的邮件代理服务器（最早开发这个产品的目的之一也是作为邮件代理服务器）, Last.fm 描述了成功并且美妙的使用经验. <br/>Nginx 是一个安装非常的简单 , 配置文件非常简洁（还能够支持perl语法）, Bugs 非常少的服务器: Nginx 启动特别容易, 并且几乎可以做到 7*24不间断运行，即使运行数个月也不需要重新启动. 你还能够不间断服务的情况下进行软件版本的升级 . <br/><br/>3、Nginx 配置简洁, Apache 复杂 <br/>Nginx 静态处理性能比 Apache 高 3倍以上 <br/>Apache 对 PHP 支持比较简单，Nginx 需要配合其他后端用 <br/>Apache 的组件比 Nginx 多 <br/><strong>现在 Nginx 才是 Web 服务器的首选 </strong><br/><br/>4、最核心的区别在于apache是同步多进程模型，一个连接对应一个进程；nginx是异步的，多个连接（万级别）可以对应一个进程 <br/><br/></p><p>5、<strong>nginx处理静态文件好,耗费内存少</strong>.但无疑apache仍然是目前的主流,有很多丰富的特性.所以还需要搭配着来.当然如果能确定nginx就适合需求,那么使用nginx会是更经济的方式.</p><p><strong><span style="BACKGROUND-COLOR: #ffffff; FONT-FAMILY: Arial,Tahoma,Verdana,sans-serif; COLOR: #2a2a2a">apache有先天不支持多核心處理負載雞肋的缺點，建議使用nginx做前端，後端用apache。大型網站建議用nginx自代的集群功能</span></strong><br/></p><p><br/></p><p>6、从个人过往的使用情况来看，nginx的负载能力比apache高很多。最新的服务器也改用nginx了。而且nginx改完配置能-t测试一下配置有没有问题，apache重启的时候发现配置出错了，会很崩溃，改的时候都会非常小心翼翼现在看有好多集群站，前端nginx抗并发，后端apache集群，配合的也不错。</p><p>&nbsp;</p><p><br/>7、<strong>nginx处理动态请求是鸡肋，一般动态请求要apache去做，nginx只适合静态和反向。 </strong><br/><br/>8、從我個人的經驗來看，nginx是很不錯的前端服務器，負載性能很好，在老奔上開nginx，用webbench模擬10000個靜態文件請求毫不吃力。apache對php等語言的支持很好，此外apache有強大的支持網路，發展時間相對nginx更久，<br/><br/>9、 Nginx优于apache的主要两点：1.Nginx本身就是一个反向代理服务器 2.Nginx支持7层负载均衡；其他的当然，Nginx可能会比 apache支持更高的并发，但是根据NetCraft的统计，2011年4月的统计数据，Apache依然占有62.71%，而Nginx是 7.35%，因此总得来说，Aapche依然是大部分公司的首先，因为其成熟的技术和开发社区已经也是非常不错的性能。 <br/><br/>10、你对web server的需求决定你的选择。<strong>大部分情况下nginx都优于APACHE，比如说静态文件处理、PHP-CGI的支持、反向代理功能、前端Cache、维持连接等等。在 Apache+PHP（prefork）模式下，如果PHP处理慢或者前端压力很大的情况下，很容易出现Apache进程数飙升，从而拒绝服务的现象。</strong> <br/><br/>11、可以看一下nginx lua模块：https://github.com/chaoslaw...apache比nginx多的模块，可直接用lua实现apache是最流行的，why？大多数人懒得更新到nginx或者学新事物 <br/><br/>12、对于nginx，我喜欢它配置文件写的很简洁，正则配置让很多事情变得简单运行效率高，占用资源少，代理功能强大，很适合做前端响应服务器 <br/><br/><strong>13、Apache在处理动态有优势，Nginx并发性比较好，CPU内存占用低，如果rewrite频繁，那还是Apache吧</strong></p><p></p>', 1409669789, 103, 1, 0);

-- --------------------------------------------------------

--
-- 表的结构 `hd_blog_attr`
--

CREATE TABLE IF NOT EXISTS `hd_blog_attr` (
  `bid` int(10) unsigned NOT NULL,
  `aid` int(10) unsigned NOT NULL,
  KEY `bid` (`bid`),
  KEY `aid` (`aid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `hd_blog_attr`
--

INSERT INTO `hd_blog_attr` (`bid`, `aid`) VALUES
(8, 2),
(7, 2),
(6, 2),
(9, 2),
(10, 2),
(11, 2),
(12, 2),
(13, 2),
(14, 2),
(15, 2),
(16, 2),
(17, 2),
(18, 2),
(19, 2),
(20, 2),
(37, 1),
(41, 1),
(36, 1),
(21, 2),
(34, 1),
(33, 1),
(40, 1),
(35, 1),
(38, 1),
(42, 1),
(43, 1),
(44, 1),
(45, 1),
(46, 1),
(47, 1),
(48, 1),
(50, 1),
(51, 1),
(52, 1),
(53, 1),
(54, 1),
(55, 1),
(56, 2),
(58, 2),
(59, 2),
(60, 2),
(61, 2),
(62, 2),
(63, 2),
(64, 2),
(65, 1),
(65, 2),
(65, 3),
(66, 1),
(67, 1),
(67, 2),
(67, 3),
(68, 1),
(69, 1),
(70, 1),
(71, 1),
(72, 1);

-- --------------------------------------------------------

--
-- 表的结构 `hd_cate`
--

CREATE TABLE IF NOT EXISTS `hd_cate` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` char(15) NOT NULL DEFAULT '',
  `pid` int(10) unsigned NOT NULL DEFAULT '0',
  `sort` smallint(6) NOT NULL DEFAULT '100',
  PRIMARY KEY (`id`),
  KEY `pid` (`pid`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=20 ;

--
-- 转存表中的数据 `hd_cate`
--

INSERT INTO `hd_cate` (`id`, `name`, `pid`, `sort`) VALUES
(1, 'php技术', 0, 1),
(2, '前端技术', 0, 2),
(3, '数据存储', 0, 3),
(4, '系统架构', 0, 4),
(5, 'APP开发', 0, 5),
(6, '运营推广', 0, 6),
(7, '美文转载', 0, 7),
(8, '行业快讯', 0, 8),
(9, 'PHP函数', 1, 9),
(10, 'PHP类库', 1, 10),
(11, '开发框架', 1, 11),
(12, '模板引擎', 1, 12),
(13, 'div+css', 2, 17),
(14, 'javascript', 2, 18),
(15, ' html5', 2, 19),
(16, 'mysql', 3, 16),
(17, ' NoSQL', 3, 15),
(18, 'linux', 4, 13),
(19, 'windows', 4, 14);

-- --------------------------------------------------------

--
-- 表的结构 `hd_node`
--

CREATE TABLE IF NOT EXISTS `hd_node` (
  `id` smallint(6) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `title` varchar(50) DEFAULT NULL,
  `status` tinyint(1) DEFAULT '0',
  `remark` varchar(255) DEFAULT NULL,
  `sort` smallint(6) unsigned DEFAULT NULL,
  `pid` smallint(6) unsigned NOT NULL,
  `level` tinyint(1) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `level` (`level`),
  KEY `pid` (`pid`),
  KEY `status` (`status`),
  KEY `name` (`name`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=26 ;

--
-- 转存表中的数据 `hd_node`
--

INSERT INTO `hd_node` (`id`, `name`, `title`, `status`, `remark`, `sort`, `pid`, `level`) VALUES
(22, 'node', '节点列表', 1, '节点列表', 1, 19, 3),
(21, 'role', '角色列表', 1, '角色列表', 1, 19, 3),
(20, 'index', '用户列表', 1, '用户列表', 1, 19, 3),
(19, 'Rbac', 'RBAC权限控制', 1, 'RBAC权限控制', 1, 18, 2),
(18, 'Admin', '后台应用', 1, '后台应用', 1, 0, 1),
(23, 'addUser', '添加用户', 1, '添加用户', 1, 19, 3),
(24, 'addRole', '添加角色', 1, '添加角色', 1, 19, 3),
(25, 'addNode', '添加节点', 1, '添加节点', 1, 19, 3);

-- --------------------------------------------------------

--
-- 表的结构 `hd_role`
--

CREATE TABLE IF NOT EXISTS `hd_role` (
  `id` smallint(6) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `pid` smallint(6) DEFAULT NULL,
  `status` tinyint(1) unsigned DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `pid` (`pid`),
  KEY `status` (`status`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

--
-- 转存表中的数据 `hd_role`
--

INSERT INTO `hd_role` (`id`, `name`, `pid`, `status`, `remark`) VALUES
(7, 'Editor', NULL, 1, '编辑'),
(6, 'Manager', NULL, 1, '普通管理员');

-- --------------------------------------------------------

--
-- 表的结构 `hd_role_user`
--

CREATE TABLE IF NOT EXISTS `hd_role_user` (
  `role_id` mediumint(9) unsigned DEFAULT NULL,
  `user_id` char(32) DEFAULT NULL,
  KEY `group_id` (`role_id`),
  KEY `user_id` (`user_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `hd_role_user`
--

INSERT INTO `hd_role_user` (`role_id`, `user_id`) VALUES
(7, '2');

-- --------------------------------------------------------

--
-- 表的结构 `hd_session`
--

CREATE TABLE IF NOT EXISTS `hd_session` (
  `session_id` varchar(255) NOT NULL,
  `session_expire` int(11) NOT NULL,
  `session_data` blob,
  UNIQUE KEY `session_id` (`session_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `hd_session`
--

INSERT INTO `hd_session` (`session_id`, `session_expire`, `session_data`) VALUES
('d423qhdde4d6c52lgghh2m58h2', 1412841438, '');

-- --------------------------------------------------------

--
-- 表的结构 `hd_user`
--

CREATE TABLE IF NOT EXISTS `hd_user` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` char(20) NOT NULL DEFAULT '',
  `password` char(32) NOT NULL DEFAULT '',
  `logintime` int(10) unsigned NOT NULL,
  `loginip` varchar(30) NOT NULL,
  `lock` tinyint(1) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- 转存表中的数据 `hd_user`
--

INSERT INTO `hd_user` (`id`, `username`, `password`, `logintime`, `loginip`, `lock`) VALUES
(1, 'admin', '21232f297a57a5a743894a0e4a801fc3', 1409669688, '27.38.221.26', 0),
(2, 'zhangsan', 'e10adc3949ba59abbe56e057f20f883e', 1384397498, '119.139.31.190', 0);

-- --------------------------------------------------------

--
-- 表的结构 `hd_wish`
--

CREATE TABLE IF NOT EXISTS `hd_wish` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL DEFAULT '',
  `content` varchar(255) NOT NULL DEFAULT '',
  `time` int(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=80 ;

--
-- 转存表中的数据 `hd_wish`
--

INSERT INTO `hd_wish` (`id`, `username`, `content`, `time`) VALUES
(76, '呵呵', '呵呵[抓狂][抱抱]', 1383666644),
(77, '加油', '加油[酷][嘻嘻]', 1383666661),
(78, 'sadfhbjh ba ', '[抓狂][抓狂][抓狂][抓狂]', 1394033188);

-- --------------------------------------------------------

--
-- 表的结构 `links`
--

CREATE TABLE IF NOT EXISTS `links` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `webname` varchar(30) NOT NULL,
  `weburl` varchar(50) NOT NULL,
  `styleid` int(1) NOT NULL,
  `logourl` varchar(50) NOT NULL,
  `addtime` int(30) NOT NULL,
  `intro` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=3 ;

--
-- 转存表中的数据 `links`
--

INSERT INTO `links` (`id`, `webname`, `weburl`, `styleid`, `logourl`, `addtime`, `intro`) VALUES
(2, 'php技术学习博客', 'www.92php.net', 2, '文本链接', 1409372445, 'php技术学习博客');

-- --------------------------------------------------------

--
-- 表的结构 `orderlist`
--

CREATE TABLE IF NOT EXISTS `orderlist` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `orderID` varchar(50) NOT NULL,
  `pid` int(10) NOT NULL,
  `title` varchar(100) NOT NULL,
  `unitPrice` decimal(10,2) NOT NULL,
  `Price` decimal(10,2) NOT NULL,
  `total` int(20) NOT NULL,
  `picurl` varchar(225) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=gb2312 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `product`
--

CREATE TABLE IF NOT EXISTS `product` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `numbers` varchar(30) NOT NULL,
  `title` varchar(100) NOT NULL,
  `typeid` int(5) NOT NULL,
  `ppid` int(5) NOT NULL,
  `hot` int(1) NOT NULL,
  `drops` int(1) NOT NULL,
  `recommend` int(1) NOT NULL,
  `kucun` int(10) NOT NULL,
  `hits` int(5) NOT NULL,
  `picurl` varchar(100) NOT NULL,
  `picurls` text NOT NULL,
  `content` text NOT NULL,
  `addtime` int(30) NOT NULL,
  `inputer` varchar(50) NOT NULL,
  `price` decimal(10,2) NOT NULL,
  `yprice` decimal(10,2) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=104 ;

--
-- 转存表中的数据 `product`
--

INSERT INTO `product` (`id`, `numbers`, `title`, `typeid`, `ppid`, `hot`, `drops`, `recommend`, `kucun`, `hits`, `picurl`, `picurls`, `content`, `addtime`, `inputer`, `price`, `yprice`) VALUES
(1, '1318383987409000', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 1, 0, 0, 999, 100, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '991.00', '1991.00'),
(3, '1318385768492000', '后盾网实训高薪就业班', 27, 2, 1, 0, 0, 999, 100, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6801.00', '8801.00'),
(68, '1318383987409000', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 1, 0, 0, 999, 12345, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '992.00', '1992.00'),
(69, '1318385768492000', '后盾网实训高薪就业班', 27, 0, 1, 0, 0, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6802.00', '8802.00'),
(70, '1318385768492001', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 1, 0, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '993.00', '1993.00'),
(71, '1318385768492002', '后盾网实训高薪就业班', 27, 0, 1, 0, 0, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6803.00', '8803.00'),
(72, '1318385768492003', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 1, 0, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '994.00', '1994.00'),
(73, '1318385768492004', '后盾网实训高薪就业班', 27, 0, 1, 0, 0, 999, 100, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6822.00', '8822.00'),
(74, '13183857684920034', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 6, 1, 1, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '995.00', '1995.00'),
(75, '13183857684920033', '后盾网实训高薪就业班', 27, 5, 1, 1, 1, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6804.00', '8804.00'),
(76, '13183857684920032', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 6, 1, 1, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '996.00', '1996.00'),
(77, '13183857684920031', '后盾网实训高薪就业班', 27, 5, 1, 1, 1, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6805.00', '8805.00'),
(78, '13183857684920030', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 6, 1, 1, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '997.00', '1997.00'),
(79, '13183857684920029', '后盾网实训高薪就业班', 27, 5, 1, 1, 1, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6806.00', '8806.00'),
(80, '13183857684920028', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 6, 1, 1, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '998.00', '1998.00'),
(81, '13183857684920027', '后盾网实训高薪就业班', 27, 5, 1, 1, 1, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6807.00', '8807.00'),
(82, '13183857684920026', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 6, 1, 1, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '999.00', '1999.00'),
(83, '13183857684920025', '后盾网实训高薪就业班', 27, 5, 1, 1, 1, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6808.00', '8808.00'),
(84, '13183857684920024', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 0, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '9911.00', '19911.00'),
(85, '13183857684920023', '后盾网实训高薪就业班', 27, 0, 0, 0, 1, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6809.00', '8809.00'),
(86, '13183857684920022', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 0, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '9912.00', '19912.00'),
(87, '13183857684920021', '后盾网实训高薪就业班', 27, 0, 0, 0, 1, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6810.00', '8810.00'),
(88, '13183857684920020', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 0, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '9913.00', '19913.00'),
(89, '13183857684920019', '后盾网实训高薪就业班', 27, 0, 0, 0, 1, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6811.00', '88011.00'),
(90, '13183857684920018', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 0, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '9914.00', '19914.00'),
(91, '13183857684920017', '后盾网实训高薪就业班', 27, 0, 0, 0, 1, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00'),
(92, '13183857684920016', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 0, 1, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '99.00', '199.00'),
(93, '13183857684920015', '后盾网实训高薪就业班', 27, 0, 0, 0, 1, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00'),
(94, '13183857684920014', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 1, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '99.00', '199.00'),
(95, '13183857684920013', '后盾网实训高薪就业班', 27, 0, 0, 1, 0, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00'),
(96, '13183857684920012', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 1, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '99.00', '199.00'),
(97, '13183857684920011', '后盾网实训高薪就业班', 27, 0, 0, 1, 0, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00'),
(98, '13183857684920010', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 1, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '99.00', '199.00'),
(99, '1318385768492009', '后盾网实训高薪就业班', 27, 0, 0, 1, 0, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00'),
(100, '1318385768492008', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 1, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '99.00', '199.00');
INSERT INTO `product` (`id`, `numbers`, `title`, `typeid`, `ppid`, `hot`, `drops`, `recommend`, `kucun`, `hits`, `picurl`, `picurls`, `content`, `addtime`, `inputer`, `price`, `yprice`) VALUES
(101, '1318385768492007', '后盾网实训高薪就业班', 27, 0, 0, 1, 0, 999, 0, '../houdunwang/1.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00'),
(102, '1318385768492006', '2011韩版新款秋装女装新品 优雅淑女休闲长袖格子衬衫女款C8S', 20, 0, 0, 1, 0, 999, 0, '../upload/131838402316706000.jpg', '预览1@../upload/13183840945459000.jpg#预览2@../upload/13183840943728000.jpg#预览3@../upload/131838409417289000.jpg#预览4@../upload/131838409412174000.jpg#预览5@../upload/131838409413231000.jpg#预览6@../upload/1318384095956000.jpg#预览7@../upload/13183840953909000.jpg#', '<p>\r\n	这个是一个商品的测试。</p>\r\n<p>\r\n	欢迎大家收看后盾网视频教程！希望同学们学有所成！</p>\r\n', 1318384135, '后盾网', '99.00', '199.00'),
(103, '1318385768492005', '后盾网实训高薪就业班', 27, 0, 0, 1, 0, 999, 0, '../houdunwang/2.jpg', '学员风采1@../upload/131838591523708000.jpg#上课中..@../upload/13183859159893000.jpg#上课中..@../upload/131838591527258000.jpg#学员风采@../upload/131838591512843000.jpg#学员风采@../upload/13183859159864000.jpg#', '<p>\r\n	北京后盾网成立于2003年,团队不仅是一个精研于互联网领域的实践者，还是一个推动行业进步、注重社会责任，为产业内外输送专业人才的先行者；目 前团队成员项目经验均在8年以上，现多名成员担任外资集团、企事业单位的金牌网络顾问；团队还曾多次为国内外多家上市集团、政府机关等众多行业的大小型项 目提供技术支持与顾问服务，其中包括新浪、搜狐、腾讯、保洁公司、联想、丰田、北京工商银行、FLUCK、ANSYS、长安汽车、新思路模特、中国一汽等 众多大家所熟知的知名企业。<br />\r\n	<br />\r\n	从2003年团队建设至今，我们积累了大量的团队协作及项目经验，这些宝贵的财富和我们内在积蓄的品质不是任 何其他机构可以比拟的，我们为此感到骄傲的同时也深深的意识到了中国互联网领域专业人才的稀缺；我们的团队需要新的人才，产业内外的众多大中小企业也需要 人才，甚至整个中国的互联网产业都需要大量的新血液注入，这方方面面的工作都离不开对人才的需求，可是专业人才是稀缺的这个不争事实也无是任何人或者机构 能短期内改变的；后盾网在自身发展同时，也始终没有忘记为产业内外培养人才。<br />\r\n	<br />\r\n	在互联网飞速发展的今天，团队凭借着多年经验以及对整个行业产业链的了解，我们深知什么样的人才是市场渴望的，所以我们有信心培养出更优秀的程序员!<br />\r\n	<br />\r\n	我们在业内、因为卓越，所以领先！<br />\r\n	你将在这里、因为后盾，人生精彩！<br />\r\n	&nbsp;</p>\r\n', 1318386006, '后盾网', '6800.00', '8800.00');

-- --------------------------------------------------------

--
-- 表的结构 `productlist`
--

CREATE TABLE IF NOT EXISTS `productlist` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `tid` int(5) NOT NULL,
  `typename` varchar(50) NOT NULL,
  `sd` int(5) NOT NULL,
  `idpath` varchar(200) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=34 ;

--
-- 转存表中的数据 `productlist`
--

INSERT INTO `productlist` (`id`, `tid`, `typename`, `sd`, `idpath`) VALUES
(1, 0, '女装', 1, '0'),
(2, 0, '男装', 1, '0'),
(3, 0, '鞋子', 1, '0'),
(4, 0, '时尚饰品', 1, '0'),
(5, 0, '家具饰品', 1, '0'),
(6, 0, '虚拟物品', 1, '0'),
(15, 1, '上衣', 2, '0_1'),
(16, 1, '下装', 2, '0_1'),
(17, 1, '服装配饰', 2, '0_1'),
(18, 15, '摇粒绒', 3, '0_1_15'),
(19, 15, '皮衣', 3, '0_1_15'),
(20, 15, 'T恤', 3, '0_1_15'),
(21, 2, '上衣', 2, '0_2'),
(22, 2, '下装', 2, '0_2'),
(23, 21, '背心', 3, '0_2_21'),
(24, 6, '培训', 2, '0_6'),
(25, 6, '光盘', 2, '0_6'),
(26, 6, '点卡', 2, '0_6'),
(27, 24, 'PHP培训', 3, '0_6_24'),
(28, 24, 'PHOTOSHOP', 3, '0_6_24'),
(29, 25, '前端架构', 3, '0_6_25'),
(30, 25, 'PHP项目', 3, '0_6_25'),
(31, 16, '西裤', 3, '0_1_16'),
(32, 17, 'ABC', 3, '0_1_17'),
(33, 17, '项链', 3, '0_1_17');

-- --------------------------------------------------------

--
-- 表的结构 `productorder`
--

CREATE TABLE IF NOT EXISTS `productorder` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `orderID` varchar(50) NOT NULL,
  `paymentState` int(1) NOT NULL,
  `orderState` int(1) NOT NULL,
  `kuaidi` varchar(50) NOT NULL,
  `yunfei` decimal(10,2) NOT NULL,
  `youhui` decimal(10,2) NOT NULL,
  `price` decimal(10,2) NOT NULL,
  `shren` varchar(50) NOT NULL,
  `shdizhi` varchar(225) NOT NULL,
  `mobile` varchar(20) NOT NULL,
  `tel` varchar(20) NOT NULL,
  `payment` varchar(50) NOT NULL,
  `dTime` varchar(50) NOT NULL,
  `feedback` text NOT NULL,
  `ip` varchar(20) NOT NULL,
  `addtime` int(30) NOT NULL,
  `username` varchar(225) NOT NULL,
  `youbian` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=gb2312 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `productpp`
--

CREATE TABLE IF NOT EXISTS `productpp` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `ppname` varchar(100) NOT NULL,
  `recommend` int(1) NOT NULL,
  `picurl` varchar(150) NOT NULL,
  `ppinfo` text NOT NULL,
  `pporder` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=12 ;

--
-- 转存表中的数据 `productpp`
--

INSERT INTO `productpp` (`id`, `ppname`, `recommend`, `picurl`, `ppinfo`, `pporder`) VALUES
(2, '后盾网', 1, '../upload/13183535986049000.gif', '后盾教育，专注于品质', 1),
(4, '劲霸', 1, '../upload/13183536888583000.jpg', '劲霸', 1),
(5, '法国鳄鱼', 1, '../upload/131835372031182000.jpg', '23', 1),
(6, '以纯', 1, '../upload/131835373620719000.jpg', '以纯', 1),
(7, '与狼共舞', 1, '../upload/131835375130716000.jpg', '与狼共舞', 1),
(8, '金利来', 1, '../upload/13183537653717000.jpg', '金利来', 1),
(9, '歌莉娅', 1, '../upload/131835380425818000.jpg', '歌莉娅', 1),
(10, '马克华菲', 1, '../upload/13183538206924000.jpg', '马克华菲', 1),
(11, '阿玛尼', 1, '../upload/131835366819910000.jpg', '阿玛尼', 1);

-- --------------------------------------------------------

--
-- 表的结构 `receive`
--

CREATE TABLE IF NOT EXISTS `receive` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `shren` varchar(50) NOT NULL,
  `shdizhi` varchar(200) NOT NULL,
  `youbian` varchar(30) NOT NULL,
  `tel` varchar(50) NOT NULL,
  `mobile` varchar(50) NOT NULL,
  `username` varchar(200) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=gb2312 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- 表的结构 `user`
--

CREATE TABLE IF NOT EXISTS `user` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  `email` varchar(150) NOT NULL,
  `tiwen` varchar(150) NOT NULL,
  `huida` varchar(150) NOT NULL,
  `zt` int(5) NOT NULL,
  `xingming` varchar(150) NOT NULL,
  `sex` varchar(100) NOT NULL,
  `mobile` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=31 ;

--
-- 转存表中的数据 `user`
--

INSERT INTO `user` (`id`, `username`, `password`, `email`, `tiwen`, `huida`, `zt`, `xingming`, `sex`, `mobile`) VALUES
(17, 'aaa@qq.com', '47bce5c74f589f4867dbd57e9ca9f808', 'aaa@qq.com', '', '', 2, '', '', ''),
(18, 'aa@qq.com', '4124bc0a9335c27f086f24ba207a4912', 'aa@qq.com', '', '', 2, '', '', ''),
(19, 'aaaa@qq.com', '74b87337454200d4d33f80c4663dc5e5', 'aaaa@qq.com', '', '', 2, '', '', ''),
(20, 'zzz@qq.com', 'f3abb86bd34cf4d52698f14c0da1dc60', 'zzz@qq.com', '', '', 2, '', '', ''),
(21, 'ywb@qq.com', '6cdfc743b01e1dc09a1f5cd3673d944b', 'ywb@qq.com', '', '', 2, '', '', ''),
(22, 'yiwenbing1987@163.com', '698d51a19d8a121ce581499d7b701668', 'yiwenbing1987@163.com', '', '', 2, '', '', ''),
(23, 'yyy@qq.com', '47bce5c74f589f4867dbd57e9ca9f808', 'yyy@qq.com', '', '', 2, '', '', ''),
(24, 'aaaaa@qq.com', '47bce5c74f589f4867dbd57e9ca9f808', 'aaaaa@qq.com', '', '', 2, '', '', ''),
(25, 'ccc@qq.com', '9df62e693988eb4e1e1444ece0578579', 'ccc@qq.com', '', '', 2, '', '', ''),
(26, 'yiwenbing11987@163.com', '23ca472302f49b3ea5592b146a312da0', 'yiwenbing11987@163.com', '', '', 2, '', '', ''),
(27, 'yiwenbing111987@163.com', '23ca472302f49b3ea5592b146a312da0', 'yiwenbing111987@163.com', '', '', 2, '', '', ''),
(28, 'sss@qq.com', '9f6e6800cfae7749eb6c486619254b9c', 'sss@qq.com', '', '', 2, '', '', ''),
(29, 'sss2@qq.com', '9f6e6800cfae7749eb6c486619254b9c', 'sss2@qq.com', '', '', 2, '', '', ''),
(30, 'dddddddd@qq.com', '77963b7a931377ad4ab5ad6a9cd718aa', 'dddddddd@qq.com', '', '', 2, '', '', '');

-- --------------------------------------------------------

--
-- 表的结构 `webconfig`
--

CREATE TABLE IF NOT EXISTS `webconfig` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `varname` varchar(50) NOT NULL,
  `varshowname` varchar(100) NOT NULL,
  `varinfo` varchar(100) NOT NULL,
  `vartype` varchar(20) NOT NULL,
  `varvalue` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=gb2312 AUTO_INCREMENT=28 ;

--
-- 转存表中的数据 `webconfig`
--

INSERT INTO `webconfig` (`id`, `varname`, `varshowname`, `varinfo`, `vartype`, `varvalue`) VALUES
(16, 'webname', '网站名称', '程序网站名称', 'string', '小易商城'),
(17, 'weburl', '网站地址', '网站URL地址,无需打http://', 'string', 'www.92php.net/shop/'),
(18, 'reguser', '是否启动会员注册', '开关控制怎们的会员注册状况', 'bool', 'Y'),
(19, 'webcopy', '网站版权', '用于咱们网站底部显示', 'strings', '2013-2014 版权所有'),
(20, 'userlogin', '会员注册是否审核', '开启的话注册会员就需要通过管理员手动批准', 'bool', 'N'),
(21, 'webtitle', '网站标题', '标题', 'string', '小易商城系统'),
(22, 'webkey', '网站关键词', '网站的关键词,用于seo使用', 'string', '商品'),
(23, 'webDescription', '网站描述', '描述网站', 'string', '电子商务网站'),
(24, 'webdir', '网站根目录', '网站根目录请不要以/结尾', 'string', '/shop/'),
(25, 'webuserreg', '会员注册审核', '会员注册是否需要审核', 'bool', 'N'),
(26, 'webtel', '订购热线', '订购热线', 'string', '15220187909'),
(27, 'webguest', '留言审核', '留言是否需要管理员审核', 'bool', 'N');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
